%implements s1068_b0_g3vnd_376_Outputs "C"

%function OutputsForTID(block, system, tid) Output
%if tid == 2
%assign ::GlobalCurrentTID = 2
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

int32_T chanIdx;
int32_T currentOffset;
int32_T i;
int32_T offsetFromMemBase;
int32_T uIdx;
int8_T rtAction;
int8_T rtPrevAction;
static const int8_T tmp[4] = %<(TLC_STR_CTX(10))>;
%closefile localVarDecl
%assign tlcOutputsFcnOfS300B1 = OpaqueTLCBlockFcn("Outputs", 300, 1, 376, 1, 0)
%assign tlcOutputsFcnOfS300B2 = OpaqueTLCBlockFcn("Outputs", 300, 2, 376, 1, 1)
%assign tlcOutputsFcnOfS300B3 = OpaqueTLCBlockFcn("Outputs", 300, 3, 376, 1, 2)
%assign tlcOutputsFcnOfS300B4 = OpaqueTLCBlockFcn("Outputs", 300, 4, 376, 1, 3)
%assign tlcOutputsFcnOfS300B5 = OpaqueTLCBlockFcn("Outputs", 300, 5, 376, 1, 4)
%assign tlcOutputsFcnOfS300B6 = OpaqueTLCBlockFcn("Outputs", 300, 6, 376, 1, 5)
%assign tlcOutputsFcnOfS300B7 = OpaqueTLCBlockFcn("Outputs", 300, 7, 376, 1, 6)
%assign tlcOutputsFcnOfS300B8 = OpaqueTLCBlockFcn("Outputs", 300, 8, 376, 1, 7)
%assign tlcOutputsFcnOfS300B9 = OpaqueTLCBlockFcn("Outputs", 300, 9, 376, 1, 8)
%assign tlcOutputsFcnOfS300B10 = OpaqueTLCBlockFcn("Outputs", 300, 10, 376, 1, 9)
%assign tlcOutputsFcnOfS300B11 = OpaqueTLCBlockFcn("Outputs", 300, 11, 376, 1, 10)
%assign tlcOutputsFcnOfS300B12 = OpaqueTLCBlockFcn("Outputs", 300, 12, 376, 1, 11)
%assign tlcOutputsFcnOfS300B13 = OpaqueTLCBlockFcn("Outputs", 300, 13, 376, 1, 12)
%assign tlcOutputsFcnOfS300B16 = OpaqueTLCBlockFcn("Outputs", 300, 16, 376, 1, 13)
%assign tlcOutputsFcnOfS300B19 = OpaqueTLCBlockFcn("Outputs", 300, 19, 376, 1, 14)
%assign tlcOutputsFcnOfS300B20 = OpaqueTLCBlockFcn("Outputs", 300, 20, 376, 1, 15)
%assign tlcOutputsFcnOfS300B21 = OpaqueTLCBlockFcn("Outputs", 300, 21, 376, 1, 16)
%assign tlcOutputsFcnOfS300B22 = OpaqueTLCBlockFcn("Outputs", 300, 22, 376, 1, 17)
%assign tlcOutputsFcnOfS300B23 = OpaqueTLCBlockFcn("Outputs", 300, 23, 376, 1, 18)
%assign tlcOutputsFcnOfS300B24 = OpaqueTLCBlockFcn("Outputs", 300, 24, 376, 1, 19)
%assign tlcOutputsFcnOfS300B25 = OpaqueTLCBlockFcn("Outputs", 300, 25, 376, 1, 20)
%assign tlcOutputsFcnOfS300B26 = OpaqueTLCBlockFcn("Outputs", 300, 26, 376, 1, 21)
%assign tlcOutputsFcnOfS300B27 = OpaqueTLCBlockFcn("Outputs", 300, 27, 376, 1, 22)
%assign tlcOutputsFcnOfS300B28 = OpaqueTLCBlockFcn("Outputs", 300, 28, 376, 1, 23)
%assign tlcOutputsFcnOfS300B31 = OpaqueTLCBlockFcn("Outputs", 300, 31, 376, 1, 24)
%assign tlcOutputsFcnOfS300B34 = OpaqueTLCBlockFcn("Outputs", 300, 34, 376, 1, 25)
%assign tlcOutputsFcnOfS300B35 = OpaqueTLCBlockFcn("Outputs", 300, 35, 376, 1, 26)
%assign tlcOutputsFcnOfS300B36 = OpaqueTLCBlockFcn("Outputs", 300, 36, 376, 1, 27)
%assign tlcOutputsFcnOfS300B37 = OpaqueTLCBlockFcn("Outputs", 300, 37, 376, 1, 28)
%assign tlcDisableFcnOfS290B14 = OpaqueTLCBlockFcn("Disable", 290, 14, 376, 1, 29)
%assign tlcEnableFcnOfS290B16 = OpaqueTLCBlockFcn("Enable", 290, 16, 376, 1, 30)
%assign tlcEnableFcnOfS290B19 = OpaqueTLCBlockFcn("Enable", 290, 19, 376, 1, 31)
%assign tlcOutputsFcnOfS290B0 = OpaqueTLCBlockFcn("Outputs", 290, 0, 376, 1, 32)
%assign tlcOutputsFcnOfS290B1 = OpaqueTLCBlockFcn("Outputs", 290, 1, 376, 1, 33)
%assign tlcOutputsFcnOfS290B3 = OpaqueTLCBlockFcn("Outputs", 290, 3, 376, 1, 34)
%assign tlcOutputsFcnOfS290B4 = OpaqueTLCBlockFcn("Outputs", 290, 4, 376, 1, 35)
%assign tlcOutputsFcnOfS290B5 = OpaqueTLCBlockFcn("Outputs", 290, 5, 376, 1, 36)
%assign tlcOutputsFcnOfS290B6 = OpaqueTLCBlockFcn("Outputs", 290, 6, 376, 1, 37)
%assign tlcOutputsFcnOfS290B7 = OpaqueTLCBlockFcn("Outputs", 290, 7, 376, 1, 38)
%assign tlcOutputsFcnOfS290B8 = OpaqueTLCBlockFcn("Outputs", 290, 8, 376, 1, 39)
%assign tlcOutputsFcnOfS290B9 = OpaqueTLCBlockFcn("Outputs", 290, 9, 376, 1, 40)
%assign tlcOutputsFcnOfS290B10 = OpaqueTLCBlockFcn("Outputs", 290, 10, 376, 1, 41)
%assign tlcOutputsFcnOfS290B11 = OpaqueTLCBlockFcn("Outputs", 290, 11, 376, 1, 42)
%assign tlcOutputsFcnOfS290B12 = OpaqueTLCBlockFcn("Outputs", 290, 12, 376, 1, 43)
%assign tlcOutputsFcnOfS290B14 = OpaqueTLCBlockFcn("Outputs", 290, 14, 376, 1, 44)
%assign tlcOutputsFcnOfS290B15 = OpaqueTLCBlockFcn("Outputs", 290, 15, 376, 1, 45)
%assign tlcOutputsFcnOfS290B16 = OpaqueTLCBlockFcn("Outputs", 290, 16, 376, 1, 46)
%assign tlcOutputsFcnOfS290B19 = OpaqueTLCBlockFcn("Outputs", 290, 19, 376, 1, 47)
%assign tlcUpdateFcnOfS290B14 = OpaqueTLCBlockFcn("Update", 290, 14, 376, 1, 48)
%assign tlcOutputsFcnOfS300B40 = OpaqueTLCBlockFcn("Outputs", 300, 40, 376, 1, 49)
%assign tlcOutputsFcnOfS300B41 = OpaqueTLCBlockFcn("Outputs", 300, 41, 376, 1, 50)
%assign tlcOutputsFcnOfS300B42 = OpaqueTLCBlockFcn("Outputs", 300, 42, 376, 1, 51)
%assign tlcOutputsFcnOfS300B43 = OpaqueTLCBlockFcn("Outputs", 300, 43, 376, 1, 52)
%assign tlcOutputsFcnOfS300B44 = OpaqueTLCBlockFcn("Outputs", 300, 44, 376, 1, 53)
%assign tlcOutputsFcnOfS300B46 = OpaqueTLCBlockFcn("Outputs", 300, 46, 376, 1, 54)
%assign tlcOutputsFcnOfS300B47 = OpaqueTLCBlockFcn("Outputs", 300, 47, 376, 1, 55)
%assign tlcOutputsFcnOfS300B48 = OpaqueTLCBlockFcn("Outputs", 300, 48, 376, 1, 56)
%assign tlcOutputsFcnOfS300B49 = OpaqueTLCBlockFcn("Outputs", 300, 49, 376, 1, 57)
%assign tlcOutputsFcnOfS300B50 = OpaqueTLCBlockFcn("Outputs", 300, 50, 376, 1, 58)
%assign tlcOutputsFcnOfS300B51 = OpaqueTLCBlockFcn("Outputs", 300, 51, 376, 1, 59)
%assign tlcOutputsFcnOfS300B52 = OpaqueTLCBlockFcn("Outputs", 300, 52, 376, 1, 60)
%assign tlcOutputsFcnOfS300B53 = OpaqueTLCBlockFcn("Outputs", 300, 53, 376, 1, 61)
%assign tlcOutputsFcnOfS300B54 = OpaqueTLCBlockFcn("Outputs", 300, 54, 376, 1, 62)
%assign tlcOutputsFcnOfS300B55 = OpaqueTLCBlockFcn("Outputs", 300, 55, 376, 1, 63)
%assign tlcOutputsFcnOfS300B56 = OpaqueTLCBlockFcn("Outputs", 300, 56, 376, 1, 64)
%assign tlcOutputsFcnOfS300B59 = OpaqueTLCBlockFcn("Outputs", 300, 59, 376, 1, 65)
%assign tlcOutputsFcnOfS300B62 = OpaqueTLCBlockFcn("Outputs", 300, 62, 376, 1, 66)
%assign tlcOutputsFcnOfS300B63 = OpaqueTLCBlockFcn("Outputs", 300, 63, 376, 1, 67)
%assign tlcOutputsFcnOfS300B64 = OpaqueTLCBlockFcn("Outputs", 300, 64, 376, 1, 68)
%assign tlcUpdateFcnOfS300B40 = OpaqueTLCBlockFcn("Update", 300, 40, 376, 1, 69)
%assign tlcUpdateFcnOfS300B41 = OpaqueTLCBlockFcn("Update", 300, 41, 376, 1, 70)
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[249], "Output",2)
/* {S!d2419}Outputs for Atomic SubSystem: '<S586>/Alignment Delay' */
%<SLibCG_DumpSSCode("/*@[143dd65*/",SLibCGIRGenReusableSysCall("Model_Target_AlignmentDelay", [], 249, 0, 6, 2, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[249]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

/* {E!d2419}End of Outputs for SubSystem: '<S586>/Alignment Delay' */

%endif
/* {S!d2448}Buffer: '<S647>/BufferIn' */
/*@>1400ea6*/uIdx/*@>10d98bc*/ = /*@>1441207*/0;
/*@>13efaa8*/for (/*@>144129e*/chanIdx = /*@>144129d*/0; /*@>14412a8*/chanIdx < /*@>14412a6*/2; /*@>14412a4*/chanIdx/*@>14412bd*/++) {
    /*@>1400e9e*/offsetFromMemBase/*@>10d98cd*/ = (/*@>1400ea3*/chanIdx/*@>1403004*/ << /*@>1403003*/8)/*@>10d98cc*/ + /*@>143838d*/Model_Target_DW./*@>144163f*/BufferIn_inBufPtrIdx;
/*@>13efabf*/    for (/*@>14412af*/i = /*@>14412ae*/0; /*@>14412b9*/i < /*@>14412b7*/8; /*@>14412b5*/i/*@>14412be*/++) {
        /*@>14383a5*/Model_Target_DW./*@>1441648*/BufferIn_CircBuf/*@>13e81da*/[/*@>140113a*/offsetFromMemBase/*@>13e81df*/ + /*@>140113c*/i]/*@>10d98df*/ = /*@>143711b*/Model_Target_B./*@>144161b*/crossfadedOutput/*@>14342d8*/[/*@>14342d3*/uIdx/*@>14342d1*/ + /*@>14342d5*/i];
    }
    /*@>1400e9a*/uIdx/*@>14412bf*/ += /*@>1400c5e*/8;
}
/*@>1438381*/Model_Target_DW./*@>144163c*/BufferIn_inBufPtrIdx/*@>14412c0*/ += /*@>1400e97*/8;
/*@>10d98e9*/if (/*@>1438393*/Model_Target_DW./*@>1441642*/BufferIn_inBufPtrIdx/*@>10d98e8*/ >= /*@>1400e92*/256) {
    /*@>1438399*/Model_Target_DW./*@>1441645*/BufferIn_inBufPtrIdx/*@>14412c1*/ -= /*@>1400e8f*/256;
}
/* {E!d2448}End of Buffer: '<S647>/BufferIn' */

/* {S!d2450}Buffer: '<S647>/BufferOut' */
/*@>1400e8b*/uIdx/*@>10d9925*/ = /*@>144120a*/0;
/*@>13efa74*/for (/*@>144127c*/chanIdx = /*@>144127b*/0; /*@>1441286*/chanIdx < /*@>1441284*/8; /*@>1441282*/chanIdx/*@>14412c2*/++) {
    /*@>1400e85*/currentOffset/*@>10d9941*/ = (/*@>1400e88*/chanIdx/*@>140300c*/ << /*@>140300b*/8)/*@>10d9940*/ + /*@>14383ab*/Model_Target_DW./*@>144164b*/BufferOut_outBufPtrIdx;
/*@>13efa8b*/    for (/*@>144128d*/i = /*@>144128c*/0; /*@>1441297*/i < /*@>1441295*/8; /*@>1441293*/i/*@>14412c3*/++) {
        /*@>1437121*/Model_Target_B./*@>144161e*/BufferOut/*@>13e8220*/[/*@>1401146*/uIdx/*@>13e8225*/ + /*@>1401148*/i]/*@>10d9953*/ = /*@>14383b7*/Model_Target_DW./*@>1441651*/BufferOut_CircBuf/*@>14342e1*/[/*@>14342dc*/currentOffset/*@>14342da*/ + /*@>14342de*/i];
    }
    /*@>1400e81*/uIdx/*@>14412c4*/ += /*@>1400c60*/8;
    /*@>1400e7f*/currentOffset/*@>10d995b*/ = /*@>14383bd*/Model_Target_DW./*@>1441654*/BufferOut_outBufPtrIdx/*@>10d995a*/ + /*@>1400c5f*/8;
}
/*@>10d995e*/if (/*@>1400e7d*/currentOffset/*@>10d995d*/ == /*@>1400e7c*/256) {
    /*@>1400e7a*/currentOffset/*@>10d9960*/ = /*@>144120d*/0;
}
/*@>14383b1*/Model_Target_DW./*@>144164e*/BufferOut_outBufPtrIdx/*@>10d9962*/ = /*@>1400e77*/currentOffset;
/* {E!d2450}End of Buffer: '<S647>/BufferOut' */
%if !WHITE_SPACE(tlcOutputsFcnOfS300B1)

/* {S!d2452}S-Function (TOP_MEX): '<S670>/TOP' */
%<SLibCG_DumpSSCode("/*@[143dcd3*/",tlcOutputsFcnOfS300B1,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B2)
/* {S!d2454}S-Function (TOP_MEX): '<S670>/TOP1' */
%<SLibCG_DumpSSCode("/*@[143dcd5*/",tlcOutputsFcnOfS300B2,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B3)
/* {S!d2456}S-Function (TOP_MEX): '<S670>/TOP2' */
%<SLibCG_DumpSSCode("/*@[143dcd7*/",tlcOutputsFcnOfS300B3,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B4)
/* {S!d2458}S-Function (TOP_MEX): '<S670>/TOP3' */
%<SLibCG_DumpSSCode("/*@[143dcd9*/",tlcOutputsFcnOfS300B4,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B5)
/* {S!d2460}S-Function (TOP_MEX): '<S670>/TOP4' */
%<SLibCG_DumpSSCode("/*@[143dcdb*/",tlcOutputsFcnOfS300B5,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B6)
/* {S!d2462}S-Function (TOP_MEX): '<S670>/TOP5' */
%<SLibCG_DumpSSCode("/*@[143dcdd*/",tlcOutputsFcnOfS300B6,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B7)
/* {S!d2464}M-S-Function: '<S663>/FeaturePath' */
%<SLibCG_DumpSSCode("/*@[143dcde*/",tlcOutputsFcnOfS300B7,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B8)
/* {S!d2466}S-Function (TOP_MEX): '<S660>/TOP' */
%<SLibCG_DumpSSCode("/*@[143dce0*/",tlcOutputsFcnOfS300B8,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B9)
/* {S!d2468}S-Function (TOP_MEX): '<S660>/TOP1' */
%<SLibCG_DumpSSCode("/*@[143dce2*/",tlcOutputsFcnOfS300B9,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B10)
/* {S!d2470}S-Function (TOP_MEX): '<S660>/TOP3' */
%<SLibCG_DumpSSCode("/*@[143dce4*/",tlcOutputsFcnOfS300B10,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B11)
/* {S!d2472}S-Function (TOP_MEX): '<S660>/TOP4' */
%<SLibCG_DumpSSCode("/*@[143dce6*/",tlcOutputsFcnOfS300B11,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B12)
/* {S!d2474}M-S-Function: '<S660>/FeaturePath' */
%<SLibCG_DumpSSCode("/*@[143dce7*/",tlcOutputsFcnOfS300B12,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B13)
/* {S!d2421}S-Function (InitTriggerControl): '<S738>/ITC1' */
%<SLibCG_DumpSSCode("/*@[143dce9*/",tlcOutputsFcnOfS300B13,"/*@]*/")>\
%endif
/* {E!d2421}End of Outputs for S-Function (InitTriggerControl): '<S738>/ITC1' */
%if !WHITE_SPACE(tlcOutputsFcnOfS300B16)

/* {S!d2423}S-Function (InitTriggerControl): '<S746>/ITC1' */
%<SLibCG_DumpSSCode("/*@[143dceb*/",tlcOutputsFcnOfS300B16,"/*@]*/")>\
%endif
/* {E!d2423}End of Outputs for S-Function (InitTriggerControl): '<S746>/ITC1' */
%if !WHITE_SPACE(tlcOutputsFcnOfS300B19)

/* {S!d2476}S-Function (TOP_MEX): '<S658>/TOP' */
%<SLibCG_DumpSSCode("/*@[143dced*/",tlcOutputsFcnOfS300B19,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B20)
/* {S!d2478}M-S-Function: '<S654>/FeaturePath' */
%<SLibCG_DumpSSCode("/*@[143dcee*/",tlcOutputsFcnOfS300B20,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B21)
/* {S!d2480}M-S-Function: '<S647>/FeaturePath' */
%<SLibCG_DumpSSCode("/*@[143dcef*/",tlcOutputsFcnOfS300B21,"/*@]*/")>\
%endif
/* {S!d2482}Buffer: '<S648>/BufferIn' */
/*@>1400e73*/uIdx/*@>10d99a7*/ = /*@>1441210*/0;
/*@>13efa3f*/for (/*@>144126b*/chanIdx = /*@>144126a*/0; /*@>1441275*/chanIdx < /*@>1441273*/2; /*@>1441271*/chanIdx/*@>14412c5*/++) {
    /*@>1400e6b*/offsetFromMemBase/*@>10d99b8*/ = (/*@>1400e70*/chanIdx/*@>1403014*/ << /*@>1403013*/8)/*@>10d99b7*/ + /*@>14383cf*/Model_Target_DW./*@>144165a*/BufferIn_inBufPtrIdx_e;
    /*@>142e17c*/memcpy(&/*@>14383db*/Model_Target_DW./*@>1441660*/BufferIn_CircBuf_l/*@>1426aa0*/[/*@>1426a8a*/offsetFromMemBase], &/*@>143712a*/Model_Target_AlignmentDelay_B./*@>1441621*/audioOut/*@>1426aab*/[/*@>1426a9b*/uIdx], /*@>1426aad*/sizeof(real32_T)/*@>143f2ea*/ << /*@>143f2e9*/5U);
    /*@>1400e67*/uIdx/*@>14412c6*/ += /*@>1400c61*/32;
}
/*@>14383c3*/Model_Target_DW./*@>1441657*/BufferIn_inBufPtrIdx_e/*@>14412c7*/ += /*@>1400e64*/32;
/*@>10d99d4*/if (/*@>14383d5*/Model_Target_DW./*@>144165d*/BufferIn_inBufPtrIdx_e/*@>10d99d3*/ >= /*@>1400e5f*/256) {
    /*@>14383e1*/Model_Target_DW./*@>1441663*/BufferIn_inBufPtrIdx_e/*@>14412c8*/ -= /*@>1400e5c*/256;
}
/* {E!d2482}End of Buffer: '<S648>/BufferIn' */

/* {S!d2484}Buffer: '<S648>/BufferOut' */
/*@>1400e58*/uIdx/*@>10d9a10*/ = /*@>1441213*/0;
/*@>1400e4c*/offsetFromMemBase/*@>10d9a46*/ = /*@>14383ed*/Model_Target_DW./*@>1441666*/BufferOut_outBufPtrIdx_e/*@>10d9a45*/ + /*@>1400c62*/32;
/*@>13efa0b*/for (/*@>144125a*/chanIdx = /*@>1441259*/0; /*@>1441264*/chanIdx < /*@>1441262*/6; /*@>1441260*/chanIdx/*@>14412c9*/++) {
    /*@>1400e52*/currentOffset/*@>10d9a2c*/ = (/*@>1400e55*/chanIdx/*@>140301c*/ << /*@>140301b*/8)/*@>10d9a2b*/ + /*@>14383f9*/Model_Target_DW./*@>144166c*/BufferOut_outBufPtrIdx_e;
    /*@>142e17e*/memcpy(&/*@>1437130*/Model_Target_B./*@>1441624*/BufferOut_c/*@>1426a48*/[/*@>1426a32*/uIdx], &/*@>14383ff*/Model_Target_DW./*@>144166f*/BufferOut_CircBuf_j/*@>1426a53*/[/*@>1426a43*/currentOffset], /*@>1426a55*/sizeof(real32_T)/*@>143f2ed*/ << /*@>143f2ec*/5U);
    /*@>1400e4e*/uIdx/*@>14412ca*/ += /*@>1400c63*/32;
}
/*@>10d9a49*/if (/*@>14383f3*/Model_Target_DW./*@>1441669*/BufferOut_outBufPtrIdx_e/*@>14197e5*/ + /*@>14197e8*/32/*@>10d9a48*/ == /*@>1400e49*/256) {
    /*@>1400e47*/offsetFromMemBase/*@>10d9a4b*/ = /*@>1441216*/0;
}
/*@>1438405*/Model_Target_DW./*@>1441672*/BufferOut_outBufPtrIdx_e/*@>10d9a4d*/ = /*@>1400e44*/offsetFromMemBase;
/* {E!d2484}End of Buffer: '<S648>/BufferOut' */
%if !WHITE_SPACE(tlcOutputsFcnOfS300B22)

/* {S!d2486}M-S-Function: '<S759>/FeaturePath' */
%<SLibCG_DumpSSCode("/*@[143dcf0*/",tlcOutputsFcnOfS300B22,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B23)
/* {S!d2488}S-Function (TOP_MEX): '<S756>/TOP' */
%<SLibCG_DumpSSCode("/*@[143dcf2*/",tlcOutputsFcnOfS300B23,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B24)
/* {S!d2490}S-Function (TOP_MEX): '<S756>/TOP1' */
%<SLibCG_DumpSSCode("/*@[143dcf4*/",tlcOutputsFcnOfS300B24,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B25)
/* {S!d2492}S-Function (TOP_MEX): '<S756>/TOP3' */
%<SLibCG_DumpSSCode("/*@[143dcf6*/",tlcOutputsFcnOfS300B25,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B26)
/* {S!d2494}S-Function (TOP_MEX): '<S756>/TOP4' */
%<SLibCG_DumpSSCode("/*@[143dcf8*/",tlcOutputsFcnOfS300B26,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B27)
/* {S!d2496}M-S-Function: '<S756>/FeaturePath' */
%<SLibCG_DumpSSCode("/*@[143dcf9*/",tlcOutputsFcnOfS300B27,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B28)
/* {S!d2425}S-Function (InitTriggerControl): '<S822>/ITC1' */
%<SLibCG_DumpSSCode("/*@[143dcfb*/",tlcOutputsFcnOfS300B28,"/*@]*/")>\
%endif
/* {E!d2425}End of Outputs for S-Function (InitTriggerControl): '<S822>/ITC1' */
%if !WHITE_SPACE(tlcOutputsFcnOfS300B31)

/* {S!d2427}S-Function (InitTriggerControl): '<S830>/ITC1' */
%<SLibCG_DumpSSCode("/*@[143dcfd*/",tlcOutputsFcnOfS300B31,"/*@]*/")>\
%endif
/* {E!d2427}End of Outputs for S-Function (InitTriggerControl): '<S830>/ITC1' */
%if !WHITE_SPACE(tlcOutputsFcnOfS300B34)

/* {S!d2498}S-Function (TOP_MEX): '<S754>/TOP' */
%<SLibCG_DumpSSCode("/*@[143dcff*/",tlcOutputsFcnOfS300B34,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B35)
/* {S!d2500}M-S-Function: '<S750>/FeaturePath' */
%<SLibCG_DumpSSCode("/*@[143dd00*/",tlcOutputsFcnOfS300B35,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B36)
/* {S!d2502}M-S-Function: '<S648>/FeaturePath' */
%<SLibCG_DumpSSCode("/*@[143dd01*/",tlcOutputsFcnOfS300B36,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B37)
/* {S!d2504}S-Function (TOP_MEX): '<S838>/TOP' */
%<SLibCG_DumpSSCode("/*@[143dd03*/",tlcOutputsFcnOfS300B37,"/*@]*/")>\
%endif
/* {S!d2506}Selector: '<S586>/Selector' */
/*@>142e180*/memcpy(%<SLibCG_DumpSSCode("/*@[143e06b*/",(SLibCG_BOCSCAddr(309, 64, "", -1, "", 0)),"/*@]*/")>, &/*@>1437136*/Model_Target_B./*@>1441627*/audioOut_n4/*@>14269ed*/[/*@>14269e1*/0], /*@>14269ef*/sizeof(real32_T)/*@>143f2f0*/ << /*@>143f2ef*/6U);
/* {S!d2550}SwitchCase: '<S649>/Switch Case' */
/*@>1400fe2*/rtPrevAction/*@>10d95f1*/ = /*@>143840b*/Model_Target_DW./*@>1441675*/SwitchCase_ActiveSubsystem;
/*@>140ff58*/if (%<SLibCG_DumpSSCode("/*@[143e016*/",(SLibCG_SE(SLibCG_BOCSC(517, 1, "", -1, "", 0))),"/*@]*/")>/*@>13fb596*/ == /*@>14011e1*/1) {
    /*@>140ff5c*/rtAction/*@>140ff5b*/ = /*@>144121c*/0;
} else {
    /*@>1400fe0*/rtAction/*@>10d95f7*/ = /*@>1441219*/1;
}
/*@>1438411*/Model_Target_DW./*@>1441678*/SwitchCase_ActiveSubsystem/*@>10d95fb*/ = /*@>1400fdc*/rtAction;
/*@>10d95ff*/if ((/*@>1400fd6*/rtPrevAction/*@>10d95fe*/ != /*@>1400fd8*/rtAction)/*@>143f310*/ && (/*@>14011e2*/rtPrevAction/*@>1402ffc*/ == /*@>1402ff9*/0)) {
%if !WHITE_SPACE(tlcDisableFcnOfS290B14)
    /* {S!d2508}Disable for M-S-Function: '<S841>/TSP' */
%<SLibCG_DumpSSCode("/*@[143dd07*/",tlcDisableFcnOfS290B14,"/*@]*/")>\
%endif
}
/*@>1404c86*/if (/*@>1400fd4*/rtAction/*@>1404c85*/ == /*@>1404c88*/0) {
    real32_T absLeft;
    real32_T absRight;
    real32_T curL;
    real32_T curR;
    real32_T sumOfEnergies;
    /*@>10d9607*/if (/*@>1400fd0*/rtPrevAction/*@>140772d*/ != /*@>14075fc*/0) {
%if !WHITE_SPACE(tlcEnableFcnOfS290B16)
        /* {S!d2429}Enable for IfAction SubSystem: '<S649>/Mono Detector' incorporates:
 *  ActionPort: '<S835>/Action Port'
 */
        /* {S!d2430}Enable for S-Function (InitTriggerControl): '<S853>/ITC1' */
        /* {S!d2510}Enable for SwitchCase: '<S649>/Switch Case' */
%<SLibCG_DumpSSCode("/*@[143dd09*/",tlcEnableFcnOfS290B16,"/*@]*/")>\
        /* {E!d2430}End of Enable for S-Function (InitTriggerControl): '<S853>/ITC1' */
%endif
%if !WHITE_SPACE(tlcEnableFcnOfS290B19)

        /* {S!d2432}Enable for S-Function (InitTriggerControl): '<S845>/ITC1' */
%<SLibCG_DumpSSCode("/*@[143dd0b*/",tlcEnableFcnOfS290B19,"/*@]*/")>\
        /* {E!d2432}End of Enable for S-Function (InitTriggerControl): '<S845>/ITC1' */
        /* {E!d2429}End of Enable for SubSystem: '<S649>/Mono Detector' */
%endif
    }
%if !WHITE_SPACE(tlcOutputsFcnOfS290B0)
    /* {S!d2435}Outputs for IfAction SubSystem: '<S649>/Mono Detector' incorporates:
 *  ActionPort: '<S835>/Action Port'
 */
    /* {S!d2512}S-Function (TOP_MEX): '<S842>/TOP10' */
%<SLibCG_DumpSSCode("/*@[143dd0d*/",tlcOutputsFcnOfS290B0,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS290B1)
    /* {S!d2514}S-Function (TOP_MEX): '<S842>/TOP11' */
%<SLibCG_DumpSSCode("/*@[143dd0f*/",tlcOutputsFcnOfS290B1,"/*@]*/")>\
%endif
    /* {S!d2516}MATLAB Function: '<S844>/PoolIirProcess' incorporates:
 *  Selector: '<S586>/Selector'
 */
    /*  Process function for Pooliir */
    /*  */
    /*  Parameters: */
    /*    x:              input channels [frame size x number of inputs] */
    /*    NumStages:      array of filter lengths per channel [NumChannels x 1] */
    /*    CoeffsTarget:   coefficient set used for the specific target [total sim filter lengths x 1] */
    /*   */
    /*  Global parameters: */
    /*    states: working memory set up during roommode reset/init CRL */
    /*                    function call [StatesSize x 1] */
    /* -------------------------------------------------------------------------- */
    /* MATLAB Function 'PoolIirWithReset/PoolIir/TargetSpecific/PoolIirProcess': '<S848>:1' */
    /*  Extract configuration information from inputs */
    /* '<S848>:1:15' [~, NumChannels] = size(x); */
    /*  Initialize variables */
    /* '<S848>:1:20' VariantStr = char(VariantUint8); */
    /* '<S848>:1:22' if(coder.target('MATLAB') || coder.target('Sfun')) */
    /* '<S848>:1:29' else */
    /* '<S848>:1:30' switch(VariantStr) */
    /* '<S848>:1:31' case{"Hexagon"} */
    /* '<S848>:1:32' y = pooliir_hexagon_process(single(x), single(states)); */
    /*@>142c55c*/pooliir_process(%<SLibCG_DumpSSCode("/*@[143dffa*/",(SLibCG_BOCSCAddr(342, 64, "", -1, "", 0)),"/*@]*/")>, %<SLibCG_DumpSSCode("/*@[143dfdd*/",(SLibCG_BOCSCAddr(309, 64, "", -1, "", 0)),"/*@]*/")>, %<SLibCG_DumpSSCode("/*@[143dfc0*/",(SLibCG_CSCDWAddr(231, 33, "", -1, "", 0)),"/*@]*/")>);
%if !WHITE_SPACE(tlcOutputsFcnOfS290B3)
    /* {S!d2518}S-Function (TOP_MEX): '<S842>/TOP' */
%<SLibCG_DumpSSCode("/*@[143dd11*/",tlcOutputsFcnOfS290B3,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS290B4)
    /* {S!d2520}S-Function (TOP_MEX): '<S842>/TOP1' */
%<SLibCG_DumpSSCode("/*@[143dd13*/",tlcOutputsFcnOfS290B4,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS290B5)
    /* {S!d2522}S-Function (TOP_MEX): '<S842>/TOP2' */
%<SLibCG_DumpSSCode("/*@[143dd15*/",tlcOutputsFcnOfS290B5,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS290B6)
    /* {S!d2524}S-Function (TOP_MEX): '<S842>/TOP3' */
%<SLibCG_DumpSSCode("/*@[143dd17*/",tlcOutputsFcnOfS290B6,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS290B7)
    /* {S!d2526}S-Function (TOP_MEX): '<S842>/TOP4' */
%<SLibCG_DumpSSCode("/*@[143dd19*/",tlcOutputsFcnOfS290B7,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS290B8)
    /* {S!d2528}S-Function (TOP_MEX): '<S842>/TOP5' */
%<SLibCG_DumpSSCode("/*@[143dd1b*/",tlcOutputsFcnOfS290B8,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS290B9)
    /* {S!d2530}S-Function (TOP_MEX): '<S842>/TOP7' */
%<SLibCG_DumpSSCode("/*@[143dd1d*/",tlcOutputsFcnOfS290B9,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS290B10)
    /* {S!d2532}S-Function (TOP_MEX): '<S842>/TOP6' */
%<SLibCG_DumpSSCode("/*@[143dd1f*/",tlcOutputsFcnOfS290B10,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS290B11)
    /* {S!d2534}S-Function (TOP_MEX): '<S842>/TOP8' */
%<SLibCG_DumpSSCode("/*@[143dd21*/",tlcOutputsFcnOfS290B11,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS290B12)
    /* {S!d2536}S-Function (TOP_MEX): '<S842>/TOP9' */
%<SLibCG_DumpSSCode("/*@[143dd23*/",tlcOutputsFcnOfS290B12,"/*@]*/")>\
%endif
    /* {S!d2538}MATLAB Function: '<S835>/Mono Detector' incorporates:
 *  BusCreator generated from: '<S835>/Mono Detector'
 *  DownSample: '<S835>/Downsample'
 *  DownSample: '<S835>/Downsample1'
 *  Selector: '<S586>/Selector'
 */
    /* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 2/Mono Detector/Mono Detector/Mono Detector': '<S839>:1' */
    /*  basically isStereo, since we turn on SPUM if input is stereo */
    /* '<S839>:1:13' if isempty(zeroLevelCount) */
    /* '<S839>:1:14' if isempty(Llevel) */
    /* '<S839>:1:15' if isempty(Rlevel) */
    /* '<S839>:1:16' if isempty(smoothedSumOfEnergies) */
    /* '<S839>:1:17' if isempty(smoothedEnergyOfSum) */
    /* '<S839>:1:18' if isempty(levelCenter) */
    /* '<S839>:1:19' if isempty(lastSpumOn) */
    /* '<S839>:1:21' absLeft = abs(L); */
    /*@>1400cf7*/absLeft/*@>10d9d4d*/ = /*@>142c572*/qhmath_abs_f(%<SLibCG_DumpSSCode("/*@[143de19*/",(SLibCG_BOCSC(309, 64, "", -1, "", 0)),"/*@]*/")>);
    /* '<S839>:1:22' absRight = abs(R); */
    /*@>1400cf5*/absRight/*@>10d9d50*/ = /*@>142c574*/qhmath_abs_f(%<SLibCG_DumpSSCode("/*@[143ddfc*/",(SLibCG_BOCSC(309, 64, "", -1, "", 32)),"/*@]*/")>);
    /*  Recursive averaging */
    /* '<S839>:1:25' a1 = monoDetectorTunable.levelPole; */
    /* '<S839>:1:26' b0 = monoDetectorTunable.levelGain; */
    /* '<S839>:1:27' Llevel = Llevel * a1 +  absLeft * b0; */
    /*@>1438441*/Model_Target_DW./*@>144168a*/Llevel/*@>10d9c65*/ = /*@>1438447*/Model_Target_DW./*@>144168d*/Llevel/*@>1402ff2*/ * %<SLibCG_DumpSSCode("/*@[143dfa3*/",(SLibCG_SE(SLibCG_BOCSC(331, 1, "", -1, "", 0))),"/*@]*/")>/*@>10d9c9c*/ + /*@>1400d49*/absLeft/*@>1402ff6*/ * %<SLibCG_DumpSSCode("/*@[143df87*/",(SLibCG_SE(SLibCG_BOCSC(332, 1, "", -1, "", 0))),"/*@]*/")>;
    /* '<S839>:1:28' Rlevel = Rlevel * a1 +  absRight * b0; */
    /*@>143844d*/Model_Target_DW./*@>1441690*/Rlevel/*@>10d9c68*/ = /*@>1438453*/Model_Target_DW./*@>1441693*/Rlevel/*@>1402fea*/ * %<SLibCG_DumpSSCode("/*@[143df6b*/",(SLibCG_SE(SLibCG_BOCSC(331, 1, "", -1, "", 0))),"/*@]*/")>/*@>10d9c9f*/ + /*@>1400d43*/absRight/*@>1402fee*/ * %<SLibCG_DumpSSCode("/*@[143df4f*/",(SLibCG_SE(SLibCG_BOCSC(332, 1, "", -1, "", 0))),"/*@]*/")>;
    /*  Compute saturated signals from predetermined miss-match tolerance */
    /* '<S839>:1:31' LlevelSat = min(Llevel, Rlevel*monoDetectorTunable.leftRightMatchTolerance); */
    /* '<S839>:1:32' RlevelSat = min(Rlevel, Llevel*monoDetectorTunable.leftRightMatchTolerance); */
    /*  Compute mono content variables */
    /* '<S839>:1:35' curL = hpfL * RlevelSat; */
    /*@>1400d3f*/curL/*@>10d9c69*/ = /*@>142c576*/fminf(/*@>1438459*/Model_Target_DW./*@>1441696*/Rlevel, /*@>143845f*/Model_Target_DW./*@>1441699*/Llevel/*@>1402fe6*/ * %<SLibCG_DumpSSCode("/*@[143df33*/",(SLibCG_SE(SLibCG_BOCSC(337, 1, "", -1, "", 0))),"/*@]*/")>)/*@>1402fe2*/ * %<SLibCG_DumpSSCode("/*@[143df17*/",(SLibCG_SE(SLibCG_BOCSC(342, 64, "", -1, "", 0))),"/*@]*/")>;
    /* '<S839>:1:36' curR = hpfR * LlevelSat; */
    /*@>1400d3d*/curR/*@>10d9c6a*/ = /*@>142c578*/fminf(/*@>1438465*/Model_Target_DW./*@>144169c*/Llevel, /*@>143846b*/Model_Target_DW./*@>144169f*/Rlevel/*@>1402fde*/ * %<SLibCG_DumpSSCode("/*@[143defa*/",(SLibCG_SE(SLibCG_BOCSC(337, 1, "", -1, "", 0))),"/*@]*/")>)/*@>1402fda*/ * %<SLibCG_DumpSSCode("/*@[143dede*/",(SLibCG_SE(SLibCG_BOCSC(342, 64, "", -1, "", 32))),"/*@]*/")>;
    /* '<S839>:1:37' sumOfEnergies = curL^2 + curR^2; */
    /*@>1400d3b*/sumOfEnergies/*@>10d9c6b*/ = /*@>1400ceb*/curL/*@>1402fd2*/ * /*@>1400ce9*/curL/*@>10d9ca2*/ + /*@>1400ce7*/curR/*@>1402fd6*/ * /*@>1400ce5*/curR;
    /*  tgtX2 */
    /* '<S839>:1:38' energyOfSum = 0.5*(curL + curR)^2; */
    /*@>1400cf3*/curL/*@>14412cb*/ += /*@>1400d37*/curR;
    /*@>1400cfb*/curL/*@>10d9d45*/ = /*@>1400ce3*/curL/*@>1402fce*/ * /*@>1400ce1*/curL/*@>1402fca*/ * /*@>1400cd8*/0.5F;
    /*  tgtX2Center */
    /*  Check if signal has been low for awhile */
    /* '<S839>:1:41' if (absLeft + absRight) < monoDetectorTunable.thresholdZeroLevel */
    /*@>10d9cbd*/if (/*@>1400d35*/absLeft/*@>10d9ca4*/ + /*@>1400d33*/absRight/*@>10d9ca5*/ < %<SLibCG_DumpSSCode("/*@[143dd88*/",(SLibCG_SE(SLibCG_BOCSC(338, 1, "", -1, "", 0))),"/*@]*/")>) {
        /* '<S839>:1:42' zeroLevelCount = zeroLevelCount + 1; */
        /*@>1438471*/Model_Target_DW./*@>14416a2*/zeroLevelCount/*@>14412cc*/++;
    } else {
        /* '<S839>:1:43' else */
        /* '<S839>:1:44' zeroLevelCount = 0; */
        /*@>143847d*/Model_Target_DW./*@>14416a5*/zeroLevelCount/*@>10d9c73*/ = /*@>1400d2b*/0.0;
    }
    /*  Pole selection (determine LPF coefficient) for least square smoothing */
    /*  If the signal level is very low (or zero) for awhile, rest params and  */
    /*  select correct poles so that we don't miss fast changes in input */
    /* '<S839>:1:50' if zeroLevelCount > maxZeroLevelCount */
    /*@>10d9cc4*/if (/*@>1438483*/Model_Target_DW./*@>14416a8*/zeroLevelCount/*@>10d9ca7*/ > /*@>1400ce0*/Model_Target_maxZeroLevelCount) {
        /* '<S839>:1:51' sumOfEnergies = single(0); */
        /*@>1400d27*/sumOfEnergies/*@>10d9c75*/ = /*@>1400cd7*/0.0F;
        /* '<S839>:1:52' energyOfSum = single(0); */
        /*@>1400d23*/curL/*@>10d9c76*/ = /*@>1400cd6*/0.0F;
        /* '<S839>:1:53' smoothedSumOfEnergies = single(0); */
        /*@>1438489*/Model_Target_DW./*@>14416ab*/smoothedSumOfEnergies/*@>10d9c77*/ = /*@>1400cd5*/0.0F;
        /* '<S839>:1:54' smoothedEnergyOfSum = single(0); */
        /*@>143848f*/Model_Target_DW./*@>14416ae*/smoothedEnergyOfSum/*@>10d9c78*/ = /*@>1400cd4*/0.0F;
        /* '<S839>:1:55' lsPole = monoDetectorTunable.lsSmoothResetPole; */
        /*@>1400d11*/absLeft/*@>10d9c7a*/ = %<SLibCG_DumpSSCode("/*@[143dec1*/",(SLibCG_SE(SLibCG_BOCSC(335, 1, "", -1, "", 0))),"/*@]*/")>;
        /* '<S839>:1:56' lsGain = monoDetectorTunable.lsSmoothResetGain; */
        /*@>1400d05*/absRight/*@>10d9c7c*/ = %<SLibCG_DumpSSCode("/*@[143dea5*/",(SLibCG_SE(SLibCG_BOCSC(336, 1, "", -1, "", 0))),"/*@]*/")>;
        /* '<S839>:1:57' zeroLevelCount = maxZeroLevelCount + 1; */
        /*@>14384b9*/Model_Target_DW./*@>14416c3*/zeroLevelCount/*@>10d9c7d*/ = /*@>1400cd3*/694.0;
    } else {
        /* '<S839>:1:58' else */
        /* '<S839>:1:59' lsPole = monoDetectorTunable.lsSmoothPole; */
        /*@>1400d25*/absLeft/*@>10d9c7f*/ = %<SLibCG_DumpSSCode("/*@[143de89*/",(SLibCG_SE(SLibCG_BOCSC(333, 1, "", -1, "", 0))),"/*@]*/")>;
        /* '<S839>:1:60' lsGain = monoDetectorTunable.lsSmoothGain; */
        /*@>1400d21*/absRight/*@>10d9c81*/ = %<SLibCG_DumpSSCode("/*@[143de6d*/",(SLibCG_SE(SLibCG_BOCSC(334, 1, "", -1, "", 0))),"/*@]*/")>;
    }
    /*  Least square smoothing  */
    /* '<S839>:1:64' smoothedSumOfEnergies = lsPole * smoothedSumOfEnergies + lsGain * sumOfEnergies; */
    /*@>1438495*/Model_Target_DW./*@>14416b1*/smoothedSumOfEnergies/*@>10d9c86*/ = /*@>1400d1b*/absLeft/*@>1402fc2*/ * /*@>143849b*/Model_Target_DW./*@>14416b4*/smoothedSumOfEnergies/*@>10d9caa*/ + /*@>1400d17*/absRight/*@>1402fc6*/ * /*@>1400d15*/sumOfEnergies;
    /* '<S839>:1:65' smoothedEnergyOfSum = lsPole * smoothedEnergyOfSum + lsGain * energyOfSum; */
    /*@>14384a1*/Model_Target_DW./*@>14416b7*/smoothedEnergyOfSum/*@>10d9c8b*/ = /*@>1400d0f*/absLeft/*@>1402fba*/ * /*@>14384a7*/Model_Target_DW./*@>14416ba*/smoothedEnergyOfSum/*@>10d9cad*/ + /*@>1400d0b*/absRight/*@>1402fbe*/ * /*@>1400d09*/curL;
    /*  Compute measure of center (or mono) level */
    /* '<S839>:1:68' levelCenter = smoothedEnergyOfSum/(smoothedSumOfEnergies + single(eps)); */
    /*@>1400cf9*/sumOfEnergies/*@>10d9d4a*/ = /*@>142c57a*/qhmath_div_f(/*@>14384ad*/Model_Target_DW./*@>14416bd*/smoothedEnergyOfSum, /*@>14384b3*/Model_Target_DW./*@>14416c0*/smoothedSumOfEnergies/*@>10d9d90*/ + /*@>1400cdd*/2.22044605E-16F);
    /*  Determine if input is stereo and turn SPUM on/off accordingly */
    /*  stereo case 1: was stereo last time (SPUM on) and this mono level < mono threhold */
    /*  stereo case 2: was mono last time (SPUM off) and this mono level < stereo threshold */
    /* '<S839>:1:73' lastSpumOn = (lastSpumOn && (levelCenter < monoDetectorTunable.thresholdMono)) ... */
    /* '<S839>:1:74'     || (~lastSpumOn && (levelCenter <= monoDetectorTunable.thresholdStereo)); */
    /*@>14384bf*/Model_Target_DW./*@>14416c6*/lastSpumOn/*@>10d9c92*/ = ((/*@>14384c5*/Model_Target_DW./*@>14416c9*/lastSpumOn/*@>13c8b51*/ && (/*@>1400c69*/sumOfEnergies/*@>13c8b54*/ < %<SLibCG_DumpSSCode("/*@[143de51*/",(SLibCG_SE(SLibCG_BOCSC(339, 1, "", -1, "", 0))),"/*@]*/")>))/*@>13c8b50*/ || ((!/*@<13c8b5c*//*@>14384cb*/Model_Target_DW./*@>14416cc*/lastSpumOn)/*@>13c8b5b*/ && (/*@>1400c65*/sumOfEnergies/*@>13c8b5f*/ <= %<SLibCG_DumpSSCode("/*@[143de35*/",(SLibCG_SE(SLibCG_BOCSC(340, 1, "", -1, "", 0))),"/*@]*/")>)));
    /* '<S839>:1:76' spumOn = uint32(lastSpumOn); */
    /*  equivalent to isStereo */
    /* '<S839>:1:78' center = levelCenter; */
    /*@>143716c*/Model_Target_B./*@>1441636*/center/*@>10d9c96*/ = /*@>1400cff*/sumOfEnergies;
%if !WHITE_SPACE(tlcOutputsFcnOfS290B14)
    /* {S!d2540}M-S-Function: '<S841>/TSP' */
%<SLibCG_DumpSSCode("/*@[143dd27*/",tlcOutputsFcnOfS290B14,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS290B15)
    /* {S!d2542}S-Function (AudioStats_MEX): '<S835>/Audio Stats' */
%<SLibCG_DumpSSCode("/*@[143dd2b*/",tlcOutputsFcnOfS290B15,"/*@]*/")>\
%endif
    /* {S!d2544}Merge: '<S649>/Merge' incorporates:
 *  MATLAB Function: '<S835>/Mono Detector'
 *  SignalConversion generated from: '<S835>/IsStereo'
 */
    /*@>1437178*/Model_Target_B./*@>1441639*/Merge/*@>10d9aee*/ = /*@>14384d1*/Model_Target_DW./*@>14416cf*/lastSpumOn;
%if !WHITE_SPACE(tlcOutputsFcnOfS290B16)
    /* {S!d2436}S-Function (InitTriggerControl): '<S853>/ITC1' */
%<SLibCG_DumpSSCode("/*@[143dd2d*/",tlcOutputsFcnOfS290B16,"/*@]*/")>\
%endif
    /* {E!d2436}End of Outputs for S-Function (InitTriggerControl): '<S853>/ITC1' */
%if !WHITE_SPACE(tlcOutputsFcnOfS290B19)

    /* {S!d2438}S-Function (InitTriggerControl): '<S845>/ITC1' */
%<SLibCG_DumpSSCode("/*@[143dd2f*/",tlcOutputsFcnOfS290B19,"/*@]*/")>\
%endif
    /* {E!d2438}End of Outputs for S-Function (InitTriggerControl): '<S845>/ITC1' */
%if !WHITE_SPACE(tlcUpdateFcnOfS290B14)

    /* {S!d2546}Update for M-S-Function: '<S841>/TSP' */
%<SLibCG_DumpSSCode("/*@[143dd33*/",tlcUpdateFcnOfS290B14,"/*@]*/")>\
    /* {E!d2435}End of Outputs for SubSystem: '<S649>/Mono Detector' */
%endif
} else {
    /* {S!d2441}Outputs for IfAction SubSystem: '<S649>/Bypass' incorporates:
 *  ActionPort: '<S834>/Action Port'
 */
    /* {S!d2548}Merge: '<S649>/Merge' incorporates:
 *  Constant: '<S834>/Constant'
 *  SignalConversion generated from: '<S834>/IsStereo'
 */
    /*@>1437142*/Model_Target_B./*@>144162a*/Merge/*@>10d9aa3*/ = /*@>14011aa*/1U;
    /* {E!d2441}End of Outputs for SubSystem: '<S649>/Bypass' */
}
/* {E!d2550}End of SwitchCase: '<S649>/Switch Case' */
%if !WHITE_SPACE(tlcOutputsFcnOfS300B40)

/* {S!d2552}M-S-Function: '<S836>/TSP' */
%<SLibCG_DumpSSCode("/*@[143dd37*/",tlcOutputsFcnOfS300B40,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B41)
/* {S!d2554}M-S-Function: '<S837>/TSP' */
%<SLibCG_DumpSSCode("/*@[143dd3b*/",tlcOutputsFcnOfS300B41,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B42)
/* {S!d2556}M-S-Function: '<S649>/FeaturePath' */
%<SLibCG_DumpSSCode("/*@[143dd3c*/",tlcOutputsFcnOfS300B42,"/*@]*/")>\
%endif
/* {S!d2558}Gain: '<S869>/Gain' incorporates:
 *  Sum: '<S593>/Sum'
 */
/*@>142e182*/memcpy(%<SLibCG_DumpSSCode("/*@[143e04e*/",(SLibCG_BOCSCAddr(310, 64, "", -1, "", 0)),"/*@]*/")>, &/*@>143714e*/Model_Target_B./*@>144162d*/Sum_a/*@>142695a*/[/*@>142694e*/0], /*@>142695c*/sizeof(real32_T)/*@>143f2f3*/ << /*@>143f2f2*/6U);
%if !WHITE_SPACE(tlcOutputsFcnOfS300B43)
/* {S!d2560}S-Function (TOP_MEX): '<S870>/TOP' */
%<SLibCG_DumpSSCode("/*@[143dd3e*/",tlcOutputsFcnOfS300B43,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B44)
/* {S!d2562}S-Function (TOP_MEX): '<S870>/TOP1' */
%<SLibCG_DumpSSCode("/*@[143dd40*/",tlcOutputsFcnOfS300B44,"/*@]*/")>\
%endif
/* {S!d2564}MATLAB Function: '<S873>/PoolIirProcess' incorporates:
 *  Gain: '<S869>/Gain'
 */
/*  Process function for Pooliir */
/*  */
/*  Parameters: */
/*    x:              input channels [frame size x number of inputs] */
/*    NumStages:      array of filter lengths per channel [NumChannels x 1] */
/*    CoeffsTarget:   coefficient set used for the specific target [total sim filter lengths x 1] */
/*   */
/*  Global parameters: */
/*    states: working memory set up during roommode reset/init CRL */
/*                    function call [StatesSize x 1] */
/* -------------------------------------------------------------------------- */
/* MATLAB Function 'PoolIirWithReset/PoolIir/TargetSpecific/PoolIirProcess': '<S877>:1' */
/*  Extract configuration information from inputs */
/* '<S877>:1:15' [~, NumChannels] = size(x); */
/*  Initialize variables */
/* '<S877>:1:20' VariantStr = char(VariantUint8); */
/* '<S877>:1:22' if(coder.target('MATLAB') || coder.target('Sfun')) */
/* '<S877>:1:29' else */
/* '<S877>:1:30' switch(VariantStr) */
/* '<S877>:1:31' case{"Hexagon"} */
/* '<S877>:1:32' y = pooliir_hexagon_process(single(x), single(states)); */
/*@>142c596*/pooliir_process(%<SLibCG_DumpSSCode("/*@[143dddf*/",(SLibCG_BOCSCAddr(329, 64, "", -1, "", 0)),"/*@]*/")>, %<SLibCG_DumpSSCode("/*@[143ddc2*/",(SLibCG_BOCSCAddr(310, 64, "", -1, "", 0)),"/*@]*/")>, %<SLibCG_DumpSSCode("/*@[143dda5*/",(SLibCG_CSCDWAddr(221, 113, "", -1, "", 0)),"/*@]*/")>);
/* {S!d2566}Buffer: '<S650>/Buffer' */
/*@>1400cbc*/uIdx/*@>10d9dc4*/ = /*@>144121f*/0;
/*@>13ef9a8*/for (/*@>1441249*/chanIdx = /*@>1441248*/0; /*@>1441253*/chanIdx < /*@>1441251*/2; /*@>144124f*/chanIdx/*@>14412cd*/++) {
    /*@>1400cb4*/offsetFromMemBase/*@>10d9dd5*/ = (/*@>1400cb9*/chanIdx/*@>1403024*/ << /*@>1403023*/8)/*@>10d9dd4*/ + /*@>1438423*/Model_Target_DW./*@>144167e*/Buffer_inBufPtrIdx;
    /*@>142e184*/memcpy(&/*@>143842f*/Model_Target_DW./*@>1441684*/Buffer_CircBuf/*@>14268f3*/[/*@>14268dd*/offsetFromMemBase], %<SLibCG_DumpSSCode("/*@[143e031*/",(SLibCG_BOCSCAddr(329, 64, "", -1, "/*@>14268ee*/uIdx", 0)),"/*@]*/")>, /*@>1426900*/sizeof(real32_T)/*@>143f2f6*/ << /*@>143f2f5*/5U);
    /*@>1400cb0*/uIdx/*@>14412ce*/ += /*@>1400c64*/32;
}
/*@>1438417*/Model_Target_DW./*@>144167b*/Buffer_inBufPtrIdx/*@>14412cf*/ += /*@>1400cad*/32;
/*@>10d9df1*/if (/*@>1438429*/Model_Target_DW./*@>1441681*/Buffer_inBufPtrIdx/*@>10d9df0*/ >= /*@>1400ca8*/256) {
    /*@>1438435*/Model_Target_DW./*@>1441687*/Buffer_inBufPtrIdx/*@>14412d0*/ -= /*@>1400ca5*/256;
}
/* {E!d2566}End of Buffer: '<S650>/Buffer' */
%if !WHITE_SPACE(tlcOutputsFcnOfS300B46)

/* {S!d2568}S-Function (TOP_MEX): '<S856>/TOP' */
%<SLibCG_DumpSSCode("/*@[143dd42*/",tlcOutputsFcnOfS300B46,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B47)
/* {S!d2570}S-Function (TOP_MEX): '<S856>/TOP1' */
%<SLibCG_DumpSSCode("/*@[143dd44*/",tlcOutputsFcnOfS300B47,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B48)
/* {S!d2572}S-Function (TOP_MEX): '<S856>/TOP2' */
%<SLibCG_DumpSSCode("/*@[143dd46*/",tlcOutputsFcnOfS300B48,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B49)
/* {S!d2574}S-Function (TOP_MEX): '<S856>/TOP3' */
%<SLibCG_DumpSSCode("/*@[143dd48*/",tlcOutputsFcnOfS300B49,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B50)
/* {S!d2576}S-Function (TOP_MEX): '<S856>/TOP4' */
%<SLibCG_DumpSSCode("/*@[143dd4a*/",tlcOutputsFcnOfS300B50,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B51)
/* {S!d2578}S-Function (TOP_MEX): '<S856>/TOP5' */
%<SLibCG_DumpSSCode("/*@[143dd4c*/",tlcOutputsFcnOfS300B51,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B52)
/* {S!d2580}S-Function (TOP_MEX): '<S863>/TOP' */
%<SLibCG_DumpSSCode("/*@[143dd4e*/",tlcOutputsFcnOfS300B52,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B53)
/* {S!d2582}S-Function (TOP_MEX): '<S864>/TOP' */
%<SLibCG_DumpSSCode("/*@[143dd50*/",tlcOutputsFcnOfS300B53,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B54)
/* {S!d2584}S-Function (TOP_MEX): '<S865>/TOP' */
%<SLibCG_DumpSSCode("/*@[143dd52*/",tlcOutputsFcnOfS300B54,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B55)
/* {S!d2586}S-Function (AudioStats_MEX): '<S870>/AudioStats' */
%<SLibCG_DumpSSCode("/*@[143dd55*/",tlcOutputsFcnOfS300B55,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B56)
/* {S!d2443}S-Function (InitTriggerControl): '<S882>/ITC1' */
%<SLibCG_DumpSSCode("/*@[143dd57*/",tlcOutputsFcnOfS300B56,"/*@]*/")>\
%endif
/* {E!d2443}End of Outputs for S-Function (InitTriggerControl): '<S882>/ITC1' */
%if !WHITE_SPACE(tlcOutputsFcnOfS300B59)

/* {S!d2445}S-Function (InitTriggerControl): '<S874>/ITC1' */
%<SLibCG_DumpSSCode("/*@[143dd59*/",tlcOutputsFcnOfS300B59,"/*@]*/")>\
%endif
/* {E!d2445}End of Outputs for S-Function (InitTriggerControl): '<S874>/ITC1' */
%if !WHITE_SPACE(tlcOutputsFcnOfS300B62)

/* {S!d2588}M-S-Function: '<S870>/FeaturePath' */
%<SLibCG_DumpSSCode("/*@[143dd5a*/",tlcOutputsFcnOfS300B62,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B63)
/* {S!d2590}M-S-Function: '<S650>/FeaturePath' */
%<SLibCG_DumpSSCode("/*@[143dd5b*/",tlcOutputsFcnOfS300B63,"/*@]*/")>\
%endif
/* {S!d2592}Selector: '<S586>/Selector1' incorporates:
 *  Buffer: '<S648>/BufferOut'
 */
/*@>13e859a*/for (/*@>1441227*/uIdx = /*@>1441226*/0; /*@>1441231*/uIdx < /*@>144122f*/4; /*@>144122d*/uIdx/*@>14412d1*/++) {
/*@>13e858a*/    for (/*@>1441238*/chanIdx = /*@>1441237*/0; /*@>1441242*/chanIdx < /*@>1441240*/32; /*@>144123e*/chanIdx/*@>14412d2*/++) {
        /*@>1437160*/Model_Target_B./*@>1441630*/LoRoLimpRimp/*@>13f9651*/[/*@>1401198*/chanIdx/*@>13f964d*/ + (/*@>140119a*/uIdx/*@>140302c*/ << /*@>140302b*/5)]/*@>13e857d*/ = /*@>1437166*/Model_Target_B./*@>1441633*/BufferOut_c/*@>1434300*/[(/*@>14342f8*/tmp/*@>14342f7*/[/*@>14342fa*/uIdx]/*@>14342f4*/ << /*@>14342fb*/5)/*@>14342f3*/ + /*@>14342fd*/chanIdx];
    }
}
/* {E!d2592}End of Selector: '<S586>/Selector1' */
%if !WHITE_SPACE(tlcOutputsFcnOfS300B64)

/* {S!d2594}M-S-Function: '<S586>/Partition' */
%<SLibCG_DumpSSCode("/*@[143dd5c*/",tlcOutputsFcnOfS300B64,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcUpdateFcnOfS300B40)
/* {S!d2596}Update for M-S-Function: '<S836>/TSP' */
%<SLibCG_DumpSSCode("/*@[143dd60*/",tlcUpdateFcnOfS300B40,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcUpdateFcnOfS300B41)
/* {S!d2598}Update for M-S-Function: '<S837>/TSP' */
%<SLibCG_DumpSSCode("/*@[143dd64*/",tlcUpdateFcnOfS300B41,"/*@]*/")>\
%endif
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutput2LocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 4
%assign ::GlobalCurrentTID = 4
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

int32_T currentOffset;
int32_T delayLen;
int32_T i;
int32_T memIdx;
int32_T row;
int32_T rtb_isImpulsive_g;
real32_T rtb_Add1_k3[129];
real32_T rtb_Add1_ma[129];
real32_T rtb_Rxks[129];
real32_T y[5];
real32_T maxXp;
real32_T minXp;
real32_T minXp_tmp;
real32_T rtb_Delay_og;
real32_T rtb_R_im_tmp;
real32_T rtb_R_re;
real32_T rtb_R_re_tmp;
real32_T rtb_Sumhighfrequencyenergy;
real32_T slewedStepSize;
real32_T updatedLokRokScaleFactor;
real32_T updatedLokRokScaleFactor_tmp;
static const real32_T b[128] = %<(TLC_STR_CTX(11))>;
static const real32_T c[128] = %<(TLC_STR_CTX(12))>;
creal32_T *rtb_y_i_0;
%closefile localVarDecl
%assign _modelSS = ""

%assign tlcOutputsFcnOfS300B68 = OpaqueTLCBlockFcn("Outputs", 300, 68, 376, 2, 0)
%assign tlcOutputsFcnOfS300B69 = OpaqueTLCBlockFcn("Outputs", 300, 69, 376, 2, 1)
%assign tlcOutputsFcnOfS300B70 = OpaqueTLCBlockFcn("Outputs", 300, 70, 376, 2, 2)
%assign tlcOutputsFcnOfS300B71 = OpaqueTLCBlockFcn("Outputs", 300, 71, 376, 2, 3)
%assign tlcOutputsFcnOfS300B72 = OpaqueTLCBlockFcn("Outputs", 300, 72, 376, 2, 4)
%assign tlcOutputsFcnOfS300B73 = OpaqueTLCBlockFcn("Outputs", 300, 73, 376, 2, 5)
%assign tlcOutputsFcnOfS300B88 = OpaqueTLCBlockFcn("Outputs", 300, 88, 376, 2, 6)
%assign tlcOutputsFcnOfS300B96 = OpaqueTLCBlockFcn("Outputs", 300, 96, 376, 2, 7)
%assign tlcOutputsFcnOfS300B97 = OpaqueTLCBlockFcn("Outputs", 300, 97, 376, 2, 8)
/* {S!d2600}Buffer: '<S648>/BufferIn' */
/*@>1401665*/delayLen/*@>10dda4a*/ = /*@>1441e8e*/0;
/*@>13efd3e*/for (/*@>14422fb*/row = /*@>14422fa*/0; /*@>1442305*/row < /*@>1442303*/2; /*@>1442301*/row/*@>1442309*/++) {
    /*@>140165f*/memIdx/*@>10dda66*/ = (/*@>1401662*/row/*@>1403285*/ << /*@>1403284*/8)/*@>10dda65*/ + /*@>14384d7*/Model_Target_DW./*@>144369b*/BufferIn_outBufPtrIdx_c;
    /*@>142e186*/memcpy(&/*@>1437184*/Model_Target_B./*@>144339e*/BufferIn/*@>1427544*/[/*@>142752e*/delayLen], &/*@>14384dd*/Model_Target_DW./*@>144369e*/BufferIn_CircBuf_l/*@>142754f*/[/*@>142753f*/memIdx], /*@>1427551*/sizeof(real32_T)/*@>143f2f9*/ << /*@>143f2f8*/7U);
    /*@>140165b*/delayLen/*@>144230a*/ += /*@>1401374*/128;
    /*@>1401659*/i/*@>10dda80*/ = /*@>14384e9*/Model_Target_DW./*@>14436a4*/BufferIn_outBufPtrIdx_c/*@>10dda7f*/ + /*@>1401373*/128;
}
/*@>10dda83*/if (/*@>1401657*/i/*@>10dda82*/ == /*@>1401656*/256) {
    /*@>1401654*/i/*@>10dda85*/ = /*@>1441e91*/0;
}
/*@>14384e3*/Model_Target_DW./*@>14436a1*/BufferIn_outBufPtrIdx_c/*@>10dda87*/ = /*@>1401651*/i;
/* {E!d2600}End of Buffer: '<S648>/BufferIn' */

/* {S!d2602}MATLAB Function: '<S753>/Windowing' incorporates:
 *  Buffer: '<S648>/BufferIn'
 */
/*  Get sizes */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 2/Full-Rate FDP/Fdp/ShortTimeFourierTransform/Windowing': '<S827>:1' */
/* '<S827>:1:4' [~, NumChannels] = size(AudioIn); */
/* '<S827>:1:5' HopSize = FftSize - Overlap; */
/* '<S827>:1:8' if isempty(InputOverlap) */
/* '<S827>:1:12' AudioOut = [InputOverlap.*Window(1:Overlap); AudioIn.*Window((HopSize + 1):end)]; */
/*@>13e89a2*/for (/*@>14422d9*/delayLen = /*@>14422d8*/0; /*@>14422e3*/delayLen < /*@>14422e1*/2; /*@>14422df*/delayLen/*@>144230b*/++) {
/*@>13e8992*/    for (/*@>14422ea*/i = /*@>14422e9*/0; /*@>14422f4*/i < /*@>14422f2*/128; /*@>14422f0*/i/*@>144230c*/++) {
        /*@>1418c96*/rtb_isImpulsive_g/*@>1418c98*/ = (/*@>140c548*/delayLen/*@>140c546*/ << /*@>140c549*/7)/*@>140c543*/ + /*@>140c545*/i;
        /*@>1418ca6*/row/*@>1418ca8*/ = (/*@>1401886*/delayLen/*@>1403295*/ << /*@>1403294*/8)/*@>13f967c*/ + /*@>1401884*/i;
%<SLibCG_DumpSSCode("/*@[143e980*/",SLibCG_SetBOCSC(343, 512, "", -1, "/*@>14439e4*/row", 0, "/*@>14439ea*/Model_Target_DW./*@>14439e9*/InputOverlap/*@>14439e8*/[/*@>14439ec*/rtb_isImpulsive_g]/*@>14439e7*/ * /*@>14439ee*/b/*@>14439ed*/[/*@>14439ef*/i]"),"/*@]*/")>\
%<SLibCG_DumpSSCode("/*@[143e99b*/",SLibCG_SetBOCSC(343, 512, "", -1, "row/*@>14439ff*/ + /*@>1443a01*/128", 0, "/*@>1443a07*/Model_Target_B./*@>1443a06*/BufferIn/*@>1443a05*/[rtb_isImpulsive_g]/*@>1443a04*/ * /*@>1443a0b*/c/*@>1443a0a*/[/*@>1443a0c*/i]"),"/*@]*/")>\
    }
}
/*  Update overlapping samples */
/* '<S827>:1:15' InputOverlap = AudioIn; */
/*@>142e188*/memcpy(&/*@>14384f5*/Model_Target_DW./*@>14436a7*/InputOverlap/*@>14274e9*/[/*@>14274d8*/0], &/*@>143718a*/Model_Target_B./*@>14433a1*/BufferIn/*@>14274f1*/[/*@>14274e5*/0], /*@>14274f3*/sizeof(real32_T)/*@>143f2fc*/ << /*@>143f2fb*/8U);
/* {E!d2602}End of MATLAB Function: '<S753>/Windowing' */

/* {S!d2604}MATLAB Function: '<S829>/MATLAB Function1' */
/*  Computes the Real FFT of a Multi-Channel Signal.  */
/*  During Code Generation, hexagon rfft crl function is used. */
/*  Inputs: */
/*      u - purely real signal.  */
/*          size = [fftSize, numChannels] */
/*      fftSize - size of each input channel. Also the size of FFT */
/*  Outputs: */
/*      y - fftSize/2 + 1 unique FFT coefficients of each channel of u. */
/*          size = [fftSize/2 + 1, numChannels] */
/*  ------------------------------------------------------------------------- */
/* MATLAB Function 'Rfft/Rfft/Hexagon/MATLAB Function1': '<S832>:1' */
/* '<S832>:1:17' numChannels = size(u, 2); */
/* '<S832>:1:18' spectrumSize = (fftSize/2) + 1; */
/*  Nullcopy copies type, size, and complexity of input to output */
/* '<S832>:1:21' y = coder.nullcopy(complex(single(zeros(spectrumSize, numChannels)))); */
/*  Simulation */
/* '<S832>:1:24' if(coder.target('MATLAB') || coder.target('Sfun')) */
/* '<S832>:1:27' else */
/* '<S832>:1:28' y = rfft_process(single(u), Twiddle1, Twiddle2, RfftOutputTmp, int32(fftSize), int32(numChannels)); */
/*@>142c5c4*/rfft_process(&/*@>1437196*/Model_Target_B./*@>14433a7*/y_i/*@>142aee3*/[/*@>142aee0*/0], %<SLibCG_DumpSSCode("/*@[143e813*/",(SLibCG_BOCSCAddr(343, 512, "", -1, "", 0)),"/*@]*/")>, %<SLibCG_DumpSSCode("/*@[143e7f6*/",(SLibCG_CSCDWAddr(166, 96, "", -1, "", 0)),"/*@]*/")>, %<SLibCG_DumpSSCode("/*@[143e7d9*/",(SLibCG_CSCDWAddr(167, 128, "", -1, "", 0)),"/*@]*/")>, %<SLibCG_DumpSSCode("/*@[143e7bc*/",(SLibCG_CSCDWAddr(169, 256, "", -1, "", 0)),"/*@]*/")>, /*@>1441e94*/256, /*@>1441e97*/2);
/* {S!d2608}Math: '<S774>/Math Function'
 *
 * About '<S774>/Math Function':
 *  Operator: magnitude^2
 */
/*@>13e8c39*/for (/*@>14422c8*/delayLen = /*@>14422c7*/0; /*@>14422d2*/delayLen < /*@>14422d0*/129; /*@>14422ce*/delayLen/*@>144230d*/++) {
    /* {S!d2606}Selector: '<S753>/Selector' incorporates:
 *  Math: '<S756>/Math Function'
 *  Math: '<S756>/Math Function1'
 *  Math: '<S774>/Math Function1'
 *  Selector: '<S753>/Selector1'
 *
 * About '<S756>/Math Function':
 *  Operator: magnitude^2
 *
 * About '<S756>/Math Function1':
 *  Operator: magnitude^2
 *
 * About '<S774>/Math Function1':
 *  Operator: magnitude^2
 */
    /*@>142f38e*/rtb_y_i_0/*@>142f395*/ = &/*@>14371b4*/Model_Target_B./*@>14433b3*/y_i/*@>142f394*/[/*@>142f391*/delayLen];
    /*@>14371ba*/Model_Target_B./*@>14433b6*/Lin2/*@>13e8c2b*/[/*@>14018a9*/delayLen]/*@>13e8c2c*/ = /*@>142f3b4*/rtb_y_i_0->re/*@>140c567*/ * /*@>142f3b7*/rtb_y_i_0->re/*@>140c566*/ + /*@>142f3ba*/rtb_y_i_0->im/*@>140c570*/ * /*@>142f3bd*/rtb_y_i_0->im;
}
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[251], "Output",4)
/* {S!d2610}MATLAB Function: '<S759>/Coeffs 1st Stage' incorporates:
 *  Selector: '<S753>/Selector'
 *  Selector: '<S753>/Selector1'
 */
%if SLibCG_SystemFcnArgAccessed("Model_Target_Coeffs1stStage",251,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[143e3dc*/",SLibCGIRGenReusableSysCall("Model_Target_Coeffs1stStage", ["%<_modelSS>", "&/*@>1443a4c*/Model_Target_B./*@>1443a4b*/y_i/*@>1443a4a*/[/*@>1443a4e*/0]", "&/*@>1443a5b*/Model_Target_B./*@>1443a5a*/y_i/*@>1443a59*/[/*@>1443a5d*/129]", "&/*@>1443a69*/Model_Target_B./*@>1443a68*/sf_Coeffs1stStage_m"], 251, 1, 6, 4, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[251]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B68)
/* {S!d2612}S-Function (TOP_MEX): '<S765>/TOP' */
%<SLibCG_DumpSSCode("/*@[143e3c8*/",tlcOutputsFcnOfS300B68,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B69)
/* {S!d2614}S-Function (TOP_MEX): '<S765>/TOP5' */
%<SLibCG_DumpSSCode("/*@[143e3ca*/",tlcOutputsFcnOfS300B69,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B70)
/* {S!d2616}S-Function (TOP_MEX): '<S765>/TOP1' */
%<SLibCG_DumpSSCode("/*@[143e3cc*/",tlcOutputsFcnOfS300B70,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B71)
/* {S!d2618}S-Function (TOP_MEX): '<S765>/TOP3' */
%<SLibCG_DumpSSCode("/*@[143e3ce*/",tlcOutputsFcnOfS300B71,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B72)
/* {S!d2620}S-Function (TOP_MEX): '<S765>/TOP2' */
%<SLibCG_DumpSSCode("/*@[143e3d0*/",tlcOutputsFcnOfS300B72,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B73)
/* {S!d2622}S-Function (TOP_MEX): '<S765>/TOP4' */
%<SLibCG_DumpSSCode("/*@[143e3d2*/",tlcOutputsFcnOfS300B73,"/*@]*/")>\
%endif
/* {S!d2624}MATLAB Function: '<S762>/MATLAB Function' incorporates:
 *  Math: '<S774>/Math Function'
 *  Product: '<S789>/Multiply'
 *
 * About '<S774>/Math Function':
 *  Operator: magnitude^2
 */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 2/Full-Rate FDP/Fdp/FreqDomainProcessing/CalculateAndApplyCoefficients/FullRate/Calculate coefficients/Instantaneous Stretch Coeffs /MATLAB Function': '<S767>:1' */
/* '<S767>:1:6' coder.inline('always'); */
/* '<S767>:1:7' epsf = single(eps); */
/*  Step 1: Compute the estimated stretch coefficients or worst-case estimate */
/*  based on maximum allowable stretching Xpmax */
/*  NOTE: The Xp used for detect here is the decimated rate Xp, which means */
/*  the pre-calculated LokRokMaxScaleFactor for treble stretching is done */
/*  using the decimated rate XpMax. */
/* '<S767>:1:16' Lstrk = min(Lxk, LokRokMaxScaleFactor * Lok); */
/*@>13e1570*/for (/*@>14422b7*/i = /*@>14422b6*/0; /*@>14422c1*/i < /*@>14422bf*/129; /*@>14422bd*/i/*@>144230e*/++) {
    /*@>14371cc*/Model_Target_B./*@>14433b9*/Multiply_n/*@>13e8d0b*/[/*@>14018bc*/i]/*@>13e155f*/ = %<SLibCG_DumpSSCode("/*@[143e89f*/",(SLibCG_SE(SLibCG_BOCSC(323, 1, "", -1, "", 0))),"/*@]*/")>/*@>14032b3*/ * /*@>14371d7*/Model_Target_B./*@>14433bf*/sf_Coeffs1stStage_m./*@>14433bc*/Lok/*@>1434328*/[/*@>1434325*/i];
}
/*@>10de0c7*/for (/*@>14422a6*/row = /*@>14422a5*/0; /*@>14422b0*/row < /*@>14422ae*/129; /*@>14422ac*/row/*@>144230f*/++) {
    /*@>14371dd*/Model_Target_B./*@>14433c2*/Multiply_c/*@>13e8d5f*/[/*@>14018c8*/row]/*@>10de0ce*/ = /*@>142c5d4*/fminf(/*@>14371e8*/Model_Target_B./*@>14433c8*/sf_Coeffs1stStage_m./*@>14433c5*/Lxk/*@>143432e*/[/*@>143432b*/row], /*@>14371ee*/Model_Target_B./*@>14433cb*/Multiply_n/*@>1434334*/[/*@>1434331*/row]);
}
/* '<S767>:1:17' Rstrk = min(Rxk, LokRokMaxScaleFactor * Rok); */
/*@>13e158f*/for (/*@>1442295*/i = /*@>1442294*/0; /*@>144229f*/i < /*@>144229d*/129; /*@>144229b*/i/*@>1442310*/++) {
    /*@>1437200*/Model_Target_B./*@>14433ce*/Multiply_n/*@>13e8d96*/[/*@>14018d0*/i]/*@>13e157e*/ = %<SLibCG_DumpSSCode("/*@[143e8bb*/",(SLibCG_SE(SLibCG_BOCSC(323, 1, "", -1, "", 0))),"/*@]*/")>/*@>14032b7*/ * /*@>143720b*/Model_Target_B./*@>14433d4*/sf_Coeffs1stStage_m./*@>14433d1*/Rok/*@>143433a*/[/*@>1434337*/i];
}
/*@>10de0d3*/for (/*@>1442284*/row = /*@>1442283*/0; /*@>144228e*/row < /*@>144228c*/129; /*@>144228a*/row/*@>1442311*/++) {
    /*@>1437211*/Model_Target_B./*@>14433d7*/Lstrk/*@>13e8dea*/[/*@>14018dc*/row]/*@>10de0da*/ = /*@>142c5d6*/fminf(/*@>143721c*/Model_Target_B./*@>14433dd*/sf_Coeffs1stStage_m./*@>14433da*/Rxk/*@>1434340*/[/*@>143433d*/row], /*@>1437222*/Model_Target_B./*@>14433e0*/Multiply_n/*@>1434346*/[/*@>1434343*/row]);
}
/*  Step 2: Compute Excessive Stretch Detector (ESD) - used to update Xp */
/*  */
/*                    sum_over_FFT_bins( Lstrki * |Lin|) + sum_over_FFT_bins( Rstrki * |Rin|)   */
/*  ESD = abs( db20 ( ----------------------------------------------------------------------- ) ) */
/*                                      sum_over_FFT_bins( Lxki * |Lin| ) */
/*  */
/*  since Lxki * |Lin| = min (|Lin|,|Rin|) (per bin), we store the minima  */
/*  beforehand and use it here */
/*  Note the matrix shorthand for sum_over_FFT_bins(Lstrki * Lin) is Lstrk' * p.absLi */
/*  A small positive value is added to the numerator, to avoid db20(0) */
/* '<S767>:1:30' ESDdB = db20( (epsf + Lstrk(:)' * absLi(:) + Rstrk(:)' * absRi(:)) ... */
/* '<S767>:1:31'             / (epsf + sum(minAbsLiRi)) ); */
/*@>140156d*/maxXp/*@>10de0dd*/ = /*@>143722d*/Model_Target_B./*@>14433e6*/sf_Coeffs1stStage_m./*@>14433e3*/minAbsLiRi/*@>143434b*/[/*@>1434348*/0];
/*@>10de0e4*/for (/*@>1442273*/row = /*@>1442272*/0; /*@>144227d*/row < /*@>144227b*/128; /*@>1442279*/row/*@>1442312*/++) {
    /*@>1401564*/maxXp/*@>1442313*/ += /*@>1437238*/Model_Target_B./*@>14433ec*/sf_Coeffs1stStage_m./*@>14433e9*/minAbsLiRi/*@>1434353*/[/*@>143434f*/row/*@>143434d*/ + /*@>1434350*/1];
}
/* DB20  Linear quantity to decibels */
/*    Converts x to dB assuming that x represents volts. */
/*    y=20*log10(abs(x)); */
/*  */
/*  See Also: DB10, UNDB20 */
/*    Copyright 2018-2019 Bose Corporation */
/*  Bill Berardi */
/*  $Id: db20.m 11813 2012-07-11 17:31:25Z rs7109 $ */
/* 'db20:12' y = 20/log(10)*log(abs(x)); */
/*@>14018f1*/updatedLokRokScaleFactor/*@>13e8e6d*/ = /*@>14018f0*/0.0F;
/*@>13e8e7b*/for (/*@>1442262*/delayLen = /*@>1442261*/0; /*@>144226c*/delayLen < /*@>144226a*/129; /*@>1442268*/delayLen/*@>1442314*/++) {
    /*@>1401852*/updatedLokRokScaleFactor/*@>1442315*/ += /*@>143723e*/Model_Target_B./*@>14433ef*/Multiply_c/*@>1434359*/[/*@>1434356*/delayLen]/*@>14032bb*/ * /*@>1437249*/Model_Target_B./*@>14433f5*/sf_Coeffs1stStage_m./*@>14433f2*/absLi/*@>143435f*/[/*@>143435c*/delayLen];
}
/*@>1401903*/rtb_Sumhighfrequencyenergy/*@>13e8ebd*/ = /*@>1401902*/0.0F;
/*@>13e8ecb*/for (/*@>1442251*/delayLen = /*@>1442250*/0; /*@>144225b*/delayLen < /*@>1442259*/129; /*@>1442257*/delayLen/*@>1442316*/++) {
    /*@>1401856*/rtb_Sumhighfrequencyenergy/*@>1442317*/ += /*@>143724f*/Model_Target_B./*@>14433f8*/Lstrk/*@>1434365*/[/*@>1434362*/delayLen]/*@>14032bf*/ * /*@>143725a*/Model_Target_B./*@>14433fe*/sf_Coeffs1stStage_m./*@>14433fb*/absRi/*@>143436b*/[/*@>1434368*/delayLen];
}
/*@>140157d*/updatedLokRokScaleFactor/*@>10de0bb*/ = /*@>142c5dc*/qhmath_log_f(/*@>142c5da*/qhmath_abs_f(/*@>142c5d8*/qhmath_div_f((/*@>140c535*/updatedLokRokScaleFactor/*@>10de172*/ + /*@>1401543*/2.22044605E-16F)/*@>10de171*/ + /*@>140c537*/rtb_Sumhighfrequencyenergy, /*@>1401540*/maxXp/*@>10de17e*/ + /*@>1401542*/2.22044605E-16F)))/*@>1403260*/ * /*@>140153f*/8.68588924F;
/*  "Turn off" stretching by setting minXp and maxXp to zero,  */
/*  if CAE_enable is zero. */
/* '<S767>:1:35' if (CAE_enable == 0) */
/*@>10de04c*/if (/*@>1437260*/Model_Target_B./*@>1443401*/Constant3/*@>10de02b*/ == /*@>140159b*/0) {
    /* '<S767>:1:36' minXp = single(0.0); */
    /*@>1401599*/minXp/*@>10de015*/ = /*@>140153e*/0.0F;
    /* '<S767>:1:37' maxXp = single(0.0); */
    /*@>1401595*/maxXp/*@>10de016*/ = /*@>140153d*/0.0F;
} else {
    /* '<S767>:1:38' else */
    /* '<S767>:1:39' minXp = Xpmin; */
    /*@>1401597*/minXp/*@>10de017*/ = %<SLibCG_DumpSSCode("/*@[143e79f*/",(SLibCG_SE(SLibCG_BOCSC(322, 1, "", -1, "", 0))),"/*@]*/")>;
    /* '<S767>:1:40' maxXp = Xpmax; */
    /*@>1401593*/maxXp/*@>10de018*/ = %<SLibCG_DumpSSCode("/*@[143e783*/",(SLibCG_SE(SLibCG_BOCSC(321, 1, "", -1, "", 0))),"/*@]*/")>;
}
/*  Calculate new stretch factor, Xp, based on ESD value. */
/*  The following curve is applied: */
/*         Xp */
/*         ^ */
/*         | */
/*   maxXp +----------. */
/*         |          .\ */
/*         |          . \ */
/*         |          .  \ */
/*         |          .   \ */
/*         |          .    \ */
/*         |          .     \ */
/*   minXp +          .      --------------- minXp */
/*         |          .      . */
/*         +----------+------+-------------> ESD (dB) */
/*        0           |      | */
/*                    |     ESD_upper_bound_in_dB - thresh2 */
/*                    | */
/*                   ESD_lower_bound_in_dB - thresh1 */
/* '<S767>:1:63' if (ESDdB < ESDLowerBound) */
/*@>10de065*/if (/*@>1401591*/updatedLokRokScaleFactor/*@>10de02c*/ < %<SLibCG_DumpSSCode("/*@[143e400*/",(SLibCG_SE(SLibCG_BOCSC(324, 1, "", -1, "", 0))),"/*@]*/")>) {
    /*  Stretching is lower than the lower threshold, use largest allowable Xp. */
    /* '<S767>:1:65' Xp = maxXp; */
    /*@>140158b*/minXp/*@>10de01b*/ = /*@>140158d*/maxXp;
} else /*@>10de068*/if (/*@>140158f*/updatedLokRokScaleFactor/*@>1420879*/ <= %<SLibCG_DumpSSCode("/*@[143e41c*/",(SLibCG_SE(SLibCG_BOCSC(325, 1, "", -1, "", 0))),"/*@]*/")>) {
    /* '<S767>:1:69' else */
    /*  Stretching in between, compute Xp as a linear interpolation between  */
    /*  max and min based on the two thresholds */
    /* '<S767>:1:72' Xp = minXp + (maxXp - minXp) * ESDStepSize * (ESDUpperBound - ESDdB); */
    /*@>1401581*/minXp/*@>144235f*/ += (/*@>1401587*/maxXp/*@>10de02e*/ - /*@>1401585*/minXp)/*@>140325c*/ * %<SLibCG_DumpSSCode("/*@[143e767*/",(SLibCG_SE(SLibCG_BOCSC(326, 1, "", -1, "", 0))),"/*@]*/")>/*@>1403258*/ * (%<SLibCG_DumpSSCode("/*@[143e74b*/",(SLibCG_SE(SLibCG_BOCSC(325, 1, "", -1, "", 0))),"/*@]*/")>/*@>10de030*/ - /*@>1401583*/updatedLokRokScaleFactor);
} else {
    /* '<S767>:1:66' elseif (ESDdB > ESDUpperBound) */
    /*  Stretching is higher than the upper threshold, use smallest allowable Xp. */
    /* '<S767>:1:68' Xp = minXp; */
}
/*  Step 3: Compute updated instantaneous stretch coefficients */
/* '<S767>:1:76' updatedLokRokScaleFactor = 0.5 * (Xp/(1-Xp+epsf)); */
/*@>140157f*/updatedLokRokScaleFactor/*@>10de0ab*/ = /*@>142c5de*/qhmath_div_f(/*@>1401548*/minXp, (/*@>1401547*/1.0F/*@>10de16b*/ - /*@>1401545*/minXp)/*@>10de16a*/ + /*@>1401544*/2.22044605E-16F)/*@>140324b*/ * /*@>140153c*/0.5F;
/*  Calculate instanstaneous Center Selectivity coefficients based on SPS */
/* '<S767>:1:79' instCPS = 1 - SPS; */
/*@>13e15ad*/for (/*@>1442240*/i = /*@>144223f*/0; /*@>144224a*/i < /*@>1442248*/129; /*@>1442246*/i/*@>1442318*/++) {
    /*@>143726c*/Model_Target_B./*@>1443404*/instCPS/*@>13e8f0c*/[/*@>1401910*/i]/*@>13e159d*/ = /*@>1401786*/1.0F/*@>13e15a4*/ - /*@>1437277*/Model_Target_B./*@>144340a*/sf_Coeffs1stStage_m./*@>1443407*/SPS/*@>1434371*/[/*@>143436e*/i];
}
/* '<S767>:1:80' Lck = instCPS .* Lxk; */
/*@>13e15d0*/for (/*@>144222f*/i = /*@>144222e*/0; /*@>1442239*/i < /*@>1442237*/129; /*@>1442235*/i/*@>1442319*/++) {
    /*@>1437283*/Model_Target_B./*@>144340d*/Lstrk/*@>13e8f60*/[/*@>140191c*/i]/*@>13e15bb*/ = /*@>1437289*/Model_Target_B./*@>1443410*/instCPS/*@>1434377*/[/*@>1434374*/i]/*@>14032c3*/ * /*@>1437294*/Model_Target_B./*@>1443416*/sf_Coeffs1stStage_m./*@>1443413*/Lxk/*@>143437d*/[/*@>143437a*/i];
}
/* '<S767>:1:81' Rck = instCPS .* Rxk; */
/*@>13e8fb1*/for (/*@>144221e*/delayLen = /*@>144221d*/0; /*@>1442228*/delayLen < /*@>1442226*/129; /*@>1442224*/delayLen/*@>144231a*/++) {
    /*@>143729a*/Model_Target_B./*@>1443419*/instCPS/*@>141753d*/[/*@>1417540*/delayLen] *= /*@>14372ab*/Model_Target_B./*@>144341f*/sf_Coeffs1stStage_m./*@>144341c*/Rxk/*@>1434389*/[/*@>1434386*/delayLen];
}
/*  Use the updated value of Xp to calculate stretch coefficients */
/* '<S767>:1:84' Lstrk = min(Lck, updatedLokRokScaleFactor * Lok); */
/*@>13e15ef*/for (/*@>144220d*/i = /*@>144220c*/0; /*@>1442217*/i < /*@>1442215*/129; /*@>1442213*/i/*@>144231c*/++) {
    /*@>14372b7*/Model_Target_B./*@>1443422*/Multiply_n/*@>13e8fe6*/[/*@>140192d*/i]/*@>13e15de*/ = /*@>1401791*/updatedLokRokScaleFactor/*@>14032cb*/ * /*@>14372c2*/Model_Target_B./*@>1443428*/sf_Coeffs1stStage_m./*@>1443425*/Lok/*@>143438f*/[/*@>143438c*/i];
}
/*@>10de0f2*/for (/*@>14421fc*/row = /*@>14421fb*/0; /*@>1442206*/row < /*@>1442204*/129; /*@>1442202*/row/*@>144231d*/++) {
    /*@>14372c8*/Model_Target_B./*@>144342b*/Lstrk/*@>1417555*/[/*@>1417558*/row] = /*@>142c5e0*/fminf(/*@>14372ce*/Model_Target_B./*@>144342e*/Lstrk/*@>1434395*/[/*@>1434392*/row], /*@>14372d4*/Model_Target_B./*@>1443431*/Multiply_n/*@>143439b*/[/*@>1434398*/row]);
}
/* '<S767>:1:85' Rstrk = min(Rck, updatedLokRokScaleFactor * Rok); */
/*@>13e160e*/for (/*@>14421eb*/i = /*@>14421ea*/0; /*@>14421f5*/i < /*@>14421f3*/129; /*@>14421f1*/i/*@>144231e*/++) {
    /*@>14372e6*/Model_Target_B./*@>1443434*/Multiply_n/*@>13e90ad*/[/*@>1401939*/i]/*@>13e15fd*/ = /*@>1401798*/updatedLokRokScaleFactor/*@>14032cf*/ * /*@>14372f1*/Model_Target_B./*@>144343a*/sf_Coeffs1stStage_m./*@>1443437*/Rok/*@>14343a1*/[/*@>143439e*/i];
}
/*@>10de0fe*/for (/*@>14421da*/row = /*@>14421d9*/0; /*@>14421e4*/row < /*@>14421e2*/129; /*@>14421e0*/row/*@>144231f*/++) {
    /*@>1437303*/Model_Target_B./*@>1443443*/Multiply_c/*@>13e9150*/[/*@>1401949*/row]/*@>10de105*/ = /*@>142c5e2*/fminf(/*@>1437309*/Model_Target_B./*@>1443446*/instCPS/*@>14343a7*/[/*@>14343a4*/row], /*@>143730f*/Model_Target_B./*@>1443449*/Multiply_n/*@>14343ad*/[/*@>14343aa*/row]);
    /*@>1437321*/Model_Target_B./*@>1443452*/Lstrk/*@>141756d*/[/*@>1417570*/row] *= /*@>1437327*/Model_Target_B./*@>1443455*/Lin2/*@>14343b3*/[/*@>14343b0*/row];
}
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[254], "Output",4)
/* {S!d2626}MATLAB Function: '<S791>/MATLAB Function' incorporates:
 *  Constant: '<S764>/lsGain1'
 *  Constant: '<S764>/lsPole1'
 */
%if SLibCG_SystemFcnArgAccessed("Model_Target_MATLABFunction",254,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[143e3dd*/",SLibCGIRGenReusableSysCall("Model_Target_MATLABFunction", ["%<_modelSS>", "/*@>1443add*/Model_Target_B./*@>1443adc*/Lstrk", "/*@>1443ae8*/0.90993F", "/*@>1443af2*/0.0450350046F", "&/*@>1443afe*/Model_Target_B./*@>1443afd*/sf_MATLABFunction_eb", "&/*@>1443b0b*/Model_Target_DW./*@>1443b0a*/sf_MATLABFunction_eb"], 254, 18, 6, 4, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[254]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[254], "Output",4)

/* {S!d2628}MATLAB Function: '<S775>/MATLAB Function' incorporates:
 *  Constant: '<S764>/lsGain1'
 *  Constant: '<S764>/lsPole1'
 */
%if SLibCG_SystemFcnArgAccessed("Model_Target_MATLABFunction",254,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[143e3de*/",SLibCGIRGenReusableSysCall("Model_Target_MATLABFunction", ["%<_modelSS>", "/*@>1443b49*/Model_Target_B./*@>1443b48*/Lin2", "/*@>1443b54*/0.90993F", "/*@>1443b5e*/0.0450350046F", "&/*@>1443b6a*/Model_Target_B./*@>1443b69*/sf_MATLABFunction_ap", "&/*@>1443b77*/Model_Target_DW./*@>1443b76*/sf_MATLABFunction_ap"], 254, 14, 6, 4, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[254]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

%endif
/* {S!d2630}Math: '<S774>/Math Function2' incorporates:
 *  Constant: '<S774>/Constant1'
 *  S-Function (sdspmultiportsel): '<S857>/Stereo Split'
 *  Sum: '<S774>/Add'
 *
 * About '<S774>/Math Function2':
 *  Operator: reciprocal
 */
/*@>13e162f*/for (/*@>14421c9*/i = /*@>14421c8*/0; /*@>14421d3*/i < /*@>14421d1*/129; /*@>14421cf*/i/*@>1442321*/++) {
    /*@>143733f*/Model_Target_B./*@>1443458*/instCPS/*@>13e9210*/[/*@>1401959*/i]/*@>13e161c*/ = /*@>142c5e8*/qhmath_div_f(/*@>140c5ae*/1.0F, /*@>143734a*/Model_Target_B./*@>144345e*/sf_MATLABFunction_ap./*@>144345b*/y/*@>14343bf*/[/*@>14343bc*/i]/*@>140ca89*/ + /*@>140ca8f*/2.22044605E-16F);
}
/* {E!d2630}End of Math: '<S774>/Math Function2' */
/*@>13e91de*/for (/*@>14421b8*/delayLen = /*@>14421b7*/0; /*@>14421c2*/delayLen < /*@>14421c0*/129; /*@>14421be*/delayLen/*@>1442322*/++) {
    /* {S!d2632}Math: '<S774>/Math Function1' incorporates:
 *  Math: '<S756>/Math Function'
 *  Math: '<S756>/Math Function1'
 *  Math: '<S774>/Math Function'
 *  Selector: '<S753>/Selector'
 *  Selector: '<S753>/Selector1'
 *
 * About '<S774>/Math Function1':
 *  Operator: magnitude^2
 *
 * About '<S756>/Math Function':
 *  Operator: magnitude^2
 *
 * About '<S756>/Math Function1':
 *  Operator: magnitude^2
 *
 * About '<S774>/Math Function':
 *  Operator: magnitude^2
 */
    /*@>142f397*/rtb_y_i_0/*@>142f3a0*/ = &/*@>1437362*/Model_Target_B./*@>1443467*/y_i/*@>142f39f*/[/*@>142f39b*/delayLen/*@>142f399*/ + /*@>142f39c*/129];
    /*@>1403cbe*/rtb_Sumhighfrequencyenergy/*@>1403cb4*/ = /*@>142f3c0*/rtb_y_i_0->re/*@>1403cc7*/ * /*@>142f3c3*/rtb_y_i_0->re/*@>1403cb3*/ + /*@>142f3c6*/rtb_y_i_0->im/*@>1403cc8*/ * /*@>142f3c9*/rtb_y_i_0->im;
    /* {S!d2634}Product: '<S790>/Multiply' incorporates:
 *  MATLAB Function: '<S762>/MATLAB Function'
 *  Math: '<S774>/Math Function1'
 *
 * About '<S774>/Math Function1':
 *  Operator: magnitude^2
 */
    /*@>143737a*/Model_Target_B./*@>1443470*/Multiply_n/*@>13e9257*/[/*@>1401961*/delayLen]/*@>13e9258*/ = rtb_Sumhighfrequencyenergy/*@>14032d7*/ * /*@>1437380*/Model_Target_B./*@>1443473*/Multiply_c/*@>14343c5*/[/*@>14343c2*/delayLen];
    /* {S!d2636}Math: '<S774>/Math Function1'
 *
 * About '<S774>/Math Function1':
 *  Operator: magnitude^2
 */
    /*@>1437386*/Model_Target_B./*@>1443476*/Lstrk/*@>13f7df5*/[/*@>1401dbb*/delayLen] = rtb_Sumhighfrequencyenergy;
}
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[254], "Output",4)
/* {S!d2638}MATLAB Function: '<S793>/MATLAB Function' incorporates:
 *  Constant: '<S764>/lsGain1'
 *  Constant: '<S764>/lsPole1'
 */
%if SLibCG_SystemFcnArgAccessed("Model_Target_MATLABFunction",254,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[143e3df*/",SLibCGIRGenReusableSysCall("Model_Target_MATLABFunction", ["%<_modelSS>", "/*@>1443bb5*/Model_Target_B./*@>1443bb4*/Multiply_n", "/*@>1443bc0*/0.90993F", "/*@>1443bca*/0.0450350046F", "&/*@>1443bd6*/Model_Target_B./*@>1443bd5*/sf_MATLABFunction_ii", "&/*@>1443be3*/Model_Target_DW./*@>1443be2*/sf_MATLABFunction_ii"], 254, 19, 6, 4, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[254]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[254], "Output",4)

/* {S!d2640}MATLAB Function: '<S776>/MATLAB Function' incorporates:
 *  Constant: '<S764>/lsGain1'
 *  Constant: '<S764>/lsPole1'
 */
%if SLibCG_SystemFcnArgAccessed("Model_Target_MATLABFunction",254,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[143e3e0*/",SLibCGIRGenReusableSysCall("Model_Target_MATLABFunction", ["%<_modelSS>", "/*@>1443c21*/Model_Target_B./*@>1443c20*/Lstrk", "/*@>1443c2c*/0.90993F", "/*@>1443c36*/0.0450350046F", "&/*@>1443c42*/Model_Target_B./*@>1443c41*/sf_MATLABFunction_n0", "&/*@>1443c4f*/Model_Target_DW./*@>1443c4e*/sf_MATLABFunction_n0"], 254, 15, 6, 4, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[254]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

%endif
/* {S!d2642}Math: '<S774>/Math Function3' incorporates:
 *  Constant: '<S774>/Constant2'
 *  Product: '<S809>/Divide'
 *  Sum: '<S774>/Add1'
 *
 * About '<S774>/Math Function3':
 *  Operator: reciprocal
 */
/*@>13e1650*/for (/*@>14421a7*/i = /*@>14421a6*/0; /*@>14421b1*/i < /*@>14421af*/129; /*@>14421ad*/i/*@>1442323*/++) {
    /*@>1437392*/Model_Target_B./*@>1443479*/Multiply_n/*@>13e929f*/[/*@>140196b*/i]/*@>13e163d*/ = /*@>142c5ee*/qhmath_div_f(/*@>140c5c5*/1.0F, /*@>143739d*/Model_Target_B./*@>144347f*/sf_MATLABFunction_n0./*@>144347c*/y/*@>14343cb*/[/*@>14343c8*/i]/*@>140ca9a*/ + /*@>140caa0*/2.22044605E-16F);
}
/* {E!d2642}End of Math: '<S774>/Math Function3' */

/* {S!d2644}Product: '<S768>/Multiply' incorporates:
 *  Math: '<S774>/Math Function'
 *
 * About '<S774>/Math Function':
 *  Operator: magnitude^2
 */
/*@>13e1673*/for (/*@>1442196*/i = /*@>1442195*/0; /*@>14421a0*/i < /*@>144219e*/129; /*@>144219c*/i/*@>1442324*/++) {
    /*@>14373af*/Model_Target_B./*@>1443488*/Multiply_c/*@>13e92f1*/[/*@>1401977*/i]/*@>13e165e*/ = /*@>14373b5*/Model_Target_B./*@>144348b*/Lin2/*@>14343d1*/[/*@>14343ce*/i]/*@>14032db*/ * /*@>14373c0*/Model_Target_B./*@>1443491*/sf_Coeffs1stStage_m./*@>144348e*/Lok/*@>14343d7*/[/*@>14343d4*/i];
}
/* {E!d2644}End of Product: '<S768>/Multiply' */
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[254], "Output",4)

/* {S!d2646}MATLAB Function: '<S770>/MATLAB Function' incorporates:
 *  Constant: '<S764>/lsGain1'
 *  Constant: '<S764>/lsPole1'
 */
%if SLibCG_SystemFcnArgAccessed("Model_Target_MATLABFunction",254,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[143e3e1*/",SLibCGIRGenReusableSysCall("Model_Target_MATLABFunction", ["%<_modelSS>", "/*@>1443c8d*/Model_Target_B./*@>1443c8c*/Multiply_c", "/*@>1443c98*/0.90993F", "/*@>1443ca2*/0.0450350046F", "&/*@>1443cae*/Model_Target_B./*@>1443cad*/sf_MATLABFunction_c5", "&/*@>1443cbb*/Model_Target_DW./*@>1443cba*/sf_MATLABFunction_c5"], 254, 12, 6, 4, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[254]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

%endif
/* {S!d2648}Product: '<S768>/Multiply1' incorporates:
 *  S-Function (sdspmultiportsel): '<S857>/Stereo Split'
 */
/*@>13e1696*/for (/*@>1442185*/i = /*@>1442184*/0; /*@>144218f*/i < /*@>144218d*/129; /*@>144218b*/i/*@>1442325*/++) {
    /*@>14373d2*/Model_Target_B./*@>1443494*/Multiply1_e/*@>13e9348*/[/*@>1401983*/i]/*@>13e1681*/ = /*@>14373dd*/Model_Target_B./*@>144349a*/sf_MATLABFunction_c5./*@>1443497*/y/*@>14343dd*/[/*@>14343da*/i]/*@>14032df*/ * /*@>14373e3*/Model_Target_B./*@>144349d*/instCPS/*@>14343e3*/[/*@>14343e0*/i];
}
/* {E!d2648}End of Product: '<S768>/Multiply1' */

/* {S!d2650}Product: '<S769>/Multiply' incorporates:
 *  Math: '<S774>/Math Function1'
 *
 * About '<S774>/Math Function1':
 *  Operator: magnitude^2
 */
/*@>13e16b9*/for (/*@>1442174*/i = /*@>1442173*/0; /*@>144217e*/i < /*@>144217c*/129; /*@>144217a*/i/*@>1442326*/++) {
    /*@>14373f5*/Model_Target_B./*@>14434a6*/Multiply_c/*@>13e939a*/[/*@>140198f*/i]/*@>13e16a4*/ = /*@>14373fb*/Model_Target_B./*@>14434a9*/Lstrk/*@>14343e9*/[/*@>14343e6*/i]/*@>14032e3*/ * /*@>1437406*/Model_Target_B./*@>14434af*/sf_Coeffs1stStage_m./*@>14434ac*/Rok/*@>14343ef*/[/*@>14343ec*/i];
}
/* {E!d2650}End of Product: '<S769>/Multiply' */
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[254], "Output",4)

/* {S!d2652}MATLAB Function: '<S772>/MATLAB Function' incorporates:
 *  Constant: '<S764>/lsGain1'
 *  Constant: '<S764>/lsPole1'
 */
%if SLibCG_SystemFcnArgAccessed("Model_Target_MATLABFunction",254,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[143e3e2*/",SLibCGIRGenReusableSysCall("Model_Target_MATLABFunction", ["%<_modelSS>", "/*@>1443cf9*/Model_Target_B./*@>1443cf8*/Multiply_c", "/*@>1443d04*/0.90993F", "/*@>1443d0e*/0.0450350046F", "&/*@>1443d1a*/Model_Target_B./*@>1443d19*/sf_MATLABFunction_ec", "&/*@>1443d27*/Model_Target_DW./*@>1443d26*/sf_MATLABFunction_ec"], 254, 13, 6, 4, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[254]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

%endif
/* {S!d2654}Product: '<S769>/Multiply1' incorporates:
 *  Product: '<S809>/Divide'
 */
/*@>13e16dc*/for (/*@>1442163*/i = /*@>1442162*/0; /*@>144216d*/i < /*@>144216b*/129; /*@>1442169*/i/*@>1442327*/++) {
    /*@>1437412*/Model_Target_B./*@>14434b2*/Multiply1_m/*@>13e93ee*/[/*@>140199b*/i]/*@>13e16c7*/ = /*@>143741d*/Model_Target_B./*@>14434b8*/sf_MATLABFunction_ec./*@>14434b5*/y/*@>14343f5*/[/*@>14343f2*/i]/*@>14032e7*/ * /*@>1437423*/Model_Target_B./*@>14434bb*/Multiply_n/*@>14343fb*/[/*@>14343f8*/i];
}
/* {E!d2654}End of Product: '<S769>/Multiply1' */

/* {S!d2656}MATLAB Function: '<S759>/Coeffs 2nd Stage' incorporates:
 *  Product: '<S768>/Multiply1'
 *  Product: '<S769>/Multiply1'
 */
/*  Update mono coeffs after smoothing far left/right coeffs */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 2/Full-Rate FDP/Fdp/FreqDomainProcessing/CalculateAndApplyCoefficients/FullRate/Calculate coefficients/Coeffs 2nd Stage': '<S761>:1' */
/*  Left only/right only coefficients */
/* '<S761>:1:5' Lxks = 1 - Loks; */
/* '<S761>:1:6' Rxks = 1 - Roks; */
/*@>13e16fa*/for (/*@>1442152*/i = /*@>1442151*/0; /*@>144215c*/i < /*@>144215a*/129; /*@>1442158*/i/*@>1442328*/++) {
    /*@>143742f*/Model_Target_B./*@>14434be*/Lxks/*@>13e9425*/[/*@>14019a3*/i]/*@>13e16ea*/ = /*@>14017bf*/1.0F/*@>13e16f1*/ - /*@>1437435*/Model_Target_B./*@>14434c1*/Multiply1_e/*@>1434401*/[/*@>14343fe*/i];
    /*@>14019a9*/rtb_Rxks/*@>13e945c*/[/*@>14019ab*/i]/*@>13e1708*/ = /*@>14017c5*/1.0F/*@>13e170f*/ - /*@>143743b*/Model_Target_B./*@>14434c4*/Multiply1_m/*@>1434407*/[/*@>1434404*/i];
}
/* {E!d2656}End of MATLAB Function: '<S759>/Coeffs 2nd Stage' */

/* {S!d2658}MATLAB Function: '<S766>/Normalize Stretch Coeffs' incorporates:
 *  Math: '<S774>/Math Function'
 *  Product: '<S783>/Multiply'
 *  Product: '<S789>/Multiply1'
 *  Product: '<S790>/Multiply1'
 *  Product: '<S809>/Divide'
 *  S-Function (sdspmultiportsel): '<S857>/Stereo Split'
 *
 * About '<S774>/Math Function':
 *  Operator: magnitude^2
 */
/*  Normalize stretch coefficients against mono portion  */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 2/Full-Rate FDP/Fdp/FreqDomainProcessing/CalculateAndApplyCoefficients/FullRate/Calculate coefficients/Updated Stretch Coeffs and Steering Coeffs/Normalize Stretch Coeffs': '<S779>:1' */
/*  Take only difference of L&R strecth coeffs as the total stretch  */
/* '<S779>:1:6' netStretch = (Lstrks .* absLi) - (Rstrks.* absRi); */
/*@>13e1757*/for (/*@>1442141*/i = /*@>1442140*/0; /*@>144214b*/i < /*@>1442149*/129; /*@>1442147*/i/*@>1442329*/++) {
    /*@>1437447*/Model_Target_B./*@>14434c7*/Multiply_c/*@>13e9524*/[/*@>14019c7*/i]/*@>13e1726*/ = /*@>1437452*/Model_Target_B./*@>14434cd*/sf_MATLABFunction_eb./*@>14434ca*/y/*@>143440d*/[/*@>143440a*/i]/*@>14032ef*/ * /*@>1437458*/Model_Target_B./*@>14434d0*/instCPS/*@>1434413*/[/*@>1434410*/i]/*@>14032eb*/ * /*@>1437463*/Model_Target_B./*@>14434d6*/sf_Coeffs1stStage_m./*@>14434d3*/absLi/*@>1434419*/[/*@>1434416*/i]/*@>13e172d*/ - /*@>143746e*/Model_Target_B./*@>14434dc*/sf_MATLABFunction_ii./*@>14434d9*/y/*@>143441f*/[/*@>143441c*/i]/*@>14032f7*/ * /*@>1437474*/Model_Target_B./*@>14434df*/Multiply_n/*@>1434425*/[/*@>1434422*/i]/*@>14032f3*/ * /*@>143747f*/Model_Target_B./*@>14434e5*/sf_Coeffs1stStage_m./*@>14434e2*/absRi/*@>143442b*/[/*@>1434428*/i];
}
/*  Normalize by the smoothed total shared level  */
/* '<S779>:1:9' epsf = single(eps); */
/* '<S779>:1:10' LxSmth = (Lxks .* absLi) + epsf; */
/* '<S779>:1:11' RxSmth = (Rxks .* absRi) + epsf; */
/* '<S779>:1:13' Lstrki = max(0.0, netStretch) ./ LxSmth; */
/*@>10de209*/for (/*@>1442130*/row = /*@>144212f*/0; /*@>144213a*/row < /*@>1442138*/129; /*@>1442136*/row/*@>144232a*/++) {
    /*@>14019da*/rtb_Add1_k3/*@>13e95c2*/[/*@>14019dc*/row]/*@>10de210*/ = /*@>142c5f4*/fmaxf(/*@>1401527*/0.0F, /*@>1437485*/Model_Target_B./*@>14434e8*/Multiply_c/*@>1434431*/[/*@>143442e*/row]);
}
/*@>13e9590*/for (/*@>144211f*/delayLen = /*@>144211e*/0; /*@>1442129*/delayLen < /*@>1442127*/129; /*@>1442125*/delayLen/*@>144232b*/++) {
    /*@>1417586*/rtb_Add1_k3/*@>1417585*/[/*@>1417588*/delayLen] = /*@>142c5f6*/qhmath_div_f(/*@>1434435*/rtb_Add1_k3/*@>1434437*/[/*@>1434434*/delayLen], /*@>143748b*/Model_Target_B./*@>14434eb*/Lxks/*@>143443d*/[/*@>143443a*/delayLen]/*@>1419e22*/ * /*@>1437496*/Model_Target_B./*@>14434f1*/sf_Coeffs1stStage_m./*@>14434ee*/absLi/*@>1434443*/[/*@>1434440*/delayLen]/*@>1419e21*/ + /*@>1419e2d*/2.22044605E-16F);
}
/* '<S779>:1:14' Rstrki = max(0.0, (-netStretch)) ./ RxSmth; */
/*@>13e95fd*/for (/*@>144210e*/row = /*@>144210d*/0; /*@>1442118*/row < /*@>1442116*/129; /*@>1442114*/row/*@>144232c*/++) {
    updatedLokRokScaleFactor = /*@>143749c*/Model_Target_B./*@>14434f4*/Multiply_c/*@>1434449*/[/*@>1434446*/row];
    /*@>14019f0*/rtb_Add1_ma/*@>13e9699*/[/*@>14019f2*/row]/*@>10de21c*/ = /*@>142c5f8*/fmaxf(/*@>1401526*/0.0F, -/*@<140c5e8*/updatedLokRokScaleFactor);
    /*@>14374ad*/Model_Target_B./*@>14434fd*/Multiply_c/*@>141759d*/[/*@>14175a0*/row] = -/*@<14246ee*/updatedLokRokScaleFactor;
}
/*@>13e9667*/for (/*@>14420fd*/delayLen = /*@>14420fc*/0; /*@>1442107*/delayLen < /*@>1442105*/129; /*@>1442103*/delayLen/*@>144232d*/++) {
    /*@>14175b6*/rtb_Add1_ma/*@>14175b5*/[/*@>14175b8*/delayLen] = /*@>142c5fa*/qhmath_div_f(/*@>143444d*/rtb_Add1_ma/*@>143444f*/[/*@>143444c*/delayLen], /*@>1434453*/rtb_Rxks/*@>1434455*/[/*@>1434452*/delayLen]/*@>1419e40*/ * /*@>14374a7*/Model_Target_B./*@>14434fa*/sf_Coeffs1stStage_m./*@>14434f7*/absRi/*@>143445b*/[/*@>1434458*/delayLen]/*@>1419e3f*/ + /*@>1419e4b*/2.22044605E-16F);
}
/*  Bound the stretch coefficients within [0,1] */
/* '<S779>:1:17' Lstrki = min(1.0, max(0.0, Lstrki)); */
/* '<S779>:1:18' Rstrki = min(1.0, max(0.0, Rstrki)); */
/*@>10de221*/for (/*@>14420ec*/row = /*@>14420eb*/0; /*@>14420f6*/row < /*@>14420f4*/129; /*@>14420f2*/row/*@>144232e*/++) {
    updatedLokRokScaleFactor/*@>13e9704*/ = /*@>142c5fe*/fminf(/*@>140c617*/1.0F, /*@>142c5fc*/fmaxf(/*@>140cab4*/0.0F, /*@>143445f*/rtb_Add1_k3/*@>1434461*/[/*@>143445e*/row]));
    rtb_Sumhighfrequencyenergy/*@>10de240*/ = /*@>142c600*/fmaxf(/*@>1401523*/0.0F, /*@>1434465*/rtb_Add1_ma/*@>1434467*/[/*@>1434464*/row]);
    /*@>14374cb*/Model_Target_B./*@>1443506*/Multiply_c/*@>13f7e90*/[/*@>1401e11*/row] = /*@>142c602*/fminf(/*@>140c627*/1.0F, rtb_Sumhighfrequencyenergy);
    /*@>14175ce*/rtb_Add1_k3/*@>14175cd*/[/*@>14175d0*/row] = rtb_Sumhighfrequencyenergy;
    /*@>14374e8*/Model_Target_B./*@>1443515*/Lin2/*@>14175e5*/[/*@>14175e8*/row] *= updatedLokRokScaleFactor;
}
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[254], "Output",4)
/* {S!d2660}MATLAB Function: '<S785>/MATLAB Function' incorporates:
 *  Constant: '<S764>/lsGain1'
 *  Constant: '<S764>/lsPole1'
 */
%if SLibCG_SystemFcnArgAccessed("Model_Target_MATLABFunction",254,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[143e3e3*/",SLibCGIRGenReusableSysCall("Model_Target_MATLABFunction", ["%<_modelSS>", "/*@>1443d65*/Model_Target_B./*@>1443d64*/Lin2", "/*@>1443d70*/0.90993F", "/*@>1443d7a*/0.0450350046F", "&/*@>1443d86*/Model_Target_B./*@>1443d85*/sf_MATLABFunction_fi", "&/*@>1443d93*/Model_Target_DW./*@>1443d92*/sf_MATLABFunction_fi"], 254, 16, 6, 4, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[254]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

%endif
/* {S!d2662}Product: '<S783>/Multiply1' incorporates:
 *  S-Function (sdspmultiportsel): '<S857>/Stereo Split'
 */
/*@>13e177a*/for (/*@>14420db*/i = /*@>14420da*/0; /*@>14420e5*/i < /*@>14420e3*/129; /*@>14420e1*/i/*@>1442330*/++) {
    /*@>14374d1*/Model_Target_B./*@>1443509*/Lin2/*@>13e98a4*/[/*@>1401a0b*/i]/*@>13e1765*/ = /*@>14374dc*/Model_Target_B./*@>144350f*/sf_MATLABFunction_fi./*@>144350c*/y/*@>143446d*/[/*@>143446a*/i]/*@>140331a*/ * /*@>14374e2*/Model_Target_B./*@>1443512*/instCPS/*@>1434473*/[/*@>1434470*/i];
}
/* {E!d2662}End of Product: '<S783>/Multiply1' */

/* {S!d2664}Product: '<S784>/Multiply' incorporates:
 *  MATLAB Function: '<S766>/Normalize Stretch Coeffs'
 *  Math: '<S774>/Math Function1'
 *
 * About '<S774>/Math Function1':
 *  Operator: magnitude^2
 */
/*@>13e9855*/for (/*@>14420ca*/delayLen = /*@>14420c9*/0; /*@>14420d4*/delayLen < /*@>14420d2*/129; /*@>14420d0*/delayLen/*@>1442331*/++) {
    /*@>1437500*/Model_Target_B./*@>144351e*/Lstrk/*@>14175fd*/[/*@>1417600*/delayLen] *= /*@>143750c*/Model_Target_B./*@>1443521*/Multiply_c/*@>1434485*/[/*@>1434482*/delayLen];
}
/* {E!d2664}End of Product: '<S784>/Multiply' */
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[254], "Output",4)

/* {S!d2666}MATLAB Function: '<S787>/MATLAB Function' incorporates:
 *  Constant: '<S764>/lsGain1'
 *  Constant: '<S764>/lsPole1'
 */
%if SLibCG_SystemFcnArgAccessed("Model_Target_MATLABFunction",254,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[143e3e4*/",SLibCGIRGenReusableSysCall("Model_Target_MATLABFunction", ["%<_modelSS>", "/*@>1443dd1*/Model_Target_B./*@>1443dd0*/Lstrk", "/*@>1443ddc*/0.90993F", "/*@>1443de6*/0.0450350046F", "&/*@>1443df2*/Model_Target_B./*@>1443df1*/sf_MATLABFunction_m", "&/*@>1443dff*/Model_Target_DW./*@>1443dfe*/sf_MATLABFunction_m"], 254, 17, 6, 4, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[254]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

%endif
/* {S!d2668}Product: '<S784>/Multiply1' incorporates:
 *  Product: '<S809>/Divide'
 */
/*@>13e98f6*/for (/*@>14420b9*/delayLen = /*@>14420b8*/0; /*@>14420c3*/delayLen < /*@>14420c1*/129; /*@>14420bf*/delayLen/*@>1442333*/++) {
    /*@>1437536*/Model_Target_B./*@>1443536*/Multiply_n/*@>1417615*/[/*@>1417618*/delayLen] *= /*@>1437541*/Model_Target_B./*@>144353c*/sf_MATLABFunction_m./*@>1443539*/y/*@>143448b*/[/*@>1434488*/delayLen];
}
/* {E!d2668}End of Product: '<S784>/Multiply1' */
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[257], "Output",4)

/* {S!d2670}MATLAB Function: '<S766>/Update Steering Coeffs' */
%if SLibCG_SystemFcnArgAccessed("Model_Target_UpdateSteeringCoeffs",257,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[143e3e5*/",SLibCGIRGenReusableSysCall("Model_Target_UpdateSteeringCoeffs", ["%<_modelSS>", "/*@>1443e46*/Model_Target_B./*@>1443e45*/Lin2", "/*@>1443e52*/Model_Target_B./*@>1443e51*/Multiply_n", "/*@>1443e5e*/Model_Target_B./*@>1443e5d*/Multiply1_e", "/*@>1443e6a*/Model_Target_B./*@>1443e69*/Multiply1_m", "/*@>1443e76*/Model_Target_B./*@>1443e75*/Lxks", "/*@>1443e81*/rtb_Rxks", "&/*@>1443e8d*/Model_Target_B./*@>1443e8c*/sf_UpdateSteeringCoeffs_b"], 257, 1, 6, 4, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[257]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

%endif
/* {S!d2672}MATLAB Function: '<S757>/Apply coefficients' incorporates:
 *  Selector: '<S753>/Selector'
 *  Selector: '<S753>/Selector1'
 */
/*  For full-rate Medusa Processing, since we do not generate the Left Surround */
/*  and Right Surround signals, the residual is simply the leftover "excess" */
/*  coefficient, after the far left/far right (Lo/Ro) signals have been extracted. */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 2/Full-Rate FDP/Fdp/FreqDomainProcessing/CalculateAndApplyCoefficients/FullRate/Apply coefficients': '<S758>:1' */
/*  Left/Right only */
/* '<S758>:1:7' Lo = Lok .* L; */
/*@>13e99fb*/for (/*@>14420a8*/delayLen = /*@>14420a7*/0; /*@>14420b2*/delayLen < /*@>14420b0*/129; /*@>14420ae*/delayLen/*@>1442335*/++) {
    /*@>143754d*/Model_Target_B./*@>144353f*/MatrixConcatenate_mb/*@>13fbbca*/[/*@>1401f5c*/delayLen]./*@>1443386*/re/*@>13fbbc9*/ = /*@>1437558*/Model_Target_B./*@>1443545*/sf_UpdateSteeringCoeffs_b./*@>1443542*/Lok/*@>1434497*/[/*@>1434494*/delayLen]/*@>140332a*/ * /*@>143755e*/Model_Target_B./*@>1443548*/y_i/*@>143449d*/[/*@>143449a*/delayLen].re;
    /*@>1437564*/Model_Target_B./*@>144354b*/MatrixConcatenate_mb/*@>13e99e7*/[/*@>1401a1e*/delayLen]./*@>1443389*/im/*@>13e99ee*/ = /*@>143756f*/Model_Target_B./*@>1443551*/sf_UpdateSteeringCoeffs_b./*@>144354e*/Lok/*@>14344a3*/[/*@>14344a0*/delayLen]/*@>1403326*/ * /*@>1437575*/Model_Target_B./*@>1443554*/y_i/*@>14344a9*/[/*@>14344a6*/delayLen].im;
}
/* '<S758>:1:8' Ro = Rok .* R; */
/*@>13e9b03*/for (/*@>1442097*/delayLen = /*@>1442096*/0; /*@>14420a1*/delayLen < /*@>144209f*/129; /*@>144209d*/delayLen/*@>1442336*/++) {
    /*@>143757b*/Model_Target_B./*@>1443557*/MatrixConcatenate_mb/*@>13fbbe1*/[/*@>1401f69*/delayLen/*@>13fbbe3*/ + /*@>1401f68*/129]./*@>144338c*/re/*@>13fbbe0*/ = /*@>1437581*/Model_Target_B./*@>144355a*/y_i/*@>14344b1*/[/*@>14344ad*/delayLen/*@>14344ab*/ + /*@>14344ae*/129].re/*@>1403332*/ * /*@>143758c*/Model_Target_B./*@>1443560*/sf_UpdateSteeringCoeffs_b./*@>144355d*/Rok/*@>14344b7*/[/*@>14344b4*/delayLen];
    /*@>1437592*/Model_Target_B./*@>1443563*/MatrixConcatenate_mb/*@>13e9aed*/[/*@>1401a2e*/delayLen/*@>13e9af2*/ + /*@>1401a2d*/129]./*@>144338f*/im/*@>13e9af6*/ = /*@>1437598*/Model_Target_B./*@>1443566*/y_i/*@>14344bf*/[/*@>14344bb*/delayLen/*@>14344b9*/ + /*@>14344bc*/129].im/*@>140332e*/ * /*@>14375a3*/Model_Target_B./*@>144356c*/sf_UpdateSteeringCoeffs_b./*@>1443569*/Rok/*@>14344c5*/[/*@>14344c2*/delayLen];
}
/*  Left/Right surround residual */
/* '<S758>:1:11' Lsr = Lxk .* L; */
/*@>13e9bb7*/for (/*@>1442086*/delayLen = /*@>1442085*/0; /*@>1442090*/delayLen < /*@>144208e*/129; /*@>144208c*/delayLen/*@>1442337*/++) {
    /*@>14375af*/Model_Target_B./*@>144356f*/Lsr/*@>13fbbfc*/[/*@>1401f76*/delayLen]./*@>1443392*/re/*@>13fbbfb*/ = /*@>14375ba*/Model_Target_B./*@>1443575*/sf_UpdateSteeringCoeffs_b./*@>1443572*/Lxk/*@>14344cb*/[/*@>14344c8*/delayLen]/*@>140333a*/ * /*@>14375c0*/Model_Target_B./*@>1443578*/y_i/*@>14344d1*/[/*@>14344ce*/delayLen].re;
    /*@>14375cc*/Model_Target_B./*@>144357b*/Lsr/*@>13e9ba9*/[/*@>1401a3d*/delayLen]./*@>1443395*/im/*@>13e9baa*/ = /*@>14375d7*/Model_Target_B./*@>1443581*/sf_UpdateSteeringCoeffs_b./*@>144357e*/Lxk/*@>14344d7*/[/*@>14344d4*/delayLen]/*@>1403336*/ * /*@>14375dd*/Model_Target_B./*@>1443584*/y_i/*@>14344dd*/[/*@>14344da*/delayLen].im;
}
/* '<S758>:1:12' Rsr = Rxk .* R; */
/*@>13e9c6b*/for (/*@>1442075*/delayLen = /*@>1442074*/0; /*@>144207f*/delayLen < /*@>144207d*/129; /*@>144207b*/delayLen/*@>1442338*/++) {
    /*@>14375e3*/Model_Target_B./*@>1443587*/Rsr/*@>13fbc13*/[/*@>1401f82*/delayLen]./*@>1443398*/re/*@>13fbc12*/ = /*@>14375e9*/Model_Target_B./*@>144358a*/y_i/*@>14344e5*/[/*@>14344e1*/delayLen/*@>14344df*/ + /*@>14344e2*/129].re/*@>1403342*/ * /*@>14375f4*/Model_Target_B./*@>1443590*/sf_UpdateSteeringCoeffs_b./*@>144358d*/Rxk/*@>14344eb*/[/*@>14344e8*/delayLen];
    /*@>14375fa*/Model_Target_B./*@>1443593*/Rsr/*@>13e9c5d*/[/*@>1401a4e*/delayLen]./*@>144339b*/im/*@>13e9c5e*/ = /*@>1437600*/Model_Target_B./*@>1443596*/y_i/*@>14344f3*/[/*@>14344ef*/delayLen/*@>14344ed*/ + /*@>14344f0*/129].im/*@>140333e*/ * /*@>143760b*/Model_Target_B./*@>144359c*/sf_UpdateSteeringCoeffs_b./*@>1443599*/Rxk/*@>14344f9*/[/*@>14344f6*/delayLen];
}
/* {E!d2672}End of MATLAB Function: '<S757>/Apply coefficients' */

/* {S!d2674}Product: '<S799>/Divide' incorporates:
 *  Constant: '<S799>/Constant'
 *  Constant: '<S799>/Constant1'
 *  Product: '<S810>/Divide'
 *  Sum: '<S799>/Minus'
 */
/*@>1418cc6*/updatedLokRokScaleFactor_tmp/*@>1418cc8*/ = (/*@>1401d10*/1.0F/*@>13d159d*/ - %<SLibCG_DumpSSCode("/*@[143ea09*/",(SLibCG_SE(SLibCG_BOCSC(304, 1, "", -1, "", 0))),"/*@]*/")>)/*@>1403231*/ * /*@>1401ebd*/0.5F;
/* {S!d2676}Sum: '<S800>/Matrix Sum' */
/*@>14016ca*/rtb_Delay_og/*@>10dd4b7*/ = /*@>14016c9*/-0.0F;
/*@>13e1798*/for (/*@>1442064*/i = /*@>1442063*/0; /*@>144206e*/i < /*@>144206c*/129; /*@>144206a*/i/*@>1442339*/++) {
    /* {S!d2678}Math: '<S756>/Math Function' incorporates:
 *  Math: '<S756>/Math Function1'
 *  Math: '<S774>/Math Function'
 *  Math: '<S774>/Math Function1'
 *  Selector: '<S753>/Selector'
 *  Selector: '<S753>/Selector1'
 *
 * About '<S756>/Math Function':
 *  Operator: magnitude^2
 *
 * About '<S756>/Math Function1':
 *  Operator: magnitude^2
 *
 * About '<S774>/Math Function':
 *  Operator: magnitude^2
 *
 * About '<S774>/Math Function1':
 *  Operator: magnitude^2
 */
    /*@>142f3a2*/rtb_y_i_0/*@>142f3a9*/ = &/*@>143761d*/Model_Target_B./*@>144359f*/Lsr/*@>142f3a8*/[/*@>142f3a5*/i];
    /* {S!d2680}Math: '<S756>/Math Function'
 *
 * About '<S756>/Math Function':
 *  Operator: magnitude^2
 */
    /*@>1437623*/Model_Target_B./*@>14435a2*/MathFunction/*@>13e9ca1*/[/*@>1401a59*/i]/*@>13e1788*/ = /*@>142f3cc*/rtb_y_i_0->re/*@>140c655*/ * /*@>142f3cf*/rtb_y_i_0->re/*@>140c654*/ + /*@>142f3d2*/rtb_y_i_0->im/*@>140c65e*/ * /*@>142f3d5*/rtb_y_i_0->im;
    /* {S!d2682}Sum: '<S799>/Add1' incorporates:
 *  Delay: '<S799>/Delay'
 *  Delay: '<S799>/Delay1'
 *  Math: '<S756>/Math Function'
 *  Product: '<S799>/Divide'
 *  Product: '<S799>/Multiply'
 *  Product: '<S799>/Multiply1'
 *  Sum: '<S799>/Add'
 *
 * About '<S756>/Math Function':
 *  Operator: magnitude^2
 */
    /*@>1437629*/Model_Target_B./*@>14435a5*/Lin2/*@>13e9d13*/[/*@>1401a69*/i]/*@>13e17a6*/ = (/*@>143762f*/Model_Target_B./*@>14435a8*/MathFunction/*@>14344ff*/[/*@>14344fc*/i]/*@>13e17af*/ + /*@>1438531*/Model_Target_DW./*@>14436c5*/Delay_DSTATE_i/*@>1434505*/[/*@>1434502*/i])/*@>1403346*/ * /*@>1419d97*/updatedLokRokScaleFactor_tmp/*@>13e17ad*/ + /*@>1438537*/Model_Target_DW./*@>14436c8*/Delay1_DSTATE/*@>143450b*/[/*@>1434508*/i]/*@>140334a*/ * %<SLibCG_DumpSSCode("/*@[143e8d7*/",(SLibCG_SE(SLibCG_BOCSC(304, 1, "", -1, "", 0))),"/*@]*/")>;
    /* {S!d2684}Sum: '<S800>/Matrix Sum' incorporates:
 *  Math: '<S756>/Math Function'
 *
 * About '<S756>/Math Function':
 *  Operator: magnitude^2
 */
    /*@>14016c5*/rtb_Delay_og/*@>144233a*/ += /*@>1437635*/Model_Target_B./*@>14435ab*/MathFunction/*@>1434511*/[/*@>143450e*/i];
}
/* {S!d2686}Sum: '<S803>/Sum2' incorporates:
 *  Constant: '<S803>/Constant'
 *  Gain: '<S803>/Gain'
 *  Math: '<S803>/log10'
 *  Sum: '<S803>/Sum1'
 *
 * About '<S803>/log10':
 *  Operator: log10
 */
/*@>14013ca*/updatedLokRokScaleFactor/*@>1104bb5*/ = /*@>142c60a*/qhmath_log10_f(/*@>140176c*/rtb_Delay_og/*@>13d50f4*/ + /*@>1401d12*/2.22044605E-16F)/*@>140322d*/ * /*@>1401d11*/10.0F;
/* {S!d2688}MATLAB Function: '<S800>/Detect Impulse' incorporates:
 *  Delay: '<S800>/Delay'
 *  Sum: '<S800>/Add1'
 */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 2/Full-Rate FDP/Fdp/FreqDomainProcessing/Reverb Extractions/Left Reverb Extraction/Compute PSD/Impulse Detector/Detect Impulse': '<S802>:1' */
/* '<S802>:1:5' if isempty(counter) */
/* '<S802>:1:6' if isempty(state) */
/* '<S802>:1:8' if (EnergyDifference > DetectImpulseThreshold) */
/*@>10de30f*/if (/*@>1401720*/updatedLokRokScaleFactor/*@>13d15d5*/ - /*@>143853d*/Model_Target_DW./*@>14436cb*/Delay_DSTATE_nb/*@>10de30b*/ > /*@>1401501*/0.75F) {
    /* '<S802>:1:9' isImpulsive = 1; */
    /*@>1401515*/rtb_isImpulsive_g/*@>10de301*/ = /*@>1441e9a*/1;
    /* '<S802>:1:10' counter = 0; */
    /*@>143854f*/Model_Target_DW./*@>14436d4*/counter_b/*@>10de302*/ = /*@>1401511*/0.0;
} else /*@>10de312*/if ((/*@>1438543*/Model_Target_DW./*@>14436ce*/counter_b/*@>10de30c*/ < /*@>1401500*/Model_Target_MaxValueOfCounterForDetectingImpulse_n)/*@>10de337*/ && (/*@>1438549*/Model_Target_DW./*@>14436d1*/state_l/*@>10de30d*/ == /*@>1401517*/1.0)) {
    /* '<S802>:1:11' elseif (counter < MaxValueOfCounterForDetectingImpulse) && (state == 1) */
    /* '<S802>:1:12' isImpulsive = 1; */
    /*@>140150c*/rtb_isImpulsive_g/*@>10de305*/ = /*@>1441ea0*/1;
    /* '<S802>:1:13' counter = counter + 1; */
    /*@>1438555*/Model_Target_DW./*@>14436d7*/counter_b/*@>144235e*/++;
} else {
    /* '<S802>:1:14' else */
    /* '<S802>:1:15' isImpulsive = 0; */
    /*@>140150f*/rtb_isImpulsive_g/*@>10de308*/ = /*@>1441e9d*/0;
}
/* '<S802>:1:17' state = isImpulsive; */
/*@>1438561*/Model_Target_DW./*@>14436da*/state_l/*@>10de30a*/ = /*@>1401504*/rtb_isImpulsive_g;
/* {E!d2688}End of MATLAB Function: '<S800>/Detect Impulse' */

/* {S!d2690}Product: '<S801>/Divide' incorporates:
 *  Constant: '<S801>/Constant'
 *  Constant: '<S801>/Constant1'
 *  Product: '<S812>/Divide'
 *  Sum: '<S801>/Minus'
 */
/*@>1418d06*/minXp_tmp/*@>1418d08*/ = (/*@>1401d13*/1.0F/*@>13d15db*/ - %<SLibCG_DumpSSCode("/*@[143ea25*/",(SLibCG_SE(SLibCG_BOCSC(305, 1, "", -1, "", 0))),"/*@]*/")>)/*@>1403229*/ * /*@>1401ebe*/0.5F;
/* {S!d2692}Sum: '<S801>/Add1' incorporates:
 *  Delay: '<S801>/Delay'
 *  Delay: '<S801>/Delay1'
 *  Math: '<S756>/Math Function'
 *  Product: '<S801>/Divide'
 *  Product: '<S801>/Multiply'
 *  Product: '<S801>/Multiply1'
 *  Sum: '<S801>/Add'
 *
 * About '<S756>/Math Function':
 *  Operator: magnitude^2
 */
/*@>13e17f8*/for (/*@>1442053*/i = /*@>1442052*/0; /*@>144205d*/i < /*@>144205b*/129; /*@>1442059*/i/*@>144233b*/++) {
    /*@>1401a7b*/rtb_Add1_k3/*@>13e9dbb*/[/*@>1401a7d*/i]/*@>13e17d6*/ = (/*@>143763b*/Model_Target_B./*@>14435ae*/MathFunction/*@>1434517*/[/*@>1434514*/i]/*@>13e17df*/ + /*@>1438567*/Model_Target_DW./*@>14436dd*/Delay_DSTATE_l/*@>143451d*/[/*@>143451a*/i])/*@>140334e*/ * /*@>1419d99*/minXp_tmp/*@>13e17dd*/ + /*@>143856d*/Model_Target_DW./*@>14436e0*/Delay1_DSTATE_a/*@>1434523*/[/*@>1434520*/i]/*@>1403352*/ * %<SLibCG_DumpSSCode("/*@[143e8f3*/",(SLibCG_SE(SLibCG_BOCSC(305, 1, "", -1, "", 0))),"/*@]*/")>;
}
/* {E!d2692}End of Sum: '<S801>/Add1' */

/* {S!d2694}Delay: '<S797>/Delay' incorporates:
 *  Sum: '<S799>/Add1'
 */
/*@>10ddb93*/if (%<SLibCG_DumpSSCode("/*@[143e438*/",(SLibCG_SE(SLibCG_BOCSC(306, 1, "", -1, "", 0))),"/*@]*/")>/*@>10ddb2d*/ < /*@>140164b*/1.0F) {
    /*@>142e18a*/memcpy(&/*@>1437647*/Model_Target_B./*@>14435b1*/Multiply1_e/*@>14273db*/[/*@>14273ca*/0], &/*@>143764d*/Model_Target_B./*@>14435b4*/Lin2/*@>14273e3*/[/*@>14273d7*/0], /*@>14273d9*/129U/*@>14273e6*/ * /*@>14273e5*/sizeof(real32_T));
} else {
    /*@>13fb485*/if (%<SLibCG_DumpSSCode("/*@[143e534*/",(SLibCG_SE(SLibCG_BOCSC(306, 1, "", -1, "", 0))),"/*@]*/")>/*@>140320c*/ > /*@>1403a40*/2064.0F) {
        /*@>1401eca*/delayLen/*@>13fb488*/ = /*@>1441ea3*/2064;
    } else {
        /*@>1401646*/delayLen/*@>10ddb38*/ = /*@>14083a6*/(int32_T)/*@>1403207*/(uint32_T)/*@>142c60e*/fmodf(/*@>142c60c*/truncf(%<SLibCG_DumpSSCode("/*@[143e883*/",(SLibCG_BOCSC(306, 1, "", -1, "", 0)),"/*@]*/")>), /*@>140c672*/4.2949673E+9F);
    }
/*@>13efce4*/    for (/*@>1442042*/i = /*@>1442041*/0; /*@>144204c*/i < /*@>144204a*/129; /*@>1442048*/i/*@>144235d*/++) {
        /*@>10ddb86*/if (/*@>14083b7*/(uint32_T)/*@>140163d*/i/*@>1403224*/ < /*@>14083b9*/(uint32_T)/*@>140163b*/delayLen) {
            /*@>1437671*/Model_Target_B./*@>14435c0*/Multiply1_e/*@>13e9f38*/[/*@>1401aa1*/i]/*@>10ddb70*/ = /*@>1438573*/Model_Target_DW./*@>14436e3*/MedusaDRspumLPxxFast/*@>1434537*/[(/*@>1434531*/i/*@>143452f*/ - /*@>1434533*/delayLen)/*@>143452e*/ + /*@>1434534*/2064];
        } else {
            /*@>1437665*/Model_Target_B./*@>14435ba*/Multiply1_e/*@>13e9e4f*/[/*@>1401a8f*/i]/*@>10ddb84*/ = /*@>143766b*/Model_Target_B./*@>14435bd*/Lin2/*@>143452c*/[/*@>1434527*/i/*@>1434525*/ - /*@>1434529*/delayLen];
        }
    }
}
/* {E!d2694}End of Delay: '<S797>/Delay' */

/* {S!d2696}Delay: '<S797>/Delay1' incorporates:
 *  Sum: '<S801>/Add1'
 */
/*@>10ddbff*/if (%<SLibCG_DumpSSCode("/*@[143e454*/",(SLibCG_SE(SLibCG_BOCSC(306, 1, "", -1, "", 0))),"/*@]*/")>/*@>10ddb99*/ < /*@>1401637*/1.0F) {
    /*@>142e18c*/memcpy(&/*@>143765f*/Model_Target_B./*@>14435b7*/Multiply1_m/*@>142734c*/[/*@>142733b*/0], &/*@>1427353*/rtb_Add1_k3/*@>1427354*/[/*@>1427348*/0], /*@>142734a*/129U/*@>1427357*/ * /*@>1427356*/sizeof(real32_T));
} else {
    /*@>13fb48a*/if (%<SLibCG_DumpSSCode("/*@[143e550*/",(SLibCG_SE(SLibCG_BOCSC(306, 1, "", -1, "", 0))),"/*@]*/")>/*@>14031c4*/ > /*@>1403a56*/2064.0F) {
        /*@>1401ecc*/delayLen/*@>13fb48d*/ = /*@>1441ea6*/2064;
    } else {
        /*@>1401632*/delayLen/*@>10ddba4*/ = /*@>14083cf*/(int32_T)/*@>14031bf*/(uint32_T)/*@>142c614*/fmodf(/*@>142c612*/truncf(%<SLibCG_DumpSSCode("/*@[143e867*/",(SLibCG_BOCSC(306, 1, "", -1, "", 0)),"/*@]*/")>), /*@>140c681*/4.2949673E+9F);
    }
/*@>13efcca*/    for (/*@>1442031*/i = /*@>1442030*/0; /*@>144203b*/i < /*@>1442039*/129; /*@>1442037*/i/*@>144235c*/++) {
        /*@>10ddbf2*/if (/*@>14083dd*/(uint32_T)/*@>1401629*/i/*@>14031dc*/ < /*@>14083df*/(uint32_T)/*@>1401627*/delayLen) {
            /*@>1437683*/Model_Target_B./*@>14435c6*/Multiply1_m/*@>13ea045*/[/*@>1401ab5*/i]/*@>10ddbdc*/ = /*@>143857f*/Model_Target_DW./*@>14436e9*/MedusaDRspumLPxxSlow/*@>143454b*/[(/*@>1434545*/i/*@>1434543*/ - /*@>1434547*/delayLen)/*@>1434542*/ + /*@>1434548*/2064];
        } else {
            /*@>143767d*/Model_Target_B./*@>14435c3*/Multiply1_m/*@>13e9f90*/[/*@>1401aab*/i]/*@>10ddbf0*/ = /*@>143453e*/rtb_Add1_k3/*@>1434540*/[/*@>143453b*/i/*@>1434539*/ - /*@>143453d*/delayLen];
        }
    }
}
/* {E!d2696}End of Delay: '<S797>/Delay1' */

/* {S!d2698}Buffer: '<S650>/Buffer' */
/*@>1401625*/delayLen/*@>10ddc01*/ = /*@>1441ea9*/0;
/*@>1401619*/currentOffset/*@>10ddc37*/ = /*@>1438579*/Model_Target_DW./*@>14436e6*/Buffer_outBufPtrIdx/*@>10ddc36*/ + /*@>1401375*/128;
/*@>13efc99*/for (/*@>1442020*/row = /*@>144201f*/0; /*@>144202a*/row < /*@>1442028*/2; /*@>1442026*/row/*@>144233c*/++) {
    /*@>140161f*/memIdx/*@>10ddc1d*/ = (/*@>1401622*/row/*@>140335b*/ << /*@>140335a*/8)/*@>10ddc1c*/ + /*@>143858b*/Model_Target_DW./*@>14436ef*/Buffer_outBufPtrIdx;
    /*@>142e18e*/memcpy(&/*@>1437689*/Model_Target_B./*@>14435c9*/Buffer/*@>14272ef*/[/*@>14272d9*/delayLen], &/*@>1438591*/Model_Target_DW./*@>14436f2*/Buffer_CircBuf/*@>14272fa*/[/*@>14272ea*/memIdx], /*@>14272fc*/sizeof(real32_T)/*@>143f2ff*/ << /*@>143f2fe*/7U);
    /*@>140161b*/delayLen/*@>144233d*/ += /*@>1401376*/128;
}
/*@>10ddc3a*/if (/*@>1438585*/Model_Target_DW./*@>14436ec*/Buffer_outBufPtrIdx/*@>1419e94*/ + /*@>1419e97*/128/*@>10ddc39*/ == /*@>1401616*/256) {
    /*@>1401614*/currentOffset/*@>10ddc3c*/ = /*@>1441eac*/0;
}
/*@>1438597*/Model_Target_DW./*@>14436f5*/Buffer_outBufPtrIdx/*@>10ddc3e*/ = /*@>1401611*/currentOffset;
/* {E!d2698}End of Buffer: '<S650>/Buffer' */

/* {S!d2700}Sum: '<S856>/Sum high  frequency energy' */
/*@>14016c1*/rtb_Sumhighfrequencyenergy/*@>10dd535*/ = /*@>14016c0*/-0.0F;
/*@>13efc7b*/for (/*@>144200f*/row = /*@>144200e*/0; /*@>1442019*/row < /*@>1442017*/128; /*@>1442015*/row/*@>144233e*/++) {
    /* {S!d2702}S-Function (sdspmultiportsel): '<S857>/Stereo Split' incorporates:
 *  Buffer: '<S650>/Buffer'
 */
    minXp/*@>10ddca1*/ = /*@>1437695*/Model_Target_B./*@>14435cc*/Buffer/*@>1434551*/[/*@>143454e*/row];
    slewedStepSize/*@>10ddcc2*/ = /*@>143769b*/Model_Target_B./*@>14435cf*/Buffer/*@>1434559*/[/*@>1434555*/row/*@>1434553*/ + /*@>1434556*/128];
    /* {S!d2704}Sum: '<S857>/Add' incorporates:
 *  Math: '<S857>/Magnitude Squared'
 *  Math: '<S857>/Magnitude Squared1'
 *
 * About '<S857>/Magnitude Squared':
 *  Operator: magnitude^2
 *
 * About '<S857>/Magnitude Squared1':
 *  Operator: magnitude^2
 */
    /*@>14376a1*/Model_Target_B./*@>14435d2*/Add/*@>13ea147*/[/*@>1401ad5*/row]/*@>13e183e*/ = minXp/*@>140c691*/ * minXp/*@>13e1845*/ + slewedStepSize/*@>140c696*/ * slewedStepSize;
    /* {S!d2706}Sum: '<S856>/Sum high  frequency energy' incorporates:
 *  Sum: '<S857>/Add'
 */
    /*@>14016bc*/rtb_Sumhighfrequencyenergy/*@>144233f*/ += /*@>14376a7*/Model_Target_B./*@>14435d5*/Add/*@>143455f*/[/*@>143455c*/row];
}
/* {S!d2708}Sum: '<S862>/Add1' incorporates:
 *  Constant: '<S862>/Constant'
 *  Constant: '<S862>/Constant1'
 *  Delay: '<S862>/Delay'
 *  Delay: '<S862>/Delay1'
 *  Product: '<S862>/Divide'
 *  Product: '<S862>/Multiply'
 *  Product: '<S862>/Multiply1'
 *  Sum: '<S862>/Add'
 *  Sum: '<S862>/Minus'
 */
/*@>14013c8*/minXp/*@>1104c3e*/ = (/*@>1401d14*/1.0F/*@>13d1c9c*/ - %<SLibCG_DumpSSCode("/*@[143e5c0*/",(SLibCG_SE(SLibCG_BOCSC(312, 1, "", -1, "", 0))),"/*@]*/")>)/*@>1403191*/ * /*@>1401ebf*/0.5F/*@>140318d*/ * (/*@>140175c*/rtb_Sumhighfrequencyenergy/*@>13d1c92*/ + /*@>143859d*/Model_Target_DW./*@>14436f8*/Delay_DSTATE_i3)/*@>1104c3b*/ + /*@>14385a3*/Model_Target_DW./*@>14436fb*/Delay1_DSTATE_p/*@>1403195*/ * %<SLibCG_DumpSSCode("/*@[143e5a4*/",(SLibCG_SE(SLibCG_BOCSC(312, 1, "", -1, "", 0))),"/*@]*/")>;
%if !WHITE_SPACE(tlcOutputsFcnOfS300B88)
/* {S!d2710}S-Function (TOP_MEX): '<S856>/TOP6' */
%<SLibCG_DumpSSCode("/*@[143e3d4*/",tlcOutputsFcnOfS300B88,"/*@]*/")>\
%endif
/* {S!d2712}MATLAB Function: '<S856>/Estimate Decay' incorporates:
 *  BusCreator generated from: '<S856>/Estimate Decay'
 *  Constant: '<S866>/Constant'
 *  Gain: '<S856>/Gain'
 *  Gain: '<S866>/Gain'
 *  Math: '<S866>/log10'
 *  Sum: '<S866>/Sum1'
 *
 * About '<S866>/log10':
 *  Operator: log10
 */
/*  Estimate and output decay on linear scale  */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 2/SPUM Decay Estimate/Decay Estimate/Estimate Decay': '<S859>:1' */
/*  Buffer holding frame energies in dB */
/*  Flag to indicate onset strike is on */
/*  Flag to indicate onset strike is off */
/*  No activity counter, 'gcounter' in AR model */
/*  Previous decay slope in dB, 'decay_slope_in_db_per_frame' in bdsp */
/*  Previous smoothed decay slope in dB */
/*  Frame energy in dB to allow current onset thresholding, 'gate' in AR model */
/*  Initialize parameters */
/* '<S859>:1:14' if isempty(onsetOn) */
/* '<S859>:1:15' if isempty(onsetOff) */
/* '<S859>:1:16' if isempty(onsetCounter) */
/* '<S859>:1:17' if isempty(noOnsetOnOffCounter) */
/* '<S859>:1:18' if isempty(prevDecay) */
/* '<S859>:1:19' if isempty(smoothedDecay) */
/* '<S859>:1:20' if isempty(thresholdForFrameEnergy) */
/*  Update frame energies buffer */
/*  latest energy is always the last frame */
/*  TODO: implement with circular buffer */
/* '<S859>:1:27' frameEnergiesdB(1:end-1) = frameEnergiesdB(2:end); */
/*@>13ea22e*/for (/*@>1441ffe*/delayLen = /*@>1441ffd*/0; /*@>1442008*/delayLen < /*@>1442006*/7; /*@>1442004*/delayLen/*@>1442340*/++) {
    /*@>14385a9*/Model_Target_DW./*@>14436fe*/frameEnergiesdB/*@>13ea263*/[/*@>1401aef*/delayLen]/*@>13ea26a*/ = /*@>14385af*/Model_Target_DW./*@>1443701*/frameEnergiesdB/*@>1434567*/[/*@>1434563*/delayLen/*@>1434561*/ + /*@>1434564*/1];
}
/* '<S859>:1:28' frameEnergiesdB(end) = frameEnergydB; */
/*@>14385b5*/Model_Target_DW./*@>1443704*/frameEnergiesdB/*@>10de33e*/[/*@>14014ff*/7]/*@>10de33f*/ = /*@>142c61c*/qhmath_log10_f(/*@>1401d16*/100.0F/*@>1403189*/ * /*@>1401769*/minXp/*@>13d226f*/ + /*@>1401d17*/2.22044605E-16F)/*@>1403185*/ * /*@>1401d15*/10.0F;
/*  persistent writeIndex; */
/*  frameEnergiesdB(writeIndex) = frameEnergydB; */
/*  writeIndex = mod(writeIndex+1,lengthFrameEnergiesBuffer); */
/*  derivative = least_square_fit(frameEnergiesdB, writeIndex); */
/*  Estimate derivative (slope) using first order least square fitting */
/* '<S859>:1:36' derivative = least_square_fit(frameEnergiesdB,... */
/* '<S859>:1:37'                 decayConst.numPointsForSlopeComputation,... */
/* '<S859>:1:38'                 decayConst.lengthFrameEnergiesBuffer); */
/*  Estimate derivative or slope via first order least square fitting.  */
/*  Implements following equation to compute k. */
/*   */
/*  x = [X_0, X_1, X_2, ..., X_(N-1)] = frame indicies */
/*  y = [Y_0, Y_1, Y_2, ..., X_(N-1)] = frame energies */
/*   */
/*       sum(Xi * Yi) - (1/N) * sum(Xi) * sum(Yi) */
/*  k = ------------------------------------------- , */
/*       sum(Xi * Xi) - (1/N) * sum(Xi) * sum(Xi) */
/*     where i = 0, 1, 2, ... , N-1. */
/*  */
/*  M = lengthFrameEnergiesBuffer = 8 ; */
/*  N = numPointsForSlopeComputation = 5; */
/* '<S859>:1:130' y = in(M-N+1:M); */
/* '<S859>:1:131' x = (0:size(y,1)-1)'; */
/* '<S859>:1:132' d = (sum(x.*y) - sum(x)*sum(y)/N) / (sum(x.^2) - (sum(x))^2/N + single(eps)); */
/*@>13ea2f5*/for (/*@>1441fed*/delayLen = /*@>1441fec*/0; /*@>1441ff7*/delayLen < /*@>1441ff5*/5; /*@>1441ff3*/delayLen/*@>1442341*/++) {
    /*@>1401aff*/y/*@>13ea2e7*/[/*@>1401afd*/delayLen]/*@>13ea2e8*/ = /*@>14385d9*/Model_Target_DW./*@>1443716*/frameEnergiesdB/*@>14345a1*/[/*@>143459d*/delayLen/*@>143459b*/ + /*@>143459e*/3]/*@>140335e*/ * /*@>140844a*/(real32_T)/*@>1401af6*/delayLen;
}
/*@>1401491*/rtb_Delay_og/*@>10de45a*/ = /*@>142c620*/qhmath_div_f(((((/*@>143456a*/y/*@>143456c*/[/*@>1434569*/0]/*@>140cf1b*/ + /*@>143456f*/y/*@>1434571*/[/*@>143456e*/1])/*@>140caf7*/ + /*@>1434574*/y/*@>1434576*/[/*@>1434573*/2])/*@>140caf6*/ + /*@>1434579*/y/*@>143457b*/[/*@>1434578*/3])/*@>140c6e0*/ + /*@>143457e*/y/*@>1434580*/[/*@>143457d*/4])/*@>10de4a9*/ - /*@>142c61e*/qhmath_div_f(((((/*@>14385bb*/Model_Target_DW./*@>1443707*/frameEnergiesdB/*@>1434585*/[/*@>1434582*/3]/*@>140cf24*/ + /*@>14385c1*/Model_Target_DW./*@>144370a*/frameEnergiesdB/*@>143458a*/[/*@>1434587*/4])/*@>140cb03*/ + /*@>14385c7*/Model_Target_DW./*@>144370d*/frameEnergiesdB/*@>143458f*/[/*@>143458c*/5])/*@>140cb02*/ + /*@>14385cd*/Model_Target_DW./*@>1443710*/frameEnergiesdB/*@>1434594*/[/*@>1434591*/6])/*@>140c6e7*/ + /*@>14385d3*/Model_Target_DW./*@>1443713*/frameEnergiesdB/*@>1434599*/[/*@>1434596*/7])/*@>1403181*/ * /*@>1401485*/10.0F, /*@>1401484*/5.0F), /*@>1401488*/10.0F);
/*  x = 0:size(y,1); */
/*  derivative = (sum(x.*y) - sum(x)*sum(y)/N) / (sum(x.^2) - (sum(x))^2/N + epsf); */
/*  Increment no onset on/off counter by 1 */
/* '<S859>:1:43' noOnsetOnOffCounter = noOnsetOnOffCounter + 1; */
/*@>14385df*/Model_Target_DW./*@>1443719*/noOnsetOnOffCounter/*@>1442342*/++;
/*  Detect onset on */
/*  if level jump (energy variation) > onset threshold AND  */
/*  input level (current frame energy) > input threshold */
/* '<S859>:1:48' latestEnergy = frameEnergiesdB(end); */
/* '<S859>:1:49' oldestEnergy = frameEnergiesdB(1); */
/* '<S859>:1:50' onsetVal =  latestEnergy - oldestEnergy; */
/* '<S859>:1:51' if (onsetVal > decayEstTunable.onsetThreshold) && (latestEnergy > thresholdForFrameEnergy) */
/*@>10de3a1*/if ((/*@>14385eb*/Model_Target_DW./*@>144371c*/frameEnergiesdB/*@>14345a6*/[/*@>14345a3*/7]/*@>10de4ad*/ - /*@>14385f1*/Model_Target_DW./*@>144371f*/frameEnergiesdB/*@>14345ab*/[/*@>14345a8*/0]/*@>10de373*/ > %<SLibCG_DumpSSCode("/*@[143e470*/",(SLibCG_SE(SLibCG_BOCSC(319, 1, "", -1, "", 0))),"/*@]*/")>)/*@>143f31a*/ && (/*@>14385f7*/Model_Target_DW./*@>1443722*/frameEnergiesdB/*@>14345b0*/[/*@>14345ad*/7]/*@>10de374*/ > /*@>14385fd*/Model_Target_DW./*@>1443725*/thresholdForFrameEnergy)) {
    /* '<S859>:1:52' onsetOn = 1; */
    /*@>1438603*/Model_Target_DW./*@>1443728*/onsetOn/*@>10de344*/ = /*@>14014f5*/1.0;
    /* '<S859>:1:53' thresholdForFrameEnergy = latestEnergy - 3; */
    /*@>143860f*/Model_Target_DW./*@>144372e*/thresholdForFrameEnergy/*@>10de345*/ = /*@>1438615*/Model_Target_DW./*@>1443731*/frameEnergiesdB/*@>14345b5*/[/*@>14345b2*/7]/*@>10de375*/ - /*@>14014f1*/3.0F;
    /*  threshold = current - 3dB */
    /* '<S859>:1:54' onsetCounter = 0; */
    /*@>143862d*/Model_Target_DW./*@>144373a*/onsetCounter/*@>10de346*/ = /*@>14014e7*/0.0;
}
/*  Validate onset */
/* '<S859>:1:58' if onsetOn */
/*@>10de3a8*/if (/*@>1438609*/Model_Target_DW./*@>144372b*/onsetOn/*@>10de376*/ != /*@>14014f2*/0.0) {
    /* '<S859>:1:59' onsetCounter = onsetCounter + 1; */
    /*@>143861b*/Model_Target_DW./*@>1443734*/onsetCounter/*@>1442343*/++;
    /* '<S859>:1:60' if onsetCounter >  decayConst.onsetCounterLimit */
    /*@>10de3aa*/if (/*@>1438627*/Model_Target_DW./*@>1443737*/onsetCounter/*@>10de378*/ > /*@>1401483*/700.0) {
        /*  timeout and reset */
        /* '<S859>:1:61' onsetOn = 0; */
        /*@>143863f*/Model_Target_DW./*@>1443743*/onsetOn/*@>10de34b*/ = /*@>14014e0*/0.0;
        /* '<S859>:1:62' onsetCounter = 0; */
        /*@>1438651*/Model_Target_DW./*@>144374c*/onsetCounter/*@>10de34c*/ = /*@>14014d7*/0.0;
    }
}
/*  Detect onset off */
/*  if energy variation < threshold AND input level < input threshold */
/*  AND onsetOn detected AND onsetOff not yet detected */
/* '<S859>:1:69' if (derivative < decayConst.decaySlowest) && (onsetOn == 1) && (onsetOff == 0)... */
/* '<S859>:1:70'         && (latestEnergy < thresholdForFrameEnergy) */
/*@>10de3b1*/if ((/*@>14014e3*/rtb_Delay_og/*@>10de379*/ < /*@>1401482*/-0.0693333298F)/*@>10de511*/ && (/*@>1438633*/Model_Target_DW./*@>144373d*/onsetOn/*@>10de37a*/ == /*@>14014dd*/1.0)/*@>10de512*/ && (/*@>1438639*/Model_Target_DW./*@>1443740*/onsetOff/*@>10de37b*/ == /*@>14014da*/0.0)/*@>143f31b*/ && (/*@>1438645*/Model_Target_DW./*@>1443746*/frameEnergiesdB/*@>14345ba*/[/*@>14345b7*/7]/*@>10de37c*/ < /*@>143864b*/Model_Target_DW./*@>1443749*/thresholdForFrameEnergy)) {
    /* '<S859>:1:71' onsetOff = 1; */
    /*@>1438657*/Model_Target_DW./*@>144374f*/onsetOff/*@>10de351*/ = /*@>14014d2*/1.0;
    /* '<S859>:1:72' thresholdForFrameEnergy = decayConst.minGateFrameEnergydB; */
    /*@>1438669*/Model_Target_DW./*@>1443758*/thresholdForFrameEnergy/*@>10de352*/ = /*@>1401481*/-25.0F;
}
/*  Update slope */
/* '<S859>:1:76' if (onsetOn == 1) && (onsetOff == 1) */
/*@>10de3b6*/if ((/*@>143865d*/Model_Target_DW./*@>1443752*/onsetOn/*@>10de37d*/ == /*@>14014cf*/1.0)/*@>10de513*/ && (/*@>1438663*/Model_Target_DW./*@>1443755*/onsetOff/*@>10de37e*/ == /*@>14014ca*/1.0)) {
    /* '<S859>:1:77' if (oldestEnergy > latestEnergy) && (oldestEnergy > decayEstTunable.noiseFloor) */
    /*@>10de3b7*/if (/*@>143866f*/Model_Target_DW./*@>144375b*/frameEnergiesdB/*@>14345bf*/[/*@>14345bc*/0]/*@>10de37f*/ > /*@>1438675*/Model_Target_DW./*@>144375e*/frameEnergiesdB/*@>14345c4*/[/*@>14345c1*/7]) {
        /*@>10de3b8*/if (/*@>1438681*/Model_Target_DW./*@>1443764*/frameEnergiesdB/*@>14345c9*/[/*@>14345c6*/0]/*@>10de380*/ > %<SLibCG_DumpSSCode("/*@[143e48c*/",(SLibCG_SE(SLibCG_BOCSC(318, 1, "", -1, "", 0))),"/*@]*/")>) {
            /* '<S859>:1:78' slope = derivative; */
            /*  take the slope as decay estimate */
            /* '<S859>:1:79' noOnsetOnOffCounter = 0; */
            /*@>1438693*/Model_Target_DW./*@>144376d*/noOnsetOnOffCounter/*@>10de358*/ = /*@>14014bd*/0.0;
            /*  reset no activity counter */
            /* '<S859>:1:80' onsetCounter = 0; */
            /*@>14386ab*/Model_Target_DW./*@>1443779*/onsetCounter/*@>10de359*/ = /*@>14014b1*/0.0;
            /*  reset counter   */
        } else {
            /* '<S859>:1:81' else */
            /* '<S859>:1:82' slope = prevDecay; */
            /*@>140147c*/rtb_Delay_og/*@>10de51d*/ = /*@>143868d*/Model_Target_DW./*@>144376a*/prevDecay;
        }
    } else {
        /* '<S859>:1:81' else */
        /* '<S859>:1:82' slope = prevDecay; */
        /*@>14014c2*/rtb_Delay_og/*@>10de35b*/ = /*@>1438687*/Model_Target_DW./*@>1443767*/prevDecay;
    }
    /* '<S859>:1:84' prevDecay = slope; */
    /*@>143869f*/Model_Target_DW./*@>1443773*/prevDecay/*@>10de35d*/ = /*@>14014bb*/rtb_Delay_og;
    /* '<S859>:1:85' onsetOn = 0; */
    /*@>14386a5*/Model_Target_DW./*@>1443776*/onsetOn/*@>10de35e*/ = /*@>14014b4*/0.0;
    /* '<S859>:1:86' onsetOff = 0; */
    /*@>14386b7*/Model_Target_DW./*@>144377f*/onsetOff/*@>10de35f*/ = /*@>14014ab*/0.0;
} else {
    /* '<S859>:1:87' else */
    /* '<S859>:1:88' slope = prevDecay; */
    /*@>14014c6*/rtb_Delay_og/*@>10de361*/ = /*@>143867b*/Model_Target_DW./*@>1443761*/prevDecay;
}
/*  Validate slope */
/*  if no onset detected for a predefined period, return to the default decay value */
/* '<S859>:1:93' if noOnsetOnOffCounter > decayConst.decayDefaultCounterLimit */
/*@>10de3c7*/if (/*@>1438699*/Model_Target_DW./*@>1443770*/noOnsetOnOffCounter/*@>10de381*/ > /*@>1401480*/10385.0) {
    /* '<S859>:1:94' slope = decayConst.decayDefaultSlope; */
    /*@>14014b7*/rtb_Delay_og/*@>10de363*/ = /*@>140147f*/-0.173333332F;
    /* '<S859>:1:95' noOnsetOnOffCounter = 0; */
    /*@>14386b1*/Model_Target_DW./*@>144377c*/noOnsetOnOffCounter/*@>10de364*/ = /*@>14014ae*/0.0;
}
/*  Smooth slope  */
/*  using first order averaging with different smoothing params (fast or  */
/*  slow) depending on estimated slope */
/* '<S859>:1:101' if slope >= smoothedDecay */
/*@>10de3ce*/if (/*@>14014a9*/rtb_Delay_og/*@>10de382*/ >= /*@>14386bd*/Model_Target_DW./*@>1443782*/smoothedDecay) {
    /* '<S859>:1:102' alpha = decayEstTunable.slowAttack; */
    /*@>14014a5*/maxXp/*@>10de368*/ = %<SLibCG_DumpSSCode("/*@[143e72f*/",(SLibCG_SE(SLibCG_BOCSC(315, 1, "", -1, "", 0))),"/*@]*/")>;
} else {
    /* '<S859>:1:103' else */
    /* '<S859>:1:104' alpha = decayEstTunable.fastAttack; */
    /*@>14014a3*/maxXp/*@>10de36a*/ = %<SLibCG_DumpSSCode("/*@[143e713*/",(SLibCG_SE(SLibCG_BOCSC(314, 1, "", -1, "", 0))),"/*@]*/")>;
}
/* '<S859>:1:106' smoothedDecay = slope*alpha + (1-alpha)*smoothedDecay; */
/*@>14386c3*/Model_Target_DW./*@>1443785*/smoothedDecay/*@>10de36f*/ = (/*@>140149c*/1.0F/*@>10de384*/ - /*@>140149d*/maxXp)/*@>140316a*/ * /*@>14386c9*/Model_Target_DW./*@>1443788*/smoothedDecay/*@>10de386*/ + /*@>14014a1*/rtb_Delay_og/*@>1403166*/ * /*@>140149f*/maxXp;
/* '<S859>:1:107' noOnsetOnOffCounter = noOnsetOnOffCounter + 1; */
/*@>14386cf*/Model_Target_DW./*@>144378b*/noOnsetOnOffCounter/*@>1442344*/++;
/*  Clip the estimated smoothed decay slope (in db/frame) and convert it to  */
/*  linear decay for smoothing next. */
/* '<S859>:1:111' decay = undb10(max(min(smoothedDecay, decayConst.decaySlowest), ... */
/* '<S859>:1:112'     decayConst.decayFastest) * decayEstTunable.directPathFramesFs); */
/* '<S859>:1:136' y = exp(x * log(10)/10); */
/*@>140148b*/rtb_Delay_og/*@>10de499*/ = /*@>142c628*/qhmath_exp_f(/*@>142c626*/qhmath_div_f(/*@>142c624*/fmaxf(/*@>142c622*/fminf(/*@>14386db*/Model_Target_DW./*@>144378e*/smoothedDecay, /*@>1401736*/-0.0693333298F), /*@>1401737*/-0.346666664F)/*@>1403162*/ * %<SLibCG_DumpSSCode("/*@[143e6f7*/",(SLibCG_SE(SLibCG_BOCSC(327, 1, "", -1, "", 0))),"/*@]*/")>/*@>140315e*/ * /*@>1401738*/2.30258512F, /*@>1401739*/10.0F));
/* {E!d2712}End of MATLAB Function: '<S856>/Estimate Decay' */

/* {S!d2714}MATLAB Function: '<S856>/Smooth Decay' */
/*  This is basically the same as Forward-backward Smooth block. */
/*  However as the initial conditions depend on a TOP and build-time config, */
/*  a Matlab implementation was done for simplification. */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 2/SPUM Decay Estimate/Decay Estimate/Smooth Decay': '<S861>:1' */
/* '<S861>:1:8' if isempty(lastInput) */
/*@>10de533*/if (!/*@<10de52c*//*@>14386e1*/Model_Target_DW./*@>1443791*/lastInput_not_empty) {
    /* '<S861>:1:8' ; */
    /* '<S861>:1:8' lastInput = single(undb10(decayConst.decayDefaultSlope * directPathFrames)); */
    /* '<S861>:1:21' y = exp(x * log(10)/10); */
    /*@>14386ed*/Model_Target_DW./*@>1443797*/lastInput/*@>10de554*/ = /*@>142c62a*/qhmath_div_f(/*@>140144a*/-0.173333332F/*@>1403151*/ * %<SLibCG_DumpSSCode("/*@[143e6a3*/",(SLibCG_SE(SLibCG_BOCSC(327, 1, "", -1, "", 0))),"/*@]*/")>/*@>140314d*/ * /*@>1401449*/2.30258512F, /*@>1401448*/10.0F);
    /*@>14386f3*/Model_Target_DW./*@>144379a*/lastInput/*@>10de55b*/ = /*@>142c62c*/qhmath_exp_f(/*@>14386f9*/Model_Target_DW./*@>144379d*/lastInput);
    /*@>14386ff*/Model_Target_DW./*@>14437a0*/lastInput_not_empty/*@>10de524*/ = /*@>1401473*/true;
}
/* '<S861>:1:9' if isempty(lastOutput) */
/*@>10de536*/if (!/*@<10de52e*//*@>14386e7*/Model_Target_DW./*@>1443794*/lastOutput_not_empty) {
    /* '<S861>:1:9' ; */
    /* '<S861>:1:9' lastOutput = single(undb10(decayConst.decayDefaultSlope * directPathFrames)); */
    /* '<S861>:1:21' y = exp(x * log(10)/10); */
    /*@>1438705*/Model_Target_DW./*@>14437a3*/lastOutput/*@>10de558*/ = /*@>142c62e*/qhmath_div_f(/*@>1401447*/-0.173333332F/*@>1403140*/ * %<SLibCG_DumpSSCode("/*@[143e687*/",(SLibCG_SE(SLibCG_BOCSC(327, 1, "", -1, "", 0))),"/*@]*/")>/*@>140313c*/ * /*@>1401446*/2.30258512F, /*@>1401445*/10.0F);
    /*@>1438717*/Model_Target_DW./*@>14437ac*/lastOutput/*@>10de560*/ = /*@>142c630*/qhmath_exp_f(/*@>143871d*/Model_Target_DW./*@>14437af*/lastOutput);
    /*@>1438723*/Model_Target_DW./*@>14437b2*/lastOutput_not_empty/*@>10de523*/ = /*@>1401470*/true;
}
/* '<S861>:1:11' pole = alpha; */
/* '<S861>:1:12' gain = (1 - alpha)/2; */
/* '<S861>:1:14' Output = (Input + lastInput) * gain + lastOutput * pole; */
/*@>140146a*/maxXp/*@>10de527*/ = (/*@>1401456*/rtb_Delay_og/*@>10de52f*/ + /*@>143870b*/Model_Target_DW./*@>14437a6*/lastInput)/*@>1403122*/ * /*@>142c632*/qhmath_div_f(/*@>140144d*/1.0F/*@>10de575*/ - %<SLibCG_DumpSSCode("/*@[143e6db*/",(SLibCG_SE(SLibCG_BOCSC(313, 1, "", -1, "", 0))),"/*@]*/")>, /*@>1401444*/2.0F)/*@>10de532*/ + /*@>1438711*/Model_Target_DW./*@>14437a9*/lastOutput/*@>140312f*/ * %<SLibCG_DumpSSCode("/*@[143e6bf*/",(SLibCG_SE(SLibCG_BOCSC(313, 1, "", -1, "", 0))),"/*@]*/")>;
/* '<S861>:1:15' lastInput = Input; */
/*@>1438729*/Model_Target_DW./*@>14437b5*/lastInput/*@>10de528*/ = /*@>1401452*/rtb_Delay_og;
/* '<S861>:1:16' lastOutput = Output; */
/*@>143872f*/Model_Target_DW./*@>14437b8*/lastOutput/*@>10de52a*/ = /*@>1401466*/maxXp;
/* {E!d2714}End of MATLAB Function: '<S856>/Smooth Decay' */

/* {S!d2716}MATLAB Function: '<S856>/Slew Decay' incorporates:
 *  BusCreator generated from: '<S856>/Slew Decay'
 */
/*  Control how abruptly the decay can change from frame to frame. */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 2/SPUM Decay Estimate/Decay Estimate/Slew Decay': '<S860>:1' */
/* '<S860>:1:3' epsf = single(eps); */
/*  difference of current and past decay in dB */
/* '<S860>:1:8' if isempty(prevDelta) */
/* '<S860>:1:9' if isempty(prevStepSize) */
/* '<S860>:1:10' if isempty(prevSmoothedDecaydB) */
/*@>10de5a7*/if (!/*@<10de59e*//*@>1438735*/Model_Target_DW./*@>14437bb*/prevSmoothedDecaydB_not_empty) {
    /*  Initial value is decay default in dB */
    /* '<S860>:1:12' prevSmoothedDecaydB = single(decayConst.decayDefaultSlope * directPathFrames); */
    /*@>143873b*/Model_Target_DW./*@>14437be*/prevSmoothedDecaydB/*@>10de58a*/ = /*@>1401404*/-0.173333332F/*@>140311e*/ * %<SLibCG_DumpSSCode("/*@[143e66b*/",(SLibCG_SE(SLibCG_BOCSC(327, 1, "", -1, "", 0))),"/*@]*/")>;
    /*@>1438741*/Model_Target_DW./*@>14437c1*/prevSmoothedDecaydB_not_empty/*@>10de589*/ = /*@>140143b*/true;
}
/* '<S860>:1:15' smoothedDecaydB = db10(smoothedDecayLinear + epsf); */
/* '<S860>:1:48' y = 10*log10(x); */
/* '<S860>:1:16' delta = smoothedDecaydB - prevSmoothedDecaydB; */
/*@>1401437*/rtb_Delay_og/*@>10de58c*/ = /*@>142c634*/qhmath_log10_f(/*@>1401405*/maxXp/*@>10de614*/ + /*@>1401403*/2.22044605E-16F)/*@>140311a*/ * /*@>1401402*/10.0F/*@>10de5a0*/ - /*@>1438747*/Model_Target_DW./*@>14437c4*/prevSmoothedDecaydB;
/* '<S860>:1:17' if delta > 0 */
/*@>10de5ad*/if (/*@>1401435*/rtb_Delay_og/*@>10de5a1*/ > /*@>1401434*/0.0F) {
    /*  Move up if difference is positive => increasing */
    /* '<S860>:1:19' stepSize = min(decaySlewTunable.slewIncrement, delta); */
    /*@>1401415*/maxXp/*@>10de5eb*/ = /*@>142c638*/fminf(%<SLibCG_DumpSSCode("/*@[143e64f*/",(SLibCG_BOCSC(316, 1, "", -1, "", 0)),"/*@]*/")>, /*@>140140d*/rtb_Delay_og);
} else {
    /* '<S860>:1:20' else */
    /*  Move down if difference is negative => decreasing */
    /* '<S860>:1:22' stepSize = max(decaySlewTunable.slewDecrement, delta); */
    /*@>1401413*/maxXp/*@>10de5ee*/ = /*@>142c636*/fmaxf(%<SLibCG_DumpSSCode("/*@[143e633*/",(SLibCG_BOCSC(317, 1, "", -1, "", 0)),"/*@]*/")>, /*@>140140f*/rtb_Delay_og);
}
/*  If equal sign then still moving in previous direction => keep moving, */
/*  else reach target and no slewing required */
/* '<S860>:1:27' if prevDelta * delta > 0 */
/*@>10de5b3*/if (/*@>143874d*/Model_Target_DW./*@>14437c7*/prevDelta/*@>1403116*/ * /*@>1401430*/rtb_Delay_og/*@>10de5a3*/ > /*@>140142f*/0.0F) {
    /* '<S860>:1:28' slewedStepSize = prevStepSize; */
    /*@>140142b*/slewedStepSize/*@>10de591*/ = /*@>1438753*/Model_Target_DW./*@>14437ca*/prevStepSize;
} else {
    /* '<S860>:1:29' else */
    /* '<S860>:1:30' slewedStepSize = single(0); */
    /*@>1401429*/slewedStepSize/*@>10de592*/ = /*@>1401401*/0.0F;
}
/*  If the difference is within upper bound and slewed stepsize */
/*  still respects instanteneous stepsize, we can trust slewed stepsize. */
/* '<S860>:1:35' if (abs(delta) <= decaySlewTunable.slewThreshold) && (abs(slewedStepSize) < abs(stepSize)) */
/*@>10de5b7*/if ((/*@>142c63a*/qhmath_abs_f(/*@>140140b*/rtb_Delay_og)/*@>10de5a4*/ <= %<SLibCG_DumpSSCode("/*@[143e4a8*/",(SLibCG_SE(SLibCG_BOCSC(320, 1, "", -1, "", 0))),"/*@]*/")>)/*@>143f31c*/ && (/*@>142c63c*/qhmath_abs_f(/*@>1401409*/slewedStepSize)/*@>10de5a5*/ < /*@>142c63e*/qhmath_abs_f(/*@>1401407*/maxXp))) {
    /* '<S860>:1:36' stepSize = slewedStepSize; */
    /*@>1401425*/maxXp/*@>10de595*/ = /*@>1401427*/slewedStepSize;
}
/*  Update states and output */
/* '<S860>:1:40' prevDelta = delta; */
/*@>1438759*/Model_Target_DW./*@>14437cd*/prevDelta/*@>10de597*/ = /*@>1401423*/rtb_Delay_og;
/* '<S860>:1:41' prevStepSize = stepSize; */
/*@>143875f*/Model_Target_DW./*@>14437d0*/prevStepSize/*@>10de599*/ = /*@>140141f*/maxXp;
/* '<S860>:1:42' prevSmoothedDecaydB = prevSmoothedDecaydB + stepSize; */
/*@>1438765*/Model_Target_DW./*@>14437d3*/prevSmoothedDecaydB/*@>1442345*/ += /*@>1401419*/maxXp;
/* {S!d2718}Product: '<S650>/Multiply' incorporates:
 *  DataTypeConversion: '<S650>/Cast To Single'
 *  MATLAB Function: '<S856>/Slew Decay'
 */
/* '<S860>:1:43' slewedDecayLinear = undb10(prevSmoothedDecaydB); */
/* '<S860>:1:52' y = exp(x * log(10)/10); */
/*@>14376ad*/Model_Target_B./*@>14435d8*/Multiply/*@>10dd5bc*/ = /*@>142c642*/qhmath_exp_f(/*@>142c640*/qhmath_div_f(/*@>1438771*/Model_Target_DW./*@>14437d6*/prevSmoothedDecaydB/*@>1403112*/ * /*@>1401767*/2.30258512F, /*@>1401768*/10.0F))/*@>1403105*/ * /*@>13d16b0*/(real32_T)/*@>14376b3*/Model_Target_B./*@>14435db*/Merge;
/* {S!d2720}Product: '<S806>/Divide' incorporates:
 *  Constant: '<S806>/Constant'
 *  Constant: '<S806>/Constant1'
 *  Product: '<S807>/Divide'
 *  Product: '<S817>/Divide'
 *  Product: '<S818>/Divide'
 *  Sum: '<S806>/Minus'
 */
/*@>1418cb6*/maxXp/*@>1418cb8*/ = (/*@>1401d1b*/1.0F/*@>13d16fd*/ - %<SLibCG_DumpSSCode("/*@[143e9ed*/",(SLibCG_SE(SLibCG_BOCSC(307, 1, "", -1, "", 0))),"/*@]*/")>)/*@>1403101*/ * /*@>1401ec0*/0.5F;
/* {S!d2722}Sum: '<S811>/Matrix Sum' */
/*@>14016a6*/rtb_Delay_og/*@>10dd665*/ = /*@>14016a5*/-0.0F;
/*@>13e18ba*/for (/*@>1441fdc*/i = /*@>1441fdb*/0; /*@>1441fe6*/i < /*@>1441fe4*/129; /*@>1441fe2*/i/*@>1442346*/++) {
    real32_T rtb_Add1_i4;
    /* {S!d2732}Switch: '<S795>/Switch' incorporates:
 *  Constant: '<S795>/Constant'
 *  Constant: '<S795>/Constant1'
 *  MinMax: '<S795>/Min'
 *  Product: '<S795>/Divide'
 *  Product: '<S795>/Multiply'
 *  Sum: '<S795>/Add'
 *  Switch: '<S797>/Switch'
 *  Switch: '<S797>/Switch1'
 */
    /*@>10ddd29*/if (%<SLibCG_DumpSSCode("/*@[143e4c4*/",(SLibCG_SE(SLibCG_BOCSC(308, 1, "", -1, "", 0))),"/*@]*/")>/*@>10ddd1c*/ != /*@>140160c*/0.0F) {
        slewedStepSize/*@>13e1865*/ = 1.0F;
    } else {
        /*@>13fb4ba*/if (/*@>14017f6*/rtb_isImpulsive_g/*@>13e1893*/ > /*@>1401d1a*/0) {
            /* {S!d2724}Switch: '<S797>/Switch1' incorporates:
 *  Sum: '<S799>/Add1'
 */
            /*@>1401ee2*/slewedStepSize/*@>13fb4bd*/ = /*@>14376cb*/Model_Target_B./*@>14435de*/Lin2/*@>14345d5*/[/*@>14345d2*/i];
            /* {S!d2726}Switch: '<S797>/Switch' incorporates:
 *  Delay: '<S797>/Delay'
 */
            /*@>1401ee4*/rtb_R_re/*@>13fb4c2*/ = /*@>14376d7*/Model_Target_B./*@>14435e4*/Multiply1_e/*@>14345e1*/[/*@>14345de*/i];
        } else {
            /* {S!d2728}Switch: '<S797>/Switch1' incorporates:
 *  Sum: '<S801>/Add1'
 */
            /*@>1401ed2*/slewedStepSize/*@>13fb49d*/ = /*@>14345cd*/rtb_Add1_k3/*@>14345cf*/[/*@>14345cc*/i];
            /* {S!d2730}Switch: '<S797>/Switch' incorporates:
 *  Delay: '<S797>/Delay1'
 */
            /*@>1401ed6*/rtb_R_re/*@>13fb4a5*/ = /*@>14376d1*/Model_Target_B./*@>14435e1*/Multiply1_m/*@>14345db*/[/*@>14345d8*/i];
        }
        slewedStepSize/*@>13e1881*/ = /*@>142c646*/fminf(/*@>1401d18*/1.0F, /*@>142c644*/qhmath_div_f(/*@>14017f5*/1.0F, /*@>1401ed4*/slewedStepSize/*@>13e188f*/ + /*@>1401d19*/2.22044605E-16F)/*@>1403371*/ * (/*@>1401ed8*/rtb_R_re/*@>140337e*/ * /*@>14376e9*/Model_Target_B./*@>14435ed*/Multiply));
    }
    /* {E!d2732}End of Switch: '<S795>/Switch' */

    /* {S!d2734}Product: '<S798>/Multiply' incorporates:
 *  Math: '<S756>/Math Function'
 *
 * About '<S756>/Math Function':
 *  Operator: magnitude^2
 */
    slewedStepSize/*@>1442347*/ *= /*@>14376dd*/Model_Target_B./*@>14435e7*/MathFunction/*@>14345e7*/[/*@>14345e4*/i];
    /* {S!d2736}Sum: '<S806>/Add1' incorporates:
 *  Delay: '<S806>/Delay'
 *  Delay: '<S806>/Delay1'
 *  Product: '<S806>/Divide'
 *  Product: '<S806>/Multiply'
 *  Product: '<S806>/Multiply1'
 *  Sum: '<S806>/Add'
 */
    /*@>14376e3*/Model_Target_B./*@>14435ea*/Multiply1_m/*@>1417685*/[/*@>1417688*/i] = (slewedStepSize/*@>1419ec5*/ + /*@>1438777*/Model_Target_DW./*@>14437d9*/Delay_DSTATE_m/*@>14345ed*/[/*@>14345ea*/i])/*@>1419ec4*/ * /*@>1419ece*/maxXp/*@>1419ec3*/ + /*@>143877d*/Model_Target_DW./*@>14437dc*/Delay1_DSTATE_o/*@>14345f3*/[/*@>14345f0*/i]/*@>1419ecf*/ * %<SLibCG_DumpSSCode("/*@[143e9b5*/",(SLibCG_SE(SLibCG_BOCSC(307, 1, "", -1, "", 0))),"/*@]*/")>;
    /* {S!d2738}Product: '<S798>/Multiply' */
    /*@>14376ef*/Model_Target_B./*@>14435f0*/Multiply1_e/*@>141769d*/[/*@>14176a0*/i] = slewedStepSize;
    /* {S!d2740}Sum: '<S807>/Add1' incorporates:
 *  Delay: '<S807>/Delay'
 *  Delay: '<S807>/Delay1'
 *  Math: '<S756>/Math Function'
 *  Product: '<S807>/Multiply'
 *  Product: '<S807>/Multiply1'
 *  Sum: '<S807>/Add'
 *
 * About '<S756>/Math Function':
 *  Operator: magnitude^2
 */
    rtb_Add1_i4/*@>13e191b*/ = (/*@>14376f5*/Model_Target_B./*@>14435f3*/MathFunction/*@>14345f9*/[/*@>14345f6*/i]/*@>13e1924*/ + /*@>1438795*/Model_Target_DW./*@>14437e8*/Delay_DSTATE_k/*@>14345ff*/[/*@>14345fc*/i])/*@>140339c*/ * maxXp/*@>13e1922*/ + /*@>143879b*/Model_Target_DW./*@>14437eb*/Delay1_DSTATE_l/*@>1434605*/[/*@>1434602*/i]/*@>14033a0*/ * %<SLibCG_DumpSSCode("/*@[143e90f*/",(SLibCG_SE(SLibCG_BOCSC(307, 1, "", -1, "", 0))),"/*@]*/")>;
    /* {S!d2742}Product: '<S798>/Multiply1' incorporates:
 *  Constant: '<S798>/Constant'
 *  Product: '<S798>/Divide'
 *  Sum: '<S798>/Add'
 *  Sum: '<S798>/Subtract'
 *  Sum: '<S806>/Add1'
 */
    /*@>1418cd6*/rtb_R_re_tmp/*@>1418cd8*/ = /*@>142c648*/qhmath_div_f(/*@>14376fb*/Model_Target_B./*@>14435f6*/Multiply1_m/*@>143460b*/[/*@>1434608*/i], rtb_Add1_i4/*@>13fbb50*/ + /*@>1401fde*/2.22044605E-16F);
    /*@>1418ce6*/slewedStepSize/*@>1418ce8*/ = /*@>1437701*/Model_Target_B./*@>14435f9*/Lsr/*@>1434611*/[/*@>143460e*/i].re;
    rtb_R_re/*@>13fbb46*/ = /*@>1418cda*/rtb_R_re_tmp/*@>140338f*/ * /*@>1418cea*/slewedStepSize;
    /*@>1418cf6*/rtb_R_im_tmp/*@>1418cf8*/ = /*@>1437707*/Model_Target_B./*@>14435fc*/Lsr/*@>1434617*/[/*@>1434614*/i].im;
    rtb_R_re_tmp/*@>1442348*/ *= /*@>1418cfa*/rtb_R_im_tmp;
    /* {S!d2744}Sum: '<S798>/Subtract' */
    /*@>143770d*/Model_Target_B./*@>14435ff*/MatrixConcatenate_mb/*@>13fbb62*/[/*@>1401f36*/i/*@>13fbb64*/ + /*@>1401f38*/258]./*@>144336e*/re/*@>13fbb61*/ = slewedStepSize/*@>13fbb69*/ - rtb_R_re;
    /*@>1437719*/Model_Target_B./*@>1443602*/MatrixConcatenate_mb/*@>13ea73a*/[/*@>1401b4f*/i/*@>13ea73f*/ + /*@>1401b51*/258]./*@>1443371*/im/*@>13e197a*/ = rtb_R_im_tmp/*@>13e1988*/ - rtb_R_re_tmp;
    /* {S!d2746}SignalConversion generated from: '<S751>/Matrix Concatenate' */
    /*@>143771f*/Model_Target_B./*@>1443605*/MatrixConcatenate_mb/*@>13fbb7b*/[/*@>1401f3f*/i/*@>13fbb7d*/ + /*@>1401f41*/387]./*@>1443374*/re/*@>13fbb7a*/ = rtb_R_re;
    /*@>1437725*/Model_Target_B./*@>1443608*/MatrixConcatenate_mb/*@>13ea773*/[/*@>1401b54*/i/*@>13ea778*/ + /*@>1401b56*/387]./*@>1443377*/im/*@>13e19a6*/ = rtb_R_re_tmp;
    /* {S!d2748}Math: '<S756>/Math Function1' incorporates:
 *  Math: '<S756>/Math Function'
 *  Math: '<S774>/Math Function'
 *  Math: '<S774>/Math Function1'
 *  Selector: '<S753>/Selector'
 *  Selector: '<S753>/Selector1'
 *
 * About '<S756>/Math Function1':
 *  Operator: magnitude^2
 *
 * About '<S756>/Math Function':
 *  Operator: magnitude^2
 *
 * About '<S774>/Math Function':
 *  Operator: magnitude^2
 *
 * About '<S774>/Math Function1':
 *  Operator: magnitude^2
 */
    /*@>142f3ab*/rtb_y_i_0/*@>142f3b2*/ = &/*@>1437737*/Model_Target_B./*@>1443611*/Rsr/*@>142f3b1*/[/*@>142f3ae*/i];
    /*@>1437743*/Model_Target_B./*@>1443614*/instCPS/*@>13ea7aa*/[/*@>1401b59*/i]/*@>13e19c8*/ = /*@>142f3d8*/rtb_y_i_0->re/*@>140c731*/ * /*@>142f3db*/rtb_y_i_0->re/*@>140c730*/ + /*@>142f3de*/rtb_y_i_0->im/*@>140c73a*/ * /*@>142f3e1*/rtb_y_i_0->im;
    /* {S!d2750}Sum: '<S807>/Add1' */
    /*@>1401e7d*/rtb_Add1_ma/*@>13f7f69*/[/*@>1401e7f*/i] = rtb_Add1_i4;
    /* {S!d2752}Sum: '<S810>/Add' incorporates:
 *  Math: '<S756>/Math Function1'
 *
 * About '<S756>/Math Function1':
 *  Operator: magnitude^2
 */
    slewedStepSize = /*@>1437755*/Model_Target_B./*@>144361d*/instCPS/*@>143462f*/[/*@>143462c*/i];
    /* {S!d2754}Sum: '<S810>/Add1' incorporates:
 *  Delay: '<S810>/Delay'
 *  Delay: '<S810>/Delay1'
 *  Product: '<S810>/Multiply'
 *  Product: '<S810>/Multiply1'
 *  Sum: '<S810>/Add'
 */
    /*@>1437761*/Model_Target_B./*@>1443620*/Multiply_c/*@>13ea81c*/[/*@>1401b69*/i]/*@>13e19e6*/ = (slewedStepSize/*@>13e19ef*/ + /*@>14387c5*/Model_Target_DW./*@>14437fd*/Delay_DSTATE_em/*@>1434635*/[/*@>1434632*/i])/*@>14033a4*/ * updatedLokRokScaleFactor_tmp/*@>13e19ed*/ + /*@>14387cb*/Model_Target_DW./*@>1443800*/Delay1_DSTATE_e/*@>143463b*/[/*@>1434638*/i]/*@>14033a8*/ * %<SLibCG_DumpSSCode("/*@[143e92b*/",(SLibCG_SE(SLibCG_BOCSC(304, 1, "", -1, "", 0))),"/*@]*/")>;
    /* {S!d2756}Sum: '<S811>/Matrix Sum' */
    /*@>14016a1*/rtb_Delay_og/*@>1442349*/ += slewedStepSize;
}
/* {S!d2758}Sum: '<S814>/Sum2' incorporates:
 *  Constant: '<S814>/Constant'
 *  Gain: '<S814>/Gain'
 *  Math: '<S814>/log10'
 *  Sum: '<S814>/Sum1'
 *
 * About '<S814>/log10':
 *  Operator: log10
 */
/*@>14013c6*/rtb_Delay_og/*@>1104cb4*/ = /*@>142c64a*/qhmath_log10_f(/*@>140176f*/rtb_Delay_og/*@>13d5140*/ + /*@>1401d1f*/2.22044605E-16F)/*@>14030f5*/ * /*@>1401d1e*/10.0F;
/* {S!d2760}MATLAB Function: '<S811>/Detect Impulse' incorporates:
 *  Delay: '<S811>/Delay'
 *  Sum: '<S811>/Add1'
 */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 2/Full-Rate FDP/Fdp/FreqDomainProcessing/Reverb Extractions/Right Reverb Extraction/Compute PSD/Impulse Detector/Detect Impulse': '<S813>:1' */
/* '<S813>:1:5' if isempty(counter) */
/* '<S813>:1:6' if isempty(state) */
/* '<S813>:1:8' if (EnergyDifference > DetectImpulseThreshold) */
/*@>10de642*/if (/*@>1401749*/rtb_Delay_og/*@>13d17a2*/ - /*@>1438783*/Model_Target_DW./*@>14437df*/Delay_DSTATE_bj/*@>10de63e*/ > /*@>14013e0*/0.75F) {
    /* '<S813>:1:9' isImpulsive = 1; */
    /*@>14013f4*/rtb_isImpulsive_g/*@>10de634*/ = /*@>1441eaf*/1;
    /* '<S813>:1:10' counter = 0; */
    /*@>14387a1*/Model_Target_DW./*@>14437ee*/counter/*@>10de635*/ = /*@>14013f0*/0.0;
} else /*@>10de645*/if ((/*@>1438789*/Model_Target_DW./*@>14437e2*/counter/*@>10de63f*/ < /*@>14013df*/Model_Target_MaxValueOfCounterForDetectingImpulse_n)/*@>10de66a*/ && (/*@>143878f*/Model_Target_DW./*@>14437e5*/state/*@>10de640*/ == /*@>14013f6*/1.0)) {
    /* '<S813>:1:11' elseif (counter < MaxValueOfCounterForDetectingImpulse) && (state == 1) */
    /* '<S813>:1:12' isImpulsive = 1; */
    /*@>14013eb*/rtb_isImpulsive_g/*@>10de638*/ = /*@>1441eb5*/1;
    /* '<S813>:1:13' counter = counter + 1; */
    /*@>14387a7*/Model_Target_DW./*@>14437f1*/counter/*@>144235b*/++;
} else {
    /* '<S813>:1:14' else */
    /* '<S813>:1:15' isImpulsive = 0; */
    /*@>14013ee*/rtb_isImpulsive_g/*@>10de63b*/ = /*@>1441eb2*/0;
}
/* '<S813>:1:17' state = isImpulsive; */
/*@>14387b3*/Model_Target_DW./*@>14437f4*/state/*@>10de63d*/ = /*@>14013e3*/rtb_isImpulsive_g;
/* {E!d2760}End of MATLAB Function: '<S811>/Detect Impulse' */

/* {S!d2762}Sum: '<S812>/Add1' incorporates:
 *  Delay: '<S812>/Delay'
 *  Delay: '<S812>/Delay1'
 *  Math: '<S756>/Math Function1'
 *  Product: '<S812>/Multiply'
 *  Product: '<S812>/Multiply1'
 *  Sum: '<S812>/Add'
 *
 * About '<S756>/Math Function1':
 *  Operator: magnitude^2
 */
/*@>13e1a38*/for (/*@>1441fcb*/i = /*@>1441fca*/0; /*@>1441fd5*/i < /*@>1441fd3*/129; /*@>1441fd1*/i/*@>144234a*/++) {
    /*@>143772b*/Model_Target_B./*@>144360b*/Lstrk/*@>13ea8c4*/[/*@>1401b7d*/i]/*@>13e1a16*/ = (/*@>1437731*/Model_Target_B./*@>144360e*/instCPS/*@>143461d*/[/*@>143461a*/i]/*@>13e1a1f*/ + /*@>14387b9*/Model_Target_DW./*@>14437f7*/Delay_DSTATE_eu/*@>1434623*/[/*@>1434620*/i])/*@>14033ac*/ * minXp_tmp/*@>13e1a1d*/ + /*@>14387bf*/Model_Target_DW./*@>14437fa*/Delay1_DSTATE_c/*@>1434629*/[/*@>1434626*/i]/*@>14033b0*/ * %<SLibCG_DumpSSCode("/*@[143e947*/",(SLibCG_SE(SLibCG_BOCSC(305, 1, "", -1, "", 0))),"/*@]*/")>;
}
/* {E!d2762}End of Sum: '<S812>/Add1' */

/* {S!d2764}Delay: '<S808>/Delay' incorporates:
 *  Sum: '<S810>/Add1'
 */
/*@>10dde4a*/if (%<SLibCG_DumpSSCode("/*@[143e4e0*/",(SLibCG_SE(SLibCG_BOCSC(306, 1, "", -1, "", 0))),"/*@]*/")>/*@>10ddde4*/ < /*@>1401608*/1.0F) {
    /*@>142e190*/memcpy(&/*@>1437749*/Model_Target_B./*@>1443617*/Lxks/*@>14271fd*/[/*@>14271ec*/0], &/*@>143774f*/Model_Target_B./*@>144361a*/Multiply_c/*@>1427205*/[/*@>14271f9*/0], /*@>14271fb*/129U/*@>1427208*/ * /*@>1427207*/sizeof(real32_T));
} else {
    /*@>13fb48f*/if (%<SLibCG_DumpSSCode("/*@[143e56c*/",(SLibCG_SE(SLibCG_BOCSC(306, 1, "", -1, "", 0))),"/*@]*/")>/*@>14030d4*/ > /*@>1403af1*/2064.0F) {
        /*@>1401ece*/delayLen/*@>13fb492*/ = /*@>1441eb8*/2064;
    } else {
        /*@>1401603*/delayLen/*@>10dddef*/ = /*@>1408580*/(int32_T)/*@>14030cf*/(uint32_T)/*@>142c64e*/fmodf(/*@>142c64c*/truncf(%<SLibCG_DumpSSCode("/*@[143e84b*/",(SLibCG_BOCSC(306, 1, "", -1, "", 0)),"/*@]*/")>), /*@>140c74e*/4.2949673E+9F);
    }
/*@>13efbb9*/    for (/*@>1441fba*/i = /*@>1441fb9*/0; /*@>1441fc4*/i < /*@>1441fc2*/129; /*@>1441fc0*/i/*@>144235a*/++) {
        /*@>10dde3d*/if (/*@>1408591*/(uint32_T)/*@>14015fa*/i/*@>14030ec*/ < /*@>1408593*/(uint32_T)/*@>14015f8*/delayLen) {
            /*@>1437779*/Model_Target_B./*@>144362c*/Lxks/*@>13eaa41*/[/*@>1401ba1*/i]/*@>10dde27*/ = /*@>14387d1*/Model_Target_DW./*@>1443803*/MedusaDRspumRPxxFast/*@>143464f*/[(/*@>1434649*/i/*@>1434647*/ - /*@>143464b*/delayLen)/*@>1434646*/ + /*@>143464c*/2064];
        } else {
            /*@>143776d*/Model_Target_B./*@>1443626*/Lxks/*@>13ea958*/[/*@>1401b8f*/i]/*@>10dde3b*/ = /*@>1437773*/Model_Target_B./*@>1443629*/Multiply_c/*@>1434644*/[/*@>143463f*/i/*@>143463d*/ - /*@>1434641*/delayLen];
        }
    }
}
/* {E!d2764}End of Delay: '<S808>/Delay' */

/* {S!d2766}Delay: '<S808>/Delay1' incorporates:
 *  Sum: '<S812>/Add1'
 */
/*@>10ddeb6*/if (%<SLibCG_DumpSSCode("/*@[143e4fc*/",(SLibCG_SE(SLibCG_BOCSC(306, 1, "", -1, "", 0))),"/*@]*/")>/*@>10dde50*/ < /*@>14015f4*/1.0F) {
    /*@>142e192*/memcpy(&/*@>142716d*/rtb_Rxks/*@>142716e*/[/*@>142715d*/0], &/*@>1437767*/Model_Target_B./*@>1443623*/Lstrk/*@>1427176*/[/*@>142716a*/0], /*@>142716c*/129U/*@>1427179*/ * /*@>1427178*/sizeof(real32_T));
} else {
    /*@>13fb494*/if (%<SLibCG_DumpSSCode("/*@[143e588*/",(SLibCG_SE(SLibCG_BOCSC(306, 1, "", -1, "", 0))),"/*@]*/")>/*@>140308c*/ > /*@>1403b07*/2064.0F) {
        /*@>1401ed0*/delayLen/*@>13fb497*/ = /*@>1441ebb*/2064;
    } else {
        /*@>14015ef*/delayLen/*@>10dde5b*/ = /*@>14085a9*/(int32_T)/*@>1403087*/(uint32_T)/*@>142c654*/fmodf(/*@>142c652*/truncf(%<SLibCG_DumpSSCode("/*@[143e82f*/",(SLibCG_BOCSC(306, 1, "", -1, "", 0)),"/*@]*/")>), /*@>140c75d*/4.2949673E+9F);
    }
/*@>13efb9f*/    for (/*@>1441fa9*/i = /*@>1441fa8*/0; /*@>1441fb3*/i < /*@>1441fb1*/129; /*@>1441faf*/i/*@>1442359*/++) {
        /*@>10ddea9*/if (/*@>14085b8*/(uint32_T)/*@>14015e6*/i/*@>14030a4*/ < /*@>14085ba*/(uint32_T)/*@>14015e4*/delayLen) {
            /*@>1401bbf*/rtb_Rxks/*@>13eac11*/[/*@>1401bc1*/i]/*@>10dde93*/ = /*@>14387d7*/Model_Target_DW./*@>1443806*/MedusaDRspumRPxxSlow/*@>1434663*/[(/*@>143465d*/i/*@>143465b*/ - /*@>143465f*/delayLen)/*@>143465a*/ + /*@>1434660*/2064];
        } else {
            /*@>1401ba9*/rtb_Rxks/*@>13eaa9e*/[/*@>1401bab*/i]/*@>10ddea7*/ = /*@>1437785*/Model_Target_B./*@>144362f*/Lstrk/*@>1434658*/[/*@>1434653*/i/*@>1434651*/ - /*@>1434655*/delayLen];
        }
    }
}
/* {E!d2766}End of Delay: '<S808>/Delay1' */
/*@>13e1ad3*/for (/*@>1441f98*/i = /*@>1441f97*/0; /*@>1441fa2*/i < /*@>1441fa0*/129; /*@>1441f9e*/i/*@>144234b*/++) {
    /* {S!d2776}Switch: '<S796>/Switch' incorporates:
 *  Constant: '<S796>/Constant'
 *  Constant: '<S796>/Constant1'
 *  MinMax: '<S796>/Min'
 *  Product: '<S796>/Divide'
 *  Product: '<S796>/Multiply'
 *  Sum: '<S796>/Add'
 *  Switch: '<S808>/Switch'
 *  Switch: '<S808>/Switch1'
 */
    /*@>10ddec8*/if (%<SLibCG_DumpSSCode("/*@[143e518*/",(SLibCG_SE(SLibCG_BOCSC(308, 1, "", -1, "", 0))),"/*@]*/")>/*@>10ddebb*/ != /*@>14015e1*/0.0F) {
        slewedStepSize/*@>13e1a7e*/ = 1.0F;
    } else {
        /*@>13fb4c4*/if (/*@>140182b*/rtb_isImpulsive_g/*@>13e1aac*/ > /*@>1401d23*/0) {
            /* {S!d2768}Switch: '<S808>/Switch1' incorporates:
 *  Sum: '<S810>/Add1'
 */
            /*@>1401ee6*/slewedStepSize/*@>13fb4c7*/ = /*@>1437791*/Model_Target_B./*@>1443635*/Multiply_c/*@>143466f*/[/*@>143466c*/i];
            /* {S!d2770}Switch: '<S808>/Switch' incorporates:
 *  Delay: '<S808>/Delay'
 */
            /*@>1401ee8*/rtb_R_re/*@>13fb4cc*/ = /*@>1437797*/Model_Target_B./*@>1443638*/Lxks/*@>143467b*/[/*@>1434678*/i];
        } else {
            /* {S!d2772}Switch: '<S808>/Switch1' incorporates:
 *  Sum: '<S812>/Add1'
 */
            /*@>1401eda*/slewedStepSize/*@>13fb4ad*/ = /*@>143778b*/Model_Target_B./*@>1443632*/Lstrk/*@>1434669*/[/*@>1434666*/i];
            /* {S!d2774}Switch: '<S808>/Switch' incorporates:
 *  Delay: '<S808>/Delay1'
 */
            /*@>1401ede*/rtb_R_re/*@>13fb4b5*/ = /*@>1434673*/rtb_Rxks/*@>1434675*/[/*@>1434672*/i];
        }
        slewedStepSize/*@>13e1a9a*/ = /*@>142c65a*/fminf(/*@>1401d21*/1.0F, /*@>142c658*/qhmath_div_f(/*@>140182a*/1.0F, /*@>1401edc*/slewedStepSize/*@>13e1aa8*/ + /*@>1401d22*/2.22044605E-16F)/*@>14033c0*/ * (/*@>1401ee0*/rtb_R_re/*@>14033cd*/ * /*@>14377a9*/Model_Target_B./*@>1443641*/Multiply));
    }
    /* {S!d2778}Product: '<S809>/Multiply' incorporates:
 *  Math: '<S756>/Math Function1'
 *  Product: '<S809>/Divide'
 *
 * About '<S756>/Math Function1':
 *  Operator: magnitude^2
 */
    slewedStepSize/*@>144234c*/ *= /*@>143779d*/Model_Target_B./*@>144363b*/instCPS/*@>1434681*/[/*@>143467e*/i];
    /* {S!d2780}Switch: '<S796>/Switch' incorporates:
 *  Product: '<S809>/Divide'
 */
    /*@>14377a3*/Model_Target_B./*@>144363e*/Multiply_n/*@>13f7fb4*/[/*@>1401e99*/i] = slewedStepSize;
    /* {S!d2782}Sum: '<S817>/Add1' incorporates:
 *  Delay: '<S817>/Delay'
 *  Delay: '<S817>/Delay1'
 *  Product: '<S817>/Multiply'
 *  Product: '<S817>/Multiply1'
 *  Sum: '<S817>/Add'
 */
    /*@>14377af*/Model_Target_B./*@>1443644*/Lxks/*@>14176f9*/[/*@>14176fc*/i] = (slewedStepSize/*@>1419f21*/ + /*@>14387dd*/Model_Target_DW./*@>1443809*/Delay_DSTATE_np/*@>1434687*/[/*@>1434684*/i])/*@>1419f20*/ * maxXp/*@>1419f1f*/ + /*@>14387e3*/Model_Target_DW./*@>144380c*/Delay1_DSTATE_b/*@>143468d*/[/*@>143468a*/i]/*@>1419f2b*/ * %<SLibCG_DumpSSCode("/*@[143e9d1*/",(SLibCG_SE(SLibCG_BOCSC(307, 1, "", -1, "", 0))),"/*@]*/")>;
    /* {S!d2784}Sum: '<S818>/Add1' incorporates:
 *  Delay: '<S818>/Delay'
 *  Delay: '<S818>/Delay1'
 *  Math: '<S756>/Math Function1'
 *  Product: '<S818>/Multiply'
 *  Product: '<S818>/Multiply1'
 *  Sum: '<S818>/Add'
 *
 * About '<S756>/Math Function1':
 *  Operator: magnitude^2
 */
    updatedLokRokScaleFactor_tmp/*@>13e1b11*/ = (/*@>14377b5*/Model_Target_B./*@>1443647*/instCPS/*@>1434693*/[/*@>1434690*/i]/*@>13e1b1a*/ + /*@>14387e9*/Model_Target_DW./*@>144380f*/Delay_DSTATE_e3/*@>1434699*/[/*@>1434696*/i])/*@>14033eb*/ * maxXp/*@>13e1b18*/ + /*@>14387ef*/Model_Target_DW./*@>1443812*/Delay1_DSTATE_f/*@>143469f*/[/*@>143469c*/i]/*@>14033ef*/ * %<SLibCG_DumpSSCode("/*@[143e963*/",(SLibCG_SE(SLibCG_BOCSC(307, 1, "", -1, "", 0))),"/*@]*/")>;
    /* {S!d2786}Product: '<S809>/Multiply1' incorporates:
 *  Constant: '<S809>/Constant'
 *  Product: '<S809>/Divide'
 *  Sum: '<S809>/Add'
 *  Sum: '<S809>/Subtract'
 *  Sum: '<S817>/Add1'
 */
    /*@>1418d26*/rtb_R_re_tmp/*@>1418d28*/ = /*@>142c65c*/qhmath_div_f(/*@>14377bb*/Model_Target_B./*@>144364a*/Lxks/*@>14346a5*/[/*@>14346a2*/i], updatedLokRokScaleFactor_tmp/*@>13fbb92*/ + /*@>1401fe0*/2.22044605E-16F);
    /*@>1418d36*/slewedStepSize/*@>1418d38*/ = /*@>14377c1*/Model_Target_B./*@>144364d*/Rsr/*@>14346ab*/[/*@>14346a8*/i].re;
    rtb_R_re/*@>13fbb88*/ = /*@>1418d2a*/rtb_R_re_tmp/*@>14033de*/ * /*@>1418d3a*/slewedStepSize;
    /*@>1418d46*/rtb_R_im_tmp/*@>1418d48*/ = /*@>14377c7*/Model_Target_B./*@>1443650*/Rsr/*@>14346b1*/[/*@>14346ae*/i].im;
    rtb_R_re_tmp/*@>144234d*/ *= /*@>1418d4a*/rtb_R_im_tmp;
    /* {S!d2788}Sum: '<S809>/Subtract' */
    /*@>14377cd*/Model_Target_B./*@>1443653*/MatrixConcatenate_mb/*@>13fbba3*/[/*@>1401f4e*/i/*@>13fbba5*/ + /*@>1401f50*/516]./*@>144337a*/re/*@>13fbba2*/ = slewedStepSize/*@>13fbbaa*/ - rtb_R_re;
    /*@>14377d3*/Model_Target_B./*@>1443656*/MatrixConcatenate_mb/*@>13eae0e*/[/*@>1401be9*/i/*@>13eae13*/ + /*@>1401beb*/516]./*@>144337d*/im/*@>13e1b70*/ = rtb_R_im_tmp/*@>13e1b7e*/ - rtb_R_re_tmp;
    /* {S!d2790}SignalConversion generated from: '<S751>/Matrix Concatenate' */
    /*@>14377d9*/Model_Target_B./*@>1443659*/MatrixConcatenate_mb/*@>13fbbbc*/[/*@>1401f57*/i/*@>13fbbbe*/ + /*@>1401f59*/645]./*@>1443380*/re/*@>13fbbbb*/ = rtb_R_re;
    /*@>14377df*/Model_Target_B./*@>144365c*/MatrixConcatenate_mb/*@>13eae44*/[/*@>1401bee*/i/*@>13eae49*/ + /*@>1401bf0*/645]./*@>1443383*/im/*@>13e1b9c*/ = rtb_R_re_tmp;
    /* {S!d2792}Sum: '<S818>/Add1' */
    /*@>1401ea7*/rtb_Rxks/*@>13f7fd3*/[/*@>1401ea9*/i] = updatedLokRokScaleFactor_tmp;
}
/* {S!d2794}MATLAB Function: '<S821>/MATLAB Function' incorporates:
 *  Concatenate: '<S751>/Matrix Concatenate'
 *  Constant: '<S752>/Constant'
 */
/* MATLAB Function 'RifftWola/RifftWola/Hexagon/MATLAB Function': '<S823>:1' */
/* '<S823>:1:7' [~, numChannels] = size(u); */
/* '<S823>:1:8' outputSize = fftSize - numOverlap; */
/*  Buffer to hold overlapped samples */
/* '<S823>:1:12' if isempty(outputOverlap) */
/*  Buffer for Simulation  */
/*  Nullcopy copies type, size, and complexity of input to output */
/* '<S823>:1:20' y = coder.nullcopy(single(zeros(outputSize, numChannels))); */
/*  Simulation */
/* '<S823>:1:23' if(coder.target('MATLAB') || coder.target('Sfun')) */
/* '<S823>:1:33' else */
/* '<S823>:1:34' y = rifft_process(   single(complex(u)), ... */
/* '<S823>:1:35'                         single(Twiddle1),... */
/* '<S823>:1:36'                         single(Twiddle2),...  */
/* '<S823>:1:37'                         single(RifftOutputTmp),... */
/* '<S823>:1:38'                         single(win),... */
/* '<S823>:1:39'                         outputOverlap,... */
/* '<S823>:1:40'                         int32(fftSize),... */
/* '<S823>:1:41'                         int32(numChannels),... */
/* '<S823>:1:42'                         int32(numOverlap)); */
/*@>142c65e*/rifft_process(&/*@>14377e5*/Model_Target_B./*@>144365f*/y_e/*@>142aeda*/[/*@>142aed7*/0], &/*@>14377eb*/Model_Target_B./*@>1443662*/MatrixConcatenate_mb/*@>13eae72*/[/*@>1401bf6*/0], %<SLibCG_DumpSSCode("/*@[143e617*/",(SLibCG_CSCDWAddr(164, 96, "", -1, "", 0)),"/*@]*/")>, %<SLibCG_DumpSSCode("/*@[143e5fa*/",(SLibCG_CSCDWAddr(165, 128, "", -1, "", 0)),"/*@]*/")>, %<SLibCG_DumpSSCode("/*@[143e5dd*/",(SLibCG_CSCDWAddr(168, 256, "", -1, "", 0)),"/*@]*/")>, &/*@>14381d9*/Model_Target_ConstP./*@>1443698*/pooled74/*@>13eaec6*/[/*@>1401c02*/0], &/*@>14387f5*/Model_Target_DW./*@>1443815*/outputOverlap/*@>13eaedb*/[/*@>1401c05*/0], /*@>1441ebe*/256, /*@>1441ec1*/6, /*@>1441ec4*/128);
/* {S!d2796}Buffer: '<S648>/BufferOut' */
/*@>14015df*/currentOffset/*@>10ddf22*/ = /*@>1441ec7*/0;
/*@>13efb7d*/for (/*@>1441f37*/row = /*@>1441f36*/0; /*@>1441f41*/row < /*@>1441f3f*/6; /*@>1441f3d*/row/*@>144234e*/++) {
    /*@>14015dc*/delayLen/*@>10ddf2b*/ = /*@>1441eca*/128;
    /*@>1418d56*/rtb_isImpulsive_g/*@>1418d58*/ = /*@>14015d9*/row/*@>1403400*/ << /*@>14033ff*/8;
    /*@>14015d4*/memIdx/*@>10ddf33*/ = /*@>1418d5a*/rtb_isImpulsive_g/*@>10ddf32*/ + /*@>1438819*/Model_Target_DW./*@>1443821*/BufferOut_inBufPtrIdx_a;
    /*@>10ddf38*/if (/*@>143881f*/Model_Target_DW./*@>1443824*/BufferOut_inBufPtrIdx_a/*@>10ddf37*/ > /*@>1401377*/128) {
/*@>1441f7d*/        for (/*@>1441f79*/i/*@>1441f78*/ = /*@>1441f7a*/0; /*@>1441f6b*/i/*@>1441f69*/ < /*@>1441f6d*/256/*@>1441f6c*/ - /*@>1441f70*/Model_Target_DW./*@>1443893*/BufferOut_inBufPtrIdx_a; /*@>1441f73*/i/*@>144234f*/++) {
            /*@>1438843*/Model_Target_DW./*@>144382d*/BufferOut_CircBuf_j/*@>13eaf2c*/[/*@>1401c0e*/memIdx/*@>13eaf31*/ + /*@>1401c10*/i]/*@>10ddf4b*/ = /*@>14377fd*/Model_Target_B./*@>1443665*/y_e/*@>14346ba*/[/*@>14346b5*/currentOffset/*@>14346b3*/ + /*@>14346b7*/i];
        }
        /*@>14015c4*/currentOffset/*@>10ddf4f*/ = (/*@>14015c6*/currentOffset/*@>13d3f41*/ - /*@>143883d*/Model_Target_DW./*@>144382a*/BufferOut_inBufPtrIdx_a)/*@>13d3f42*/ + /*@>1401756*/256;
        /*@>14015bf*/memIdx/*@>10ddf52*/ = rtb_isImpulsive_g;
        /*@>14015bd*/delayLen/*@>10ddf56*/ = /*@>143885b*/Model_Target_DW./*@>1443833*/BufferOut_inBufPtrIdx_a/*@>13d3f44*/ - /*@>1401759*/128;
    }
/*@>1441f55*/    for (/*@>1441f51*/i/*@>1441f50*/ = /*@>1441f52*/0; /*@>1441f47*/i/*@>1441f45*/ < /*@>1441f49*/delayLen; /*@>1441f4b*/i/*@>1442350*/++) {
        /*@>143884f*/Model_Target_DW./*@>1443830*/BufferOut_CircBuf_j/*@>13eaf9e*/[/*@>1401c22*/memIdx/*@>13eafa3*/ + /*@>1401c24*/i]/*@>10ddf68*/ = /*@>1437803*/Model_Target_B./*@>1443668*/y_e/*@>14346c3*/[/*@>14346be*/currentOffset/*@>14346bc*/ + /*@>14346c0*/i];
    }
    /*@>14015ab*/currentOffset/*@>1442351*/ += /*@>14015af*/delayLen;
}
/*@>14387fb*/Model_Target_DW./*@>1443818*/BufferOut_inBufPtrIdx_a/*@>1442352*/ += /*@>14015a8*/128;
/*@>10ddf72*/if (/*@>1438807*/Model_Target_DW./*@>144381b*/BufferOut_inBufPtrIdx_a/*@>10ddf71*/ >= /*@>14015a3*/256) {
    /*@>143880d*/Model_Target_DW./*@>144381e*/BufferOut_inBufPtrIdx_a/*@>1442353*/ -= /*@>14015a0*/256;
}
/* {E!d2796}End of Buffer: '<S648>/BufferOut' */
%if !WHITE_SPACE(tlcOutputsFcnOfS300B96)

/* {S!d2798}S-Function (AudioStats_MEX): '<S756>/Audio Stats' */
%<SLibCG_DumpSSCode("/*@[143e3d8*/",tlcOutputsFcnOfS300B96,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS300B97)
/* {S!d2800}S-Function (AudioStats_MEX): '<S856>/Audio Stats' */
%<SLibCG_DumpSSCode("/*@[143e3db*/",tlcOutputsFcnOfS300B97,"/*@]*/")>\
%endif
/* {S!d2802}Update for Delay: '<S800>/Delay' */
/*@>1438825*/Model_Target_DW./*@>1443827*/Delay_DSTATE_nb/*@>10de7d8*/ = /*@>14013da*/updatedLokRokScaleFactor;
/* {S!d2804}Update for Delay: '<S799>/Delay' incorporates:
 *  Math: '<S756>/Math Function'
 *
 * About '<S756>/Math Function':
 *  Operator: magnitude^2
 */
/*@>142e194*/memcpy(&/*@>1438861*/Model_Target_DW./*@>1443836*/Delay_DSTATE_i/*@>1427088*/[/*@>1427004*/0], &/*@>1437809*/Model_Target_B./*@>144366b*/MathFunction/*@>1427090*/[/*@>1427011*/0], /*@>1427086*/129U/*@>1427093*/ * /*@>1427092*/sizeof(real32_T));
/* {S!d2806}Update for Delay: '<S799>/Delay1' incorporates:
 *  Sum: '<S799>/Add1'
 */
/*@>142e196*/memcpy(&/*@>1438867*/Model_Target_DW./*@>1443839*/Delay1_DSTATE/*@>14270a8*/[/*@>1427020*/0], &/*@>143780f*/Model_Target_B./*@>144366e*/Lin2/*@>14270b0*/[/*@>142702d*/0], /*@>14270a6*/129U/*@>14270b3*/ * /*@>14270b2*/sizeof(real32_T));
/* {S!d2808}Update for Delay: '<S801>/Delay' incorporates:
 *  Math: '<S756>/Math Function'
 *
 * About '<S756>/Math Function':
 *  Operator: magnitude^2
 */
/*@>142e198*/memcpy(&/*@>143886d*/Model_Target_DW./*@>144383c*/Delay_DSTATE_l/*@>14270c8*/[/*@>142703c*/0], &/*@>1437815*/Model_Target_B./*@>1443671*/MathFunction/*@>14270d0*/[/*@>1427049*/0], /*@>14270c6*/129U/*@>14270d3*/ * /*@>14270d2*/sizeof(real32_T));
/* {S!d2810}Update for Delay: '<S801>/Delay1' incorporates:
 *  Sum: '<S801>/Add1'
 */
/*@>142e19a*/memcpy(&/*@>1438873*/Model_Target_DW./*@>144383f*/Delay1_DSTATE_a/*@>14270e8*/[/*@>1427058*/0], &/*@>14270ef*/rtb_Add1_k3/*@>14270f0*/[/*@>1427065*/0], /*@>14270e6*/129U/*@>14270f3*/ * /*@>14270f2*/sizeof(real32_T));
/* {S!d2812}Update for Delay: '<S797>/Delay' incorporates:
 *  Sum: '<S799>/Add1'
 */
/*@>13efb55*/for (/*@>1441f26*/i = /*@>1441f25*/0; /*@>1441f30*/i < /*@>1441f2e*/1935; /*@>1441f2c*/i/*@>1442354*/++) {
    /*@>143887f*/Model_Target_DW./*@>1443845*/MedusaDRspumLPxxFast/*@>13eb150*/[/*@>1401c53*/i]/*@>10de840*/ = /*@>1438885*/Model_Target_DW./*@>1443848*/MedusaDRspumLPxxFast/*@>14346cb*/[/*@>14346c7*/i/*@>14346c5*/ + /*@>14346c8*/129];
}
/*@>142e19c*/memcpy(&/*@>1438879*/Model_Target_DW./*@>1443842*/MedusaDRspumLPxxFast/*@>1427069*/[/*@>1426f73*/1935], &/*@>143781b*/Model_Target_B./*@>1443674*/Lin2/*@>1427071*/[/*@>1426f80*/0], /*@>1427067*/129U/*@>1427074*/ * /*@>1427073*/sizeof(real32_T));
/* {E!d2812}End of Update for Delay: '<S797>/Delay' */

/* {S!d2814}Update for Delay: '<S797>/Delay1' */
/*@>13efb30*/for (/*@>1441f15*/i = /*@>1441f14*/0; /*@>1441f1f*/i < /*@>1441f1d*/1935; /*@>1441f1b*/i/*@>1442355*/++) {
    /*@>1438891*/Model_Target_DW./*@>144384e*/MedusaDRspumLPxxSlow/*@>13eb25d*/[/*@>1401c6a*/i]/*@>10de898*/ = /*@>1438897*/Model_Target_DW./*@>1443851*/MedusaDRspumLPxxSlow/*@>14346d3*/[/*@>14346cf*/i/*@>14346cd*/ + /*@>14346d0*/129];
}
/* {S!d2816}Update for Delay: '<S862>/Delay' */
/*@>143888b*/Model_Target_DW./*@>144384b*/Delay_DSTATE_i3/*@>10de8ce*/ = /*@>14013d6*/rtb_Sumhighfrequencyenergy;
/* {S!d2818}Update for Delay: '<S862>/Delay1' */
/*@>143889d*/Model_Target_DW./*@>1443854*/Delay1_DSTATE_p/*@>10de8da*/ = /*@>14013d2*/minXp;
/* {S!d2820}Update for Delay: '<S811>/Delay' */
/*@>14388a3*/Model_Target_DW./*@>1443857*/Delay_DSTATE_bj/*@>10de994*/ = /*@>14013ce*/rtb_Delay_og;
/*@>13eb220*/for (/*@>1441f04*/i = /*@>1441f03*/0; /*@>1441f0e*/i < /*@>1441f0c*/129; /*@>1441f0a*/i/*@>1442356*/++) {
    /* {S!d2822}Update for Delay: '<S810>/Delay' incorporates:
 *  Math: '<S756>/Math Function1'
 *
 * About '<S756>/Math Function1':
 *  Operator: magnitude^2
 */
    slewedStepSize = /*@>1437821*/Model_Target_B./*@>1443677*/instCPS/*@>14346d9*/[/*@>14346d6*/i];
    /* {S!d2824}Update for Delay: '<S797>/Delay1' incorporates:
 *  Sum: '<S801>/Add1'
 */
    /*@>14388d9*/Model_Target_DW./*@>144385a*/MedusaDRspumLPxxSlow/*@>13eb209*/[/*@>1401c5c*/i/*@>13eb20e*/ + /*@>1401c5b*/1935]/*@>13eb213*/ = /*@>14346dd*/rtb_Add1_k3/*@>14346df*/[/*@>14346dc*/i];
    /* {S!d2826}Update for Delay: '<S806>/Delay' incorporates:
 *  Product: '<S798>/Multiply'
 */
    /*@>14388f1*/Model_Target_DW./*@>1443866*/Delay_DSTATE_m/*@>13eb29d*/[/*@>1401c72*/i]/*@>13e1c2e*/ = /*@>143782d*/Model_Target_B./*@>144367d*/Multiply1_e/*@>14346ed*/[/*@>14346ea*/i];
    /* {S!d2828}Update for Delay: '<S806>/Delay1' incorporates:
 *  Sum: '<S806>/Add1'
 */
    /*@>14388f7*/Model_Target_DW./*@>1443869*/Delay1_DSTATE_o/*@>13eb2d4*/[/*@>1401c7a*/i]/*@>13e1c4a*/ = /*@>1437833*/Model_Target_B./*@>1443680*/Multiply1_m/*@>14346f3*/[/*@>14346f0*/i];
    /* {S!d2830}Update for Delay: '<S807>/Delay' incorporates:
 *  Math: '<S756>/Math Function'
 *
 * About '<S756>/Math Function':
 *  Operator: magnitude^2
 */
    /*@>14388fd*/Model_Target_DW./*@>144386c*/Delay_DSTATE_k/*@>13eb30b*/[/*@>1401c82*/i]/*@>13e1c66*/ = /*@>1437839*/Model_Target_B./*@>1443683*/MathFunction/*@>14346f9*/[/*@>14346f6*/i];
    /* {S!d2832}Update for Delay: '<S807>/Delay1' incorporates:
 *  Sum: '<S807>/Add1'
 */
    /*@>1438915*/Model_Target_DW./*@>1443875*/Delay1_DSTATE_l/*@>13eb342*/[/*@>1401c8a*/i]/*@>13e1c82*/ = /*@>1434705*/rtb_Add1_ma/*@>1434707*/[/*@>1434704*/i];
    /* {S!d2834}Update for Delay: '<S810>/Delay' */
    /*@>1438921*/Model_Target_DW./*@>1443878*/Delay_DSTATE_em/*@>13eb379*/[/*@>1401c8e*/i]/*@>13e1c9e*/ = slewedStepSize;
    /* {S!d2836}Update for Delay: '<S810>/Delay1' incorporates:
 *  Sum: '<S810>/Add1'
 */
    /*@>143892d*/Model_Target_DW./*@>144387b*/Delay1_DSTATE_e/*@>13eb3ae*/[/*@>1401c96*/i]/*@>13e1cba*/ = /*@>143783f*/Model_Target_B./*@>1443686*/Multiply_c/*@>143470d*/[/*@>143470a*/i];
    /* {S!d2838}Update for Delay: '<S812>/Delay' */
    /*@>1438939*/Model_Target_DW./*@>144387e*/Delay_DSTATE_eu/*@>13eb3e8*/[/*@>1401c9a*/i]/*@>13e1cd6*/ = slewedStepSize;
    /* {S!d2840}Update for Delay: '<S812>/Delay1' incorporates:
 *  Sum: '<S812>/Add1'
 */
    /*@>1438945*/Model_Target_DW./*@>1443884*/Delay1_DSTATE_c/*@>13eb41d*/[/*@>1401ca2*/i]/*@>13e1cf2*/ = /*@>143784b*/Model_Target_B./*@>144368c*/Lstrk/*@>1434713*/[/*@>1434710*/i];
}
/* {S!d2842}Update for Delay: '<S808>/Delay' incorporates:
 *  Sum: '<S810>/Add1'
 */
/*@>13efb0b*/for (/*@>1441ef3*/i = /*@>1441ef2*/0; /*@>1441efd*/i < /*@>1441efb*/1935; /*@>1441ef9*/i/*@>1442357*/++) {
    /*@>14388e5*/Model_Target_DW./*@>1443860*/MedusaDRspumRPxxFast/*@>13eb523*/[/*@>1401cb9*/i]/*@>10de9fc*/ = /*@>14388eb*/Model_Target_DW./*@>1443863*/MedusaDRspumRPxxFast/*@>14346e7*/[/*@>14346e3*/i/*@>14346e1*/ + /*@>14346e4*/129];
}
/*@>142e19e*/memcpy(&/*@>14388df*/Model_Target_DW./*@>144385d*/MedusaDRspumRPxxFast/*@>1426f14*/[/*@>1426eea*/1935], &/*@>1437827*/Model_Target_B./*@>144367a*/Multiply_c/*@>1426f1c*/[/*@>1426ef7*/0], /*@>1426f12*/129U/*@>1426f1f*/ * /*@>1426f1e*/sizeof(real32_T));
/* {E!d2842}End of Update for Delay: '<S808>/Delay' */

/* {S!d2844}Update for Delay: '<S808>/Delay1' incorporates:
 *  Sum: '<S812>/Add1'
 */
/*@>13efae6*/for (/*@>1441ee2*/i = /*@>1441ee1*/0; /*@>1441eec*/i < /*@>1441eea*/1935; /*@>1441ee8*/i/*@>1442358*/++) {
    /*@>1438909*/Model_Target_DW./*@>144386f*/MedusaDRspumRPxxSlow/*@>13eb631*/[/*@>1401cd0*/i]/*@>10dea54*/ = /*@>143890f*/Model_Target_DW./*@>1443872*/MedusaDRspumRPxxSlow/*@>1434701*/[/*@>14346fd*/i/*@>14346fb*/ + /*@>14346fe*/129];
}
/*@>142e1a0*/memcpy(&/*@>143893f*/Model_Target_DW./*@>1443881*/MedusaDRspumRPxxSlow/*@>1426e12*/[/*@>1426d91*/1935], &/*@>1437845*/Model_Target_B./*@>1443689*/Lstrk/*@>1426e1a*/[/*@>1426d9e*/0], /*@>1426e10*/129U/*@>1426e1d*/ * /*@>1426e1c*/sizeof(real32_T));
/* {E!d2844}End of Update for Delay: '<S808>/Delay1' */

/* {S!d2846}Update for Delay: '<S817>/Delay' incorporates:
 *  Product: '<S809>/Multiply'
 */
/*@>142e1a2*/memcpy(&/*@>143894b*/Model_Target_DW./*@>1443887*/Delay_DSTATE_np/*@>1426e31*/[/*@>1426dad*/0], &/*@>1437851*/Model_Target_B./*@>144368f*/Multiply_n/*@>1426e39*/[/*@>1426dba*/0], /*@>1426e2f*/129U/*@>1426e3c*/ * /*@>1426e3b*/sizeof(real32_T));
/* {S!d2848}Update for Delay: '<S817>/Delay1' incorporates:
 *  Sum: '<S817>/Add1'
 */
/*@>142e1a4*/memcpy(&/*@>1438951*/Model_Target_DW./*@>144388a*/Delay1_DSTATE_b/*@>1426e51*/[/*@>1426dc9*/0], &/*@>1437857*/Model_Target_B./*@>1443692*/Lxks/*@>1426e59*/[/*@>1426dd6*/0], /*@>1426e4f*/129U/*@>1426e5c*/ * /*@>1426e5b*/sizeof(real32_T));
/* {S!d2850}Update for Delay: '<S818>/Delay' incorporates:
 *  Math: '<S756>/Math Function1'
 *
 * About '<S756>/Math Function1':
 *  Operator: magnitude^2
 */
/*@>142e1a6*/memcpy(&/*@>1438957*/Model_Target_DW./*@>144388d*/Delay_DSTATE_e3/*@>1426e71*/[/*@>1426de5*/0], &/*@>143785d*/Model_Target_B./*@>1443695*/instCPS/*@>1426e79*/[/*@>1426df2*/0], /*@>1426e6f*/129U/*@>1426e7c*/ * /*@>1426e7b*/sizeof(real32_T));
/* {S!d2852}Update for Delay: '<S818>/Delay1' incorporates:
 *  Sum: '<S818>/Add1'
 */
/*@>142e1a8*/memcpy(&/*@>143895d*/Model_Target_DW./*@>1443890*/Delay1_DSTATE_f/*@>1426e91*/[/*@>1426e01*/0], &/*@>1426e98*/rtb_Rxks/*@>1426e99*/[/*@>1426e0e*/0], /*@>1426e8f*/129U/*@>1426e9c*/ * /*@>1426e9b*/sizeof(real32_T));
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutput4LocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 5
%assign ::GlobalCurrentTID = 5
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

int32_T MedusaFdpDeciRateRfftRfftInput_tmp;
int32_T i;
int32_T memIdx;
int32_T rtb_isImpulsive_c;
real32_T rtb_Add1_gg[129];
real32_T rtb_MathFunction1_e[129];
real32_T rtb_Rxks[129];
real32_T Lx_im;
real32_T maxXp;
real32_T minXp;
real32_T minXp_tmp;
real32_T rtb_Add1_e3;
real32_T rtb_R_f_im_tmp;
real32_T rtb_R_f_re_tmp;
real32_T rtb_R_f_re_tmp_0;
real32_T rtb_R_re;
real32_T updatedLokRokScaleFactor;
static const real32_T b[128] = %<(TLC_STR_CTX(13))>;
static const real32_T c[128] = %<(TLC_STR_CTX(14))>;
creal32_T *rtb_y_o_0;
%closefile localVarDecl
%assign _modelSS = ""

%assign tlcOutputsFcnOfS300B124 = OpaqueTLCBlockFcn("Outputs", 300, 124, 376, 3, 0)
/* {S!d2854}Buffer: '<S647>/BufferIn' */
/*@>14023dd*/rtb_isImpulsive_c/*@>10df10d*/ = /*@>1443f47*/0;
/*@>13eff19*/for (/*@>14443ff*/i = /*@>14443fe*/0; /*@>1444409*/i < /*@>1444407*/2; /*@>1444405*/i/*@>144440d*/++) {
    /*@>14023d7*/memIdx/*@>10df129*/ = (/*@>14023da*/i/*@>1403577*/ << /*@>1403576*/8)/*@>10df128*/ + /*@>1438963*/Model_Target_DW./*@>1445836*/BufferIn_outBufPtrIdx;
    /*@>142e1aa*/memcpy(&/*@>1437863*/Model_Target_B./*@>1445494*/BufferIn_f/*@>142802d*/[/*@>1428017*/rtb_isImpulsive_c], &/*@>1438969*/Model_Target_DW./*@>1445839*/BufferIn_CircBuf/*@>1428038*/[/*@>1428028*/memIdx], /*@>142803a*/sizeof(real32_T)/*@>143f302*/ << /*@>143f301*/7U);
    /*@>14023d3*/rtb_isImpulsive_c/*@>144440e*/ += /*@>14021f2*/128;
    /*@>14023d1*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>10df143*/ = /*@>1438975*/Model_Target_DW./*@>144583f*/BufferIn_outBufPtrIdx/*@>10df142*/ + /*@>14021f1*/128;
}
/*@>10df146*/if (/*@>14023cf*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>10df145*/ == /*@>14023ce*/256) {
    /*@>14023cc*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>10df148*/ = /*@>1443f4a*/0;
}
/*@>143896f*/Model_Target_DW./*@>144583c*/BufferIn_outBufPtrIdx/*@>10df14a*/ = /*@>14023c9*/MedusaFdpDeciRateRfftRfftInput_tmp;
/* {E!d2854}End of Buffer: '<S647>/BufferIn' */

/* {S!d2856}MATLAB Function: '<S657>/Windowing' incorporates:
 *  Buffer: '<S647>/BufferIn'
 */
/*  Get sizes */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 2/Decimated-Rate FDP/Fdp/ShortTimeFourierTransform/Windowing': '<S743>:1' */
/* '<S743>:1:4' [~, NumChannels] = size(AudioIn); */
/* '<S743>:1:5' HopSize = FftSize - Overlap; */
/* '<S743>:1:8' if isempty(InputOverlap) */
/* '<S743>:1:12' AudioOut = [InputOverlap.*Window(1:Overlap); AudioIn.*Window((HopSize + 1):end)]; */
/*@>13eba84*/for (/*@>14443dd*/rtb_isImpulsive_c = /*@>14443dc*/0; /*@>14443e7*/rtb_isImpulsive_c < /*@>14443e5*/2; /*@>14443e3*/rtb_isImpulsive_c/*@>144440f*/++) {
/*@>13eba74*/    for (/*@>14443ee*/i = /*@>14443ed*/0; /*@>14443f8*/i < /*@>14443f6*/128; /*@>14443f4*/i/*@>1444410*/++) {
        /*@>1418d85*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>1418d87*/ = (/*@>140d6f5*/rtb_isImpulsive_c/*@>140d6f3*/ << /*@>140d6f6*/7)/*@>140d6f0*/ + /*@>140d6f2*/i;
        /*@>1418d95*/memIdx/*@>1418d97*/ = (/*@>140257c*/rtb_isImpulsive_c/*@>1403587*/ << /*@>1403586*/8)/*@>13f97d1*/ + /*@>140257a*/i;
%<SLibCG_DumpSSCode("/*@[143f1f8*/",SLibCG_SetBOCSC(344, 512, "", -1, "/*@>1445a2f*/memIdx", 0, "/*@>1445a35*/Model_Target_DW./*@>1445a34*/InputOverlap_d/*@>1445a33*/[/*@>1445a37*/MedusaFdpDeciRateRfftRfftInput_tmp]/*@>1445a32*/ * /*@>1445a39*/b/*@>1445a38*/[/*@>1445a3a*/i]"),"/*@]*/")>\
%<SLibCG_DumpSSCode("/*@[143f213*/",SLibCG_SetBOCSC(344, 512, "", -1, "memIdx/*@>1445a4a*/ + /*@>1445a4c*/128", 0, "/*@>1445a52*/Model_Target_B./*@>1445a51*/BufferIn_f/*@>1445a50*/[MedusaFdpDeciRateRfftRfftInput_tmp]/*@>1445a4f*/ * /*@>1445a56*/c/*@>1445a55*/[/*@>1445a57*/i]"),"/*@]*/")>\
    }
}
/*  Update overlapping samples */
/* '<S743>:1:15' InputOverlap = AudioIn; */
/*@>142e1ac*/memcpy(&/*@>1438981*/Model_Target_DW./*@>1445842*/InputOverlap_d/*@>1427fd2*/[/*@>1427fc1*/0], &/*@>1437869*/Model_Target_B./*@>1445497*/BufferIn_f/*@>1427fda*/[/*@>1427fce*/0], /*@>1427fdc*/sizeof(real32_T)/*@>143f305*/ << /*@>143f304*/8U);
/* {E!d2856}End of MATLAB Function: '<S657>/Windowing' */

/* {S!d2858}MATLAB Function: '<S745>/MATLAB Function1' */
/*  Computes the Real FFT of a Multi-Channel Signal.  */
/*  During Code Generation, hexagon rfft crl function is used. */
/*  Inputs: */
/*      u - purely real signal.  */
/*          size = [fftSize, numChannels] */
/*      fftSize - size of each input channel. Also the size of FFT */
/*  Outputs: */
/*      y - fftSize/2 + 1 unique FFT coefficients of each channel of u. */
/*          size = [fftSize/2 + 1, numChannels] */
/*  ------------------------------------------------------------------------- */
/* MATLAB Function 'Rfft/Rfft/Hexagon/MATLAB Function1': '<S748>:1' */
/* '<S748>:1:17' numChannels = size(u, 2); */
/* '<S748>:1:18' spectrumSize = (fftSize/2) + 1; */
/*  Nullcopy copies type, size, and complexity of input to output */
/* '<S748>:1:21' y = coder.nullcopy(complex(single(zeros(spectrumSize, numChannels)))); */
/*  Simulation */
/* '<S748>:1:24' if(coder.target('MATLAB') || coder.target('Sfun')) */
/* '<S748>:1:27' else */
/* '<S748>:1:28' y = rfft_process(single(u), Twiddle1, Twiddle2, RfftOutputTmp, int32(fftSize), int32(numChannels)); */
/*@>142c67e*/rfft_process(&/*@>1437875*/Model_Target_B./*@>144549d*/y_o/*@>142aef5*/[/*@>142aef2*/0], %<SLibCG_DumpSSCode("/*@[143f08b*/",(SLibCG_BOCSCAddr(344, 512, "", -1, "", 0)),"/*@]*/")>, %<SLibCG_DumpSSCode("/*@[143f06e*/",(SLibCG_CSCDWAddr(162, 96, "", -1, "", 0)),"/*@]*/")>, %<SLibCG_DumpSSCode("/*@[143f051*/",(SLibCG_CSCDWAddr(163, 128, "", -1, "", 0)),"/*@]*/")>, %<SLibCG_DumpSSCode("/*@[143f034*/",(SLibCG_CSCDWAddr(171, 256, "", -1, "", 0)),"/*@]*/")>, /*@>1443f4d*/256, /*@>1443f50*/2);
/* {S!d2862}Math: '<S690>/Math Function'
 *
 * About '<S690>/Math Function':
 *  Operator: magnitude^2
 */
/*@>13ebd1b*/for (/*@>14443cc*/rtb_isImpulsive_c = /*@>14443cb*/0; /*@>14443d6*/rtb_isImpulsive_c < /*@>14443d4*/129; /*@>14443d2*/rtb_isImpulsive_c/*@>1444411*/++) {
    /* {S!d2860}Selector: '<S657>/Selector' incorporates:
 *  Math: '<S660>/Math Function'
 *  Math: '<S660>/Math Function1'
 *  Math: '<S690>/Math Function1'
 *  Selector: '<S657>/Selector1'
 *
 * About '<S660>/Math Function':
 *  Operator: magnitude^2
 *
 * About '<S660>/Math Function1':
 *  Operator: magnitude^2
 *
 * About '<S690>/Math Function1':
 *  Operator: magnitude^2
 */
    /*@>142fc88*/rtb_y_o_0/*@>142fc8f*/ = &/*@>1437893*/Model_Target_B./*@>14454a9*/y_o/*@>142fc8e*/[/*@>142fc8b*/rtb_isImpulsive_c];
    /*@>1437899*/Model_Target_B./*@>14454ac*/Lin2_a/*@>13ebd0d*/[/*@>140259f*/rtb_isImpulsive_c]/*@>13ebd0e*/ = /*@>142fcae*/rtb_y_o_0->re/*@>140d714*/ * /*@>142fcb1*/rtb_y_o_0->re/*@>140d713*/ + /*@>142fcb4*/rtb_y_o_0->im/*@>140d71d*/ * /*@>142fcb7*/rtb_y_o_0->im;
}
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[251], "Output",5)
/* {S!d2864}MATLAB Function: '<S663>/Coeffs 1st Stage' incorporates:
 *  Selector: '<S657>/Selector'
 *  Selector: '<S657>/Selector1'
 */
%if SLibCG_SystemFcnArgAccessed("Model_Target_Coeffs1stStage",251,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[143edf4*/",SLibCGIRGenReusableSysCall("Model_Target_Coeffs1stStage", ["%<_modelSS>", "&/*@>1445a97*/Model_Target_B./*@>1445a96*/y_o/*@>1445a95*/[/*@>1445a99*/0]", "&/*@>1445aa6*/Model_Target_B./*@>1445aa5*/y_o/*@>1445aa4*/[/*@>1445aa8*/129]", "&/*@>1445ab4*/Model_Target_B./*@>1445ab3*/sf_Coeffs1stStage"], 251, 0, 6, 5, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[251]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

%endif
/* {S!d2866}MATLAB Function: '<S666>/MATLAB Function' incorporates:
 *  Math: '<S690>/Math Function'
 *  Product: '<S705>/Multiply'
 *
 * About '<S690>/Math Function':
 *  Operator: magnitude^2
 */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 2/Decimated-Rate FDP/Fdp/FreqDomainProcessing/CalculateAndApplyCoefficients/DeciRate/Calculate coefficients/Instantaneous Stretch Coeffs /MATLAB Function': '<S672>:1' */
/* '<S672>:1:6' coder.inline('always'); */
/* '<S672>:1:7' epsf = single(eps); */
/*  Step 1: Compute the estimated stretch coefficients or worst-case estimate */
/*  based on maximum allowable stretching Xpmax */
/* '<S672>:1:11' Lstrk = min(Lxk, LokRokMaxScaleFactor * Lok); */
/*@>13e2085*/for (/*@>14443bb*/i = /*@>14443ba*/0; /*@>14443c5*/i < /*@>14443c3*/129; /*@>14443c1*/i/*@>1444412*/++) {
    /*@>14378ab*/Model_Target_B./*@>14454af*/Multiply_a/*@>13ebde7*/[/*@>14025b2*/i]/*@>13e2074*/ = %<SLibCG_DumpSSCode("/*@[143f117*/",(SLibCG_SE(SLibCG_BOCSC(294, 1, "", -1, "", 0))),"/*@]*/")>/*@>14035a2*/ * /*@>14378b6*/Model_Target_B./*@>14454b5*/sf_Coeffs1stStage./*@>14454b2*/Lok/*@>1434731*/[/*@>143472e*/i];
}
/*@>10dfb08*/for (/*@>14443aa*/i = /*@>14443a9*/0; /*@>14443b4*/i < /*@>14443b2*/129; /*@>14443b0*/i/*@>1444413*/++) {
    /*@>14378bc*/Model_Target_B./*@>14454b8*/Multiply_bg/*@>13ebe3b*/[/*@>14025be*/i]/*@>10dfb0f*/ = /*@>142c682*/fminf(/*@>14378c7*/Model_Target_B./*@>14454be*/sf_Coeffs1stStage./*@>14454bb*/Lxk/*@>1434737*/[/*@>1434734*/i], /*@>14378cd*/Model_Target_B./*@>14454c1*/Multiply_a/*@>143473d*/[/*@>143473a*/i]);
}
/* '<S672>:1:12' Rstrk = min(Rxk, LokRokMaxScaleFactor * Rok); */
/*@>13e20a4*/for (/*@>1444399*/i = /*@>1444398*/0; /*@>14443a3*/i < /*@>14443a1*/129; /*@>144439f*/i/*@>1444414*/++) {
    /*@>14378df*/Model_Target_B./*@>14454c4*/Multiply_a/*@>13ebe72*/[/*@>14025c6*/i]/*@>13e2093*/ = %<SLibCG_DumpSSCode("/*@[143f133*/",(SLibCG_SE(SLibCG_BOCSC(294, 1, "", -1, "", 0))),"/*@]*/")>/*@>14035a6*/ * /*@>14378ea*/Model_Target_B./*@>14454ca*/sf_Coeffs1stStage./*@>14454c7*/Rok/*@>1434743*/[/*@>1434740*/i];
}
/*@>10dfb14*/for (/*@>1444388*/i = /*@>1444387*/0; /*@>1444392*/i < /*@>1444390*/129; /*@>144438e*/i/*@>1444415*/++) {
    /*@>14378f0*/Model_Target_B./*@>14454cd*/Lstrk_k/*@>13ebec6*/[/*@>14025d2*/i]/*@>10dfb1b*/ = /*@>142c684*/fminf(/*@>14378fb*/Model_Target_B./*@>14454d3*/sf_Coeffs1stStage./*@>14454d0*/Rxk/*@>1434749*/[/*@>1434746*/i], /*@>1437901*/Model_Target_B./*@>14454d6*/Multiply_a/*@>143474f*/[/*@>143474c*/i]);
}
/*  Step 2: Compute Excessive Stretch Detector (ESD) - used to update Xp */
/*  */
/*                    sum_over_FFT_bins( Lstrki * |Lin|) + sum_over_FFT_bins( Rstrki * |Rin|)   */
/*  ESD = abs( db20 ( ----------------------------------------------------------------------- ) ) */
/*                                      sum_over_FFT_bins( Lxki * |Lin| ) */
/*  */
/*  since Lxki * |Lin| = min (|Lin|,|Rin|) (per bin), we store the minima  */
/*  beforehand and use it here */
/*  Note the matrix shorthand for sum_over_FFT_bins(Lstrki * Lin) is Lstrk' * p.absLi */
/*  A small positive value is added to the numerator, to avoid db20(0) */
/* '<S672>:1:25' ESDdB = db20( (epsf + Lstrk(:)' * absLi(:) + Rstrk(:)' * absRi(:)) ... */
/* '<S672>:1:26'             / (epsf + sum(minAbsLiRi)) ); */
/*@>14022f5*/updatedLokRokScaleFactor/*@>10dfb1e*/ = /*@>143790c*/Model_Target_B./*@>14454dc*/sf_Coeffs1stStage./*@>14454d9*/minAbsLiRi/*@>1434754*/[/*@>1434751*/0];
/*@>10dfb25*/for (/*@>1444377*/i = /*@>1444376*/0; /*@>1444381*/i < /*@>144437f*/128; /*@>144437d*/i/*@>1444416*/++) {
    /*@>14022ec*/updatedLokRokScaleFactor/*@>1444417*/ += /*@>1437917*/Model_Target_B./*@>14454e2*/sf_Coeffs1stStage./*@>14454df*/minAbsLiRi/*@>143475c*/[/*@>1434758*/i/*@>1434756*/ + /*@>1434759*/1];
}
/* DB20  Linear quantity to decibels */
/*    Converts x to dB assuming that x represents volts. */
/*    y=20*log10(abs(x)); */
/*  */
/*  See Also: DB10, UNDB20 */
/*    Copyright 2018-2019 Bose Corporation */
/*  Bill Berardi */
/*  $Id: db20.m 11813 2012-07-11 17:31:25Z rs7109 $ */
/* 'db20:12' y = 20/log(10)*log(abs(x)); */
/*@>14025e7*/minXp/*@>13ebf49*/ = /*@>14025e6*/0.0F;
/*@>13ebf57*/for (/*@>1444366*/rtb_isImpulsive_c = /*@>1444365*/0; /*@>1444370*/rtb_isImpulsive_c < /*@>144436e*/129; /*@>144436c*/rtb_isImpulsive_c/*@>1444418*/++) {
    /*@>1402548*/minXp/*@>1444419*/ += /*@>143791d*/Model_Target_B./*@>14454e5*/Multiply_bg/*@>1434762*/[/*@>143475f*/rtb_isImpulsive_c]/*@>14035aa*/ * /*@>1437928*/Model_Target_B./*@>14454eb*/sf_Coeffs1stStage./*@>14454e8*/absLi/*@>1434768*/[/*@>1434765*/rtb_isImpulsive_c];
}
/*@>14025f9*/maxXp/*@>13ebf99*/ = /*@>14025f8*/0.0F;
/*@>13ebfa7*/for (/*@>1444355*/rtb_isImpulsive_c = /*@>1444354*/0; /*@>144435f*/rtb_isImpulsive_c < /*@>144435d*/129; /*@>144435b*/rtb_isImpulsive_c/*@>144441a*/++) {
    /*@>140254c*/maxXp/*@>144441b*/ += /*@>143792e*/Model_Target_B./*@>14454ee*/Lstrk_k/*@>143476e*/[/*@>143476b*/rtb_isImpulsive_c]/*@>14035ae*/ * /*@>1437939*/Model_Target_B./*@>14454f4*/sf_Coeffs1stStage./*@>14454f1*/absRi/*@>1434774*/[/*@>1434771*/rtb_isImpulsive_c];
}
/*@>1402305*/updatedLokRokScaleFactor/*@>10dfafc*/ = /*@>142c68a*/qhmath_log_f(/*@>142c688*/qhmath_abs_f(/*@>142c686*/qhmath_div_f((/*@>140d6e2*/minXp/*@>10dfbb3*/ + /*@>14022cb*/2.22044605E-16F)/*@>10dfbb2*/ + /*@>140d6e4*/maxXp, /*@>14022c8*/updatedLokRokScaleFactor/*@>10dfbbf*/ + /*@>14022ca*/2.22044605E-16F)))/*@>1403565*/ * /*@>14022c7*/8.68588924F;
/*  "Turn off" stretching by setting minXp and maxXp to zero,  */
/*  if CAE_enable is zero. */
/* '<S672>:1:30' if (CAE_enable == 0) */
/*@>10dfa8d*/if (/*@>143793f*/Model_Target_B./*@>14454f7*/Constant3/*@>10dfa6f*/ == /*@>1402323*/0) {
    /* '<S672>:1:31' minXp = single(0.0); */
    /*@>1402321*/minXp/*@>10dfa59*/ = /*@>14022c6*/0.0F;
    /* '<S672>:1:32' maxXp = single(0.0); */
    /*@>140231d*/maxXp/*@>10dfa5a*/ = /*@>14022c5*/0.0F;
} else {
    /* '<S672>:1:33' else */
    /* '<S672>:1:34' minXp = Xpmin; */
    /*@>140231f*/minXp/*@>10dfa5b*/ = %<SLibCG_DumpSSCode("/*@[143f017*/",(SLibCG_SE(SLibCG_BOCSC(298, 1, "", -1, "", 0))),"/*@]*/")>;
    /* '<S672>:1:35' maxXp = Xpmax; */
    /*@>140231b*/maxXp/*@>10dfa5c*/ = %<SLibCG_DumpSSCode("/*@[143effb*/",(SLibCG_SE(SLibCG_BOCSC(293, 1, "", -1, "", 0))),"/*@]*/")>;
}
/*  Calculate new stretch factor, Xp, based on ESD value. */
/*  The following curve is applied: */
/*         Xp */
/*         ^ */
/*         | */
/*   maxXp +----------. */
/*         |          .\ */
/*         |          . \ */
/*         |          .  \ */
/*         |          .   \ */
/*         |          .    \ */
/*         |          .     \ */
/*   minXp +          .      --------------- minXp */
/*         |          .      . */
/*         +----------+------+-------------> ESD (dB) */
/*        0           |      | */
/*                    |     ESD_upper_bound_in_dB - thresh2 */
/*                    | */
/*                   ESD_lower_bound_in_dB - thresh1 */
/* '<S672>:1:58' if (ESDdB < ESDLowerBound) */
/*@>10dfaa6*/if (/*@>1402319*/updatedLokRokScaleFactor/*@>10dfa70*/ < %<SLibCG_DumpSSCode("/*@[143ee1c*/",(SLibCG_SE(SLibCG_BOCSC(296, 1, "", -1, "", 0))),"/*@]*/")>) {
    /*  Stretching is lower than the lower threshold, use largest allowable Xp. */
    /* '<S672>:1:60' Xp = maxXp; */
    /*@>1402313*/minXp/*@>10dfa5f*/ = /*@>1402315*/maxXp;
} else /*@>10dfaa9*/if (/*@>1402317*/updatedLokRokScaleFactor/*@>142097a*/ <= %<SLibCG_DumpSSCode("/*@[143ee38*/",(SLibCG_SE(SLibCG_BOCSC(295, 1, "", -1, "", 0))),"/*@]*/")>) {
    /* '<S672>:1:64' else */
    /*  Stretching in between, compute Xp as a linear interpolation between  */
    /*  max and min based on the two thresholds */
    /* '<S672>:1:67' Xp = minXp + (maxXp - minXp) * ESDStepSize * (ESDUpperBound - ESDdB); */
    /*@>1402309*/minXp/*@>1444465*/ += (/*@>140230f*/maxXp/*@>10dfa72*/ - /*@>140230d*/minXp)/*@>1403561*/ * %<SLibCG_DumpSSCode("/*@[143efdf*/",(SLibCG_SE(SLibCG_BOCSC(297, 1, "", -1, "", 0))),"/*@]*/")>/*@>140355d*/ * (%<SLibCG_DumpSSCode("/*@[143efc3*/",(SLibCG_SE(SLibCG_BOCSC(295, 1, "", -1, "", 0))),"/*@]*/")>/*@>10dfa74*/ - /*@>140230b*/updatedLokRokScaleFactor);
} else {
    /* '<S672>:1:61' elseif (ESDdB > ESDUpperBound) */
    /*  Stretching is higher than the upper threshold, use smallest allowable Xp. */
    /* '<S672>:1:63' Xp = minXp; */
}
/*  Step 3: Compute updated instantaneous stretch coefficients */
/* '<S672>:1:71' updatedLokRokScaleFactor = 0.5 * (Xp/(1-Xp+epsf)); */
/*@>1402307*/updatedLokRokScaleFactor/*@>10dfaec*/ = /*@>142c68c*/qhmath_div_f(/*@>14022d0*/minXp, (/*@>14022cf*/1.0F/*@>10dfbac*/ - /*@>14022cd*/minXp)/*@>10dfbab*/ + /*@>14022cc*/2.22044605E-16F)/*@>1403550*/ * /*@>14022c4*/0.5F;
/*  Calculate instanstaneous Center Selectivity coefficients based on SPS */
/* '<S672>:1:74' instCPS = 1 - SPS; */
/*@>13e20c2*/for (/*@>1444344*/i = /*@>1444343*/0; /*@>144434e*/i < /*@>144434c*/129; /*@>144434a*/i/*@>144441c*/++) {
    /*@>143794b*/Model_Target_B./*@>14454fa*/instCPS_c/*@>13ebfe8*/[/*@>1402606*/i]/*@>13e20b2*/ = /*@>140246a*/1.0F/*@>13e20b9*/ - /*@>1437956*/Model_Target_B./*@>1445500*/sf_Coeffs1stStage./*@>14454fd*/SPS/*@>143477a*/[/*@>1434777*/i];
}
/* '<S672>:1:75' Lck = instCPS .* Lxk; */
/*@>13e20e5*/for (/*@>1444333*/i = /*@>1444332*/0; /*@>144433d*/i < /*@>144433b*/129; /*@>1444339*/i/*@>144441d*/++) {
    /*@>1437962*/Model_Target_B./*@>1445503*/Lstrk_k/*@>13ec03c*/[/*@>1402612*/i]/*@>13e20d0*/ = /*@>1437968*/Model_Target_B./*@>1445506*/instCPS_c/*@>1434780*/[/*@>143477d*/i]/*@>14035b2*/ * /*@>1437973*/Model_Target_B./*@>144550c*/sf_Coeffs1stStage./*@>1445509*/Lxk/*@>1434786*/[/*@>1434783*/i];
}
/* '<S672>:1:76' Rck = instCPS .* Rxk; */
/*@>13ec08d*/for (/*@>1444322*/rtb_isImpulsive_c = /*@>1444321*/0; /*@>144432c*/rtb_isImpulsive_c < /*@>144432a*/129; /*@>1444328*/rtb_isImpulsive_c/*@>144441e*/++) {
    /*@>1437979*/Model_Target_B./*@>144550f*/instCPS_c/*@>1417b78*/[/*@>1417b7b*/rtb_isImpulsive_c] *= /*@>143798a*/Model_Target_B./*@>1445515*/sf_Coeffs1stStage./*@>1445512*/Rxk/*@>1434792*/[/*@>143478f*/rtb_isImpulsive_c];
}
/*  Use the updated value of Xp to calculate stretch coefficients */
/* '<S672>:1:79' Lstrk = min(Lck, updatedLokRokScaleFactor * Lok); */
/*@>13e2104*/for (/*@>1444311*/i = /*@>1444310*/0; /*@>144431b*/i < /*@>1444319*/129; /*@>1444317*/i/*@>1444420*/++) {
    /*@>1437996*/Model_Target_B./*@>1445518*/Multiply_a/*@>13ec0c2*/[/*@>1402623*/i]/*@>13e20f3*/ = /*@>1402475*/updatedLokRokScaleFactor/*@>14035ba*/ * /*@>14379a1*/Model_Target_B./*@>144551e*/sf_Coeffs1stStage./*@>144551b*/Lok/*@>1434798*/[/*@>1434795*/i];
}
/*@>10dfb33*/for (/*@>1444300*/i = /*@>14442ff*/0; /*@>144430a*/i < /*@>1444308*/129; /*@>1444306*/i/*@>1444421*/++) {
    /*@>14379a7*/Model_Target_B./*@>1445521*/Lstrk_k/*@>1417b90*/[/*@>1417b93*/i] = /*@>142c68e*/fminf(/*@>14379ad*/Model_Target_B./*@>1445524*/Lstrk_k/*@>143479e*/[/*@>143479b*/i], /*@>14379b3*/Model_Target_B./*@>1445527*/Multiply_a/*@>14347a4*/[/*@>14347a1*/i]);
}
/* '<S672>:1:80' Rstrk = min(Rck, updatedLokRokScaleFactor * Rok); */
/*@>13e2123*/for (/*@>14442ef*/i = /*@>14442ee*/0; /*@>14442f9*/i < /*@>14442f7*/129; /*@>14442f5*/i/*@>1444422*/++) {
    /*@>14379c5*/Model_Target_B./*@>144552a*/Multiply_a/*@>13ec189*/[/*@>140262f*/i]/*@>13e2112*/ = /*@>140247c*/updatedLokRokScaleFactor/*@>14035be*/ * /*@>14379d0*/Model_Target_B./*@>1445530*/sf_Coeffs1stStage./*@>144552d*/Rok/*@>14347aa*/[/*@>14347a7*/i];
}
/*@>10dfb3f*/for (/*@>14442de*/i = /*@>14442dd*/0; /*@>14442e8*/i < /*@>14442e6*/129; /*@>14442e4*/i/*@>1444423*/++) {
    /*@>14379e2*/Model_Target_B./*@>1445539*/Multiply_bg/*@>13ec22c*/[/*@>140263f*/i]/*@>10dfb46*/ = /*@>142c690*/fminf(/*@>14379e8*/Model_Target_B./*@>144553c*/instCPS_c/*@>14347b0*/[/*@>14347ad*/i], /*@>14379ee*/Model_Target_B./*@>144553f*/Multiply_a/*@>14347b6*/[/*@>14347b3*/i]);
    /*@>1437a00*/Model_Target_B./*@>1445548*/Lstrk_k/*@>1417ba8*/[/*@>1417bab*/i] *= /*@>1437a06*/Model_Target_B./*@>144554b*/Lin2_a/*@>14347bc*/[/*@>14347b9*/i];
}
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[254], "Output",5)
/* {S!d2868}MATLAB Function: '<S707>/MATLAB Function' incorporates:
 *  Constant: '<S669>/lsGain1'
 *  Constant: '<S669>/lsPole1'
 */
%if SLibCG_SystemFcnArgAccessed("Model_Target_MATLABFunction",254,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[143edf5*/",SLibCGIRGenReusableSysCall("Model_Target_MATLABFunction", ["%<_modelSS>", "/*@>1445af2*/Model_Target_B./*@>1445af1*/Lstrk_k", "/*@>1445afd*/0.90993F", "/*@>1445b07*/0.0450350046F", "&/*@>1445b13*/Model_Target_B./*@>1445b12*/sf_MATLABFunction_kd", "&/*@>1445b20*/Model_Target_DW./*@>1445b1f*/sf_MATLABFunction_kd"], 254, 10, 6, 5, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[254]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[254], "Output",5)

/* {S!d2870}MATLAB Function: '<S691>/MATLAB Function' incorporates:
 *  Constant: '<S669>/lsGain1'
 *  Constant: '<S669>/lsPole1'
 */
%if SLibCG_SystemFcnArgAccessed("Model_Target_MATLABFunction",254,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[143edf6*/",SLibCGIRGenReusableSysCall("Model_Target_MATLABFunction", ["%<_modelSS>", "/*@>1445b5e*/Model_Target_B./*@>1445b5d*/Lin2_a", "/*@>1445b69*/0.90993F", "/*@>1445b73*/0.0450350046F", "&/*@>1445b7f*/Model_Target_B./*@>1445b7e*/sf_MATLABFunction_jh", "&/*@>1445b8c*/Model_Target_DW./*@>1445b8b*/sf_MATLABFunction_jh"], 254, 6, 6, 5, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[254]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

%endif
/* {S!d2872}Math: '<S690>/Math Function2' incorporates:
 *  Constant: '<S690>/Constant1'
 *  Sum: '<S690>/Add'
 *
 * About '<S690>/Math Function2':
 *  Operator: reciprocal
 */
/*@>13e2144*/for (/*@>14442cd*/i = /*@>14442cc*/0; /*@>14442d7*/i < /*@>14442d5*/129; /*@>14442d3*/i/*@>1444425*/++) {
    /*@>1437a1e*/Model_Target_B./*@>144554e*/instCPS_c/*@>13ec2ec*/[/*@>140264f*/i]/*@>13e2131*/ = /*@>142c696*/qhmath_div_f(/*@>140d75b*/1.0F, /*@>1437a29*/Model_Target_B./*@>1445554*/sf_MATLABFunction_jh./*@>1445551*/y/*@>14347c8*/[/*@>14347c5*/i]/*@>140db8a*/ + /*@>140db90*/2.22044605E-16F);
}
/* {E!d2872}End of Math: '<S690>/Math Function2' */
/*@>13ec2ba*/for (/*@>14442bc*/rtb_isImpulsive_c = /*@>14442bb*/0; /*@>14442c6*/rtb_isImpulsive_c < /*@>14442c4*/129; /*@>14442c2*/rtb_isImpulsive_c/*@>1444426*/++) {
    /* {S!d2874}Math: '<S690>/Math Function1' incorporates:
 *  Math: '<S660>/Math Function'
 *  Math: '<S660>/Math Function1'
 *  Math: '<S690>/Math Function'
 *  Selector: '<S657>/Selector'
 *  Selector: '<S657>/Selector1'
 *
 * About '<S690>/Math Function1':
 *  Operator: magnitude^2
 *
 * About '<S660>/Math Function':
 *  Operator: magnitude^2
 *
 * About '<S660>/Math Function1':
 *  Operator: magnitude^2
 *
 * About '<S690>/Math Function':
 *  Operator: magnitude^2
 */
    /*@>142fc91*/rtb_y_o_0/*@>142fc9a*/ = &/*@>1437a41*/Model_Target_B./*@>144555d*/y_o/*@>142fc99*/[/*@>142fc95*/rtb_isImpulsive_c/*@>142fc93*/ + /*@>142fc96*/129];
    /*@>1403dfd*/maxXp/*@>1403df3*/ = /*@>142fcba*/rtb_y_o_0->re/*@>1403e06*/ * /*@>142fcbd*/rtb_y_o_0->re/*@>1403df2*/ + /*@>142fcc0*/rtb_y_o_0->im/*@>1403e07*/ * /*@>142fcc3*/rtb_y_o_0->im;
    /* {S!d2876}Product: '<S706>/Multiply' incorporates:
 *  MATLAB Function: '<S666>/MATLAB Function'
 *  Math: '<S690>/Math Function1'
 *
 * About '<S690>/Math Function1':
 *  Operator: magnitude^2
 */
    /*@>1437a59*/Model_Target_B./*@>1445566*/Multiply_a/*@>13ec333*/[/*@>1402657*/rtb_isImpulsive_c]/*@>13ec334*/ = maxXp/*@>14035c6*/ * /*@>1437a5f*/Model_Target_B./*@>1445569*/Multiply_bg/*@>14347ce*/[/*@>14347cb*/rtb_isImpulsive_c];
    /* {S!d2878}Math: '<S690>/Math Function1'
 *
 * About '<S690>/Math Function1':
 *  Operator: magnitude^2
 */
    /*@>1437a65*/Model_Target_B./*@>144556c*/Lstrk_k/*@>13f84c4*/[/*@>1402aa7*/rtb_isImpulsive_c] = maxXp;
}
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[254], "Output",5)
/* {S!d2880}MATLAB Function: '<S709>/MATLAB Function' incorporates:
 *  Constant: '<S669>/lsGain1'
 *  Constant: '<S669>/lsPole1'
 */
%if SLibCG_SystemFcnArgAccessed("Model_Target_MATLABFunction",254,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[143edf7*/",SLibCGIRGenReusableSysCall("Model_Target_MATLABFunction", ["%<_modelSS>", "/*@>1445bca*/Model_Target_B./*@>1445bc9*/Multiply_a", "/*@>1445bd5*/0.90993F", "/*@>1445bdf*/0.0450350046F", "&/*@>1445beb*/Model_Target_B./*@>1445bea*/sf_MATLABFunction_g", "&/*@>1445bf8*/Model_Target_DW./*@>1445bf7*/sf_MATLABFunction_g"], 254, 11, 6, 5, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[254]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[254], "Output",5)

/* {S!d2882}MATLAB Function: '<S692>/MATLAB Function' incorporates:
 *  Constant: '<S669>/lsGain1'
 *  Constant: '<S669>/lsPole1'
 */
%if SLibCG_SystemFcnArgAccessed("Model_Target_MATLABFunction",254,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[143edf8*/",SLibCGIRGenReusableSysCall("Model_Target_MATLABFunction", ["%<_modelSS>", "/*@>1445c36*/Model_Target_B./*@>1445c35*/Lstrk_k", "/*@>1445c41*/0.90993F", "/*@>1445c4b*/0.0450350046F", "&/*@>1445c57*/Model_Target_B./*@>1445c56*/sf_MATLABFunction_a", "&/*@>1445c64*/Model_Target_DW./*@>1445c63*/sf_MATLABFunction_a"], 254, 7, 6, 5, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[254]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

%endif
/* {S!d2884}Math: '<S690>/Math Function3' incorporates:
 *  Constant: '<S690>/Constant2'
 *  Product: '<S725>/Divide'
 *  Sum: '<S690>/Add1'
 *
 * About '<S690>/Math Function3':
 *  Operator: reciprocal
 */
/*@>13e2165*/for (/*@>14442ab*/i = /*@>14442aa*/0; /*@>14442b5*/i < /*@>14442b3*/129; /*@>14442b1*/i/*@>1444427*/++) {
    /*@>1437a71*/Model_Target_B./*@>144556f*/Multiply_a/*@>13ec37b*/[/*@>1402661*/i]/*@>13e2152*/ = /*@>142c69c*/qhmath_div_f(/*@>140d772*/1.0F, /*@>1437a7c*/Model_Target_B./*@>1445575*/sf_MATLABFunction_a./*@>1445572*/y/*@>14347d4*/[/*@>14347d1*/i]/*@>140db9b*/ + /*@>140dba1*/2.22044605E-16F);
}
/* {E!d2884}End of Math: '<S690>/Math Function3' */

/* {S!d2886}Product: '<S673>/Multiply' incorporates:
 *  Math: '<S690>/Math Function'
 *
 * About '<S690>/Math Function':
 *  Operator: magnitude^2
 */
/*@>13e2188*/for (/*@>144429a*/i = /*@>1444299*/0; /*@>14442a4*/i < /*@>14442a2*/129; /*@>14442a0*/i/*@>1444428*/++) {
    /*@>1437a8e*/Model_Target_B./*@>144557e*/Multiply_bg/*@>13ec3cd*/[/*@>140266d*/i]/*@>13e2173*/ = /*@>1437a94*/Model_Target_B./*@>1445581*/Lin2_a/*@>14347da*/[/*@>14347d7*/i]/*@>14035ca*/ * /*@>1437a9f*/Model_Target_B./*@>1445587*/sf_Coeffs1stStage./*@>1445584*/Lok/*@>14347e0*/[/*@>14347dd*/i];
}
/* {E!d2886}End of Product: '<S673>/Multiply' */
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[254], "Output",5)

/* {S!d2888}MATLAB Function: '<S675>/MATLAB Function' incorporates:
 *  Constant: '<S669>/lsGain1'
 *  Constant: '<S669>/lsPole1'
 */
%if SLibCG_SystemFcnArgAccessed("Model_Target_MATLABFunction",254,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[143edf9*/",SLibCGIRGenReusableSysCall("Model_Target_MATLABFunction", ["%<_modelSS>", "/*@>1445ca2*/Model_Target_B./*@>1445ca1*/Multiply_bg", "/*@>1445cad*/0.90993F", "/*@>1445cb7*/0.0450350046F", "&/*@>1445cc3*/Model_Target_B./*@>1445cc2*/sf_MATLABFunction_n", "&/*@>1445cd0*/Model_Target_DW./*@>1445ccf*/sf_MATLABFunction_n"], 254, 0, 6, 5, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[254]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

%endif
/* {S!d2890}Product: '<S673>/Multiply1' incorporates:
 *  Math: '<S690>/Math Function2'
 *
 * About '<S690>/Math Function2':
 *  Operator: reciprocal
 */
/*@>13e21ab*/for (/*@>1444289*/i = /*@>1444288*/0; /*@>1444293*/i < /*@>1444291*/129; /*@>144428f*/i/*@>1444429*/++) {
    /*@>1437ab1*/Model_Target_B./*@>144558a*/Multiply1_o/*@>13ec424*/[/*@>1402679*/i]/*@>13e2196*/ = /*@>1437abc*/Model_Target_B./*@>1445590*/sf_MATLABFunction_n./*@>144558d*/y/*@>14347e6*/[/*@>14347e3*/i]/*@>14035ce*/ * /*@>1437ac2*/Model_Target_B./*@>1445593*/instCPS_c/*@>14347ec*/[/*@>14347e9*/i];
}
/* {E!d2890}End of Product: '<S673>/Multiply1' */

/* {S!d2892}Product: '<S674>/Multiply' incorporates:
 *  Math: '<S690>/Math Function1'
 *
 * About '<S690>/Math Function1':
 *  Operator: magnitude^2
 */
/*@>13e21ce*/for (/*@>1444278*/i = /*@>1444277*/0; /*@>1444282*/i < /*@>1444280*/129; /*@>144427e*/i/*@>144442a*/++) {
    /*@>1437ad4*/Model_Target_B./*@>144559c*/Multiply_bg/*@>13ec476*/[/*@>1402685*/i]/*@>13e21b9*/ = /*@>1437ada*/Model_Target_B./*@>144559f*/Lstrk_k/*@>14347f2*/[/*@>14347ef*/i]/*@>14035d2*/ * /*@>1437ae5*/Model_Target_B./*@>14455a5*/sf_Coeffs1stStage./*@>14455a2*/Rok/*@>14347f8*/[/*@>14347f5*/i];
}
/* {E!d2892}End of Product: '<S674>/Multiply' */
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[254], "Output",5)

/* {S!d2894}MATLAB Function: '<S677>/MATLAB Function' incorporates:
 *  Constant: '<S669>/lsGain1'
 *  Constant: '<S669>/lsPole1'
 */
%if SLibCG_SystemFcnArgAccessed("Model_Target_MATLABFunction",254,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[143edfa*/",SLibCGIRGenReusableSysCall("Model_Target_MATLABFunction", ["%<_modelSS>", "/*@>1445d0e*/Model_Target_B./*@>1445d0d*/Multiply_bg", "/*@>1445d19*/0.90993F", "/*@>1445d23*/0.0450350046F", "&/*@>1445d2f*/Model_Target_B./*@>1445d2e*/sf_MATLABFunction_e", "&/*@>1445d3c*/Model_Target_DW./*@>1445d3b*/sf_MATLABFunction_e"], 254, 1, 6, 5, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[254]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

%endif
/* {S!d2896}Product: '<S674>/Multiply1' incorporates:
 *  Product: '<S725>/Divide'
 */
/*@>13e21f1*/for (/*@>1444267*/i = /*@>1444266*/0; /*@>1444271*/i < /*@>144426f*/129; /*@>144426d*/i/*@>144442b*/++) {
    /*@>1437af1*/Model_Target_B./*@>14455a8*/Multiply1_a/*@>13ec4ca*/[/*@>1402691*/i]/*@>13e21dc*/ = /*@>1437afc*/Model_Target_B./*@>14455ae*/sf_MATLABFunction_e./*@>14455ab*/y/*@>14347fe*/[/*@>14347fb*/i]/*@>14035d6*/ * /*@>1437b02*/Model_Target_B./*@>14455b1*/Multiply_a/*@>1434804*/[/*@>1434801*/i];
}
/* {E!d2896}End of Product: '<S674>/Multiply1' */

/* {S!d2898}MATLAB Function: '<S663>/Coeffs 2nd Stage' incorporates:
 *  Product: '<S673>/Multiply1'
 *  Product: '<S674>/Multiply1'
 */
/*  Update mono coeffs after smoothing far left/right coeffs */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 2/Decimated-Rate FDP/Fdp/FreqDomainProcessing/CalculateAndApplyCoefficients/DeciRate/Calculate coefficients/Coeffs 2nd Stage': '<S665>:1' */
/*  Left only/right only coefficients */
/* '<S665>:1:5' Lxks = 1 - Loks; */
/* '<S665>:1:6' Rxks = 1 - Roks; */
/*@>13e220f*/for (/*@>1444256*/i = /*@>1444255*/0; /*@>1444260*/i < /*@>144425e*/129; /*@>144425c*/i/*@>144442c*/++) {
    /*@>1437b0e*/Model_Target_B./*@>14455b4*/Lxks_j/*@>13ec501*/[/*@>1402699*/i]/*@>13e21ff*/ = /*@>14024a3*/1.0F/*@>13e2206*/ - /*@>1437b14*/Model_Target_B./*@>14455b7*/Multiply1_o/*@>143480a*/[/*@>1434807*/i];
    /*@>140269f*/rtb_Rxks/*@>13ec538*/[/*@>14026a1*/i]/*@>13e221d*/ = /*@>14024a9*/1.0F/*@>13e2224*/ - /*@>1437b1a*/Model_Target_B./*@>14455ba*/Multiply1_a/*@>1434810*/[/*@>143480d*/i];
}
/* {E!d2898}End of MATLAB Function: '<S663>/Coeffs 2nd Stage' */

/* {S!d2900}MATLAB Function: '<S671>/Normalize Stretch Coeffs' incorporates:
 *  Math: '<S690>/Math Function'
 *  Math: '<S690>/Math Function2'
 *  Product: '<S699>/Multiply'
 *  Product: '<S705>/Multiply1'
 *  Product: '<S706>/Multiply1'
 *  Product: '<S725>/Divide'
 *
 * About '<S690>/Math Function':
 *  Operator: magnitude^2
 *
 * About '<S690>/Math Function2':
 *  Operator: reciprocal
 */
/*  Normalize stretch coefficients against mono portion  */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 2/Decimated-Rate FDP/Fdp/FreqDomainProcessing/CalculateAndApplyCoefficients/DeciRate/Calculate coefficients/Updated Stretch Coeffs and Steering Coeffs/Normalize Stretch Coeffs': '<S695>:1' */
/*  Take only difference of L&R strecth coeffs as the total stretch  */
/* '<S695>:1:6' netStretch = (Lstrks .* absLi) - (Rstrks.* absRi); */
/*@>13e226c*/for (/*@>1444245*/i = /*@>1444244*/0; /*@>144424f*/i < /*@>144424d*/129; /*@>144424b*/i/*@>144442d*/++) {
    /*@>1437b26*/Model_Target_B./*@>14455bd*/Multiply_bg/*@>13ec600*/[/*@>14026bd*/i]/*@>13e223b*/ = /*@>1437b31*/Model_Target_B./*@>14455c3*/sf_MATLABFunction_kd./*@>14455c0*/y/*@>1434816*/[/*@>1434813*/i]/*@>14035de*/ * /*@>1437b37*/Model_Target_B./*@>14455c6*/instCPS_c/*@>143481c*/[/*@>1434819*/i]/*@>14035da*/ * /*@>1437b42*/Model_Target_B./*@>14455cc*/sf_Coeffs1stStage./*@>14455c9*/absLi/*@>1434822*/[/*@>143481f*/i]/*@>13e2242*/ - /*@>1437b4d*/Model_Target_B./*@>14455d2*/sf_MATLABFunction_g./*@>14455cf*/y/*@>1434828*/[/*@>1434825*/i]/*@>14035e6*/ * /*@>1437b53*/Model_Target_B./*@>14455d5*/Multiply_a/*@>143482e*/[/*@>143482b*/i]/*@>14035e2*/ * /*@>1437b5e*/Model_Target_B./*@>14455db*/sf_Coeffs1stStage./*@>14455d8*/absRi/*@>1434834*/[/*@>1434831*/i];
}
/*  Normalize by the smoothed total shared level  */
/* '<S695>:1:9' epsf = single(eps); */
/* '<S695>:1:10' LxSmth = (Lxks .* absLi) + epsf; */
/* '<S695>:1:11' RxSmth = (Rxks .* absRi) + epsf; */
/* '<S695>:1:13' Lstrki = max(0.0, netStretch) ./ LxSmth; */
/*@>10dfc62*/for (/*@>1444234*/i = /*@>1444233*/0; /*@>144423e*/i < /*@>144423c*/129; /*@>144423a*/i/*@>144442e*/++) {
    /*@>14026d0*/rtb_Add1_gg/*@>13ec69e*/[/*@>14026d2*/i]/*@>10dfc69*/ = /*@>142c6a2*/fmaxf(/*@>14022af*/0.0F, /*@>1437b64*/Model_Target_B./*@>14455de*/Multiply_bg/*@>143483a*/[/*@>1434837*/i]);
}
/*@>13ec66c*/for (/*@>1444223*/rtb_isImpulsive_c = /*@>1444222*/0; /*@>144422d*/rtb_isImpulsive_c < /*@>144422b*/129; /*@>1444229*/rtb_isImpulsive_c/*@>144442f*/++) {
    /*@>1417bc1*/rtb_Add1_gg/*@>1417bc0*/[/*@>1417bc3*/rtb_isImpulsive_c] = /*@>142c6a4*/qhmath_div_f(/*@>143483e*/rtb_Add1_gg/*@>1434840*/[/*@>143483d*/rtb_isImpulsive_c], /*@>1437b6a*/Model_Target_B./*@>14455e1*/Lxks_j/*@>1434846*/[/*@>1434843*/rtb_isImpulsive_c]/*@>141acd2*/ * /*@>1437b75*/Model_Target_B./*@>14455e7*/sf_Coeffs1stStage./*@>14455e4*/absLi/*@>143484c*/[/*@>1434849*/rtb_isImpulsive_c]/*@>141acd1*/ + /*@>141acdd*/2.22044605E-16F);
}
/* '<S695>:1:14' Rstrki = max(0.0, (-netStretch)) ./ RxSmth; */
/*@>13ec6d9*/for (/*@>1444212*/rtb_isImpulsive_c = /*@>1444211*/0; /*@>144421c*/rtb_isImpulsive_c < /*@>144421a*/129; /*@>1444218*/rtb_isImpulsive_c/*@>1444430*/++) {
    updatedLokRokScaleFactor = /*@>1437b7b*/Model_Target_B./*@>14455ea*/Multiply_bg/*@>1434852*/[/*@>143484f*/rtb_isImpulsive_c];
    /*@>14026e6*/rtb_MathFunction1_e/*@>13ec775*/[/*@>14026e8*/rtb_isImpulsive_c]/*@>10dfc75*/ = /*@>142c6a6*/fmaxf(/*@>14022ae*/0.0F, -/*@<140d795*/updatedLokRokScaleFactor);
    /*@>1437b8c*/Model_Target_B./*@>14455f3*/Multiply_bg/*@>1417bd8*/[/*@>1417bdb*/rtb_isImpulsive_c] = -/*@<1425339*/updatedLokRokScaleFactor;
}
/*@>13ec743*/for (/*@>1444201*/rtb_isImpulsive_c = /*@>1444200*/0; /*@>144420b*/rtb_isImpulsive_c < /*@>1444209*/129; /*@>1444207*/rtb_isImpulsive_c/*@>1444431*/++) {
    /*@>1417bf1*/rtb_MathFunction1_e/*@>1417bf0*/[/*@>1417bf3*/rtb_isImpulsive_c] = /*@>142c6a8*/qhmath_div_f(/*@>1434856*/rtb_MathFunction1_e/*@>1434858*/[/*@>1434855*/rtb_isImpulsive_c], /*@>143485c*/rtb_Rxks/*@>143485e*/[/*@>143485b*/rtb_isImpulsive_c]/*@>141acf0*/ * /*@>1437b86*/Model_Target_B./*@>14455f0*/sf_Coeffs1stStage./*@>14455ed*/absRi/*@>1434864*/[/*@>1434861*/rtb_isImpulsive_c]/*@>141acef*/ + /*@>141acfb*/2.22044605E-16F);
}
/*  Bound the stretch coefficients within [0,1] */
/* '<S695>:1:17' Lstrki = min(1.0, max(0.0, Lstrki)); */
/* '<S695>:1:18' Rstrki = min(1.0, max(0.0, Rstrki)); */
/*@>10dfc7a*/for (/*@>14441f0*/i = /*@>14441ef*/0; /*@>14441fa*/i < /*@>14441f8*/129; /*@>14441f6*/i/*@>1444432*/++) {
    updatedLokRokScaleFactor/*@>13ec7e0*/ = /*@>142c6ac*/fminf(/*@>140d7c4*/1.0F, /*@>142c6aa*/fmaxf(/*@>140dbb5*/0.0F, /*@>1434868*/rtb_Add1_gg/*@>143486a*/[/*@>1434867*/i]));
    rtb_Add1_e3/*@>10dfc99*/ = /*@>142c6ae*/fmaxf(/*@>14022ab*/0.0F, /*@>143486e*/rtb_MathFunction1_e/*@>1434870*/[/*@>143486d*/i]);
    /*@>1437ba4*/Model_Target_B./*@>14455fc*/Multiply_bg/*@>13f855f*/[/*@>1402afd*/i] = /*@>142c6b0*/fminf(/*@>140d7d4*/1.0F, rtb_Add1_e3);
    /*@>1417c09*/rtb_Add1_gg/*@>1417c08*/[/*@>1417c0b*/i] = rtb_Add1_e3;
    /*@>1437bc1*/Model_Target_B./*@>1445608*/Lin2_a/*@>1417c20*/[/*@>1417c23*/i] *= updatedLokRokScaleFactor;
}
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[254], "Output",5)
/* {S!d2902}MATLAB Function: '<S701>/MATLAB Function' incorporates:
 *  Constant: '<S669>/lsGain1'
 *  Constant: '<S669>/lsPole1'
 */
%if SLibCG_SystemFcnArgAccessed("Model_Target_MATLABFunction",254,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[143edfb*/",SLibCGIRGenReusableSysCall("Model_Target_MATLABFunction", ["%<_modelSS>", "/*@>1445d7a*/Model_Target_B./*@>1445d79*/Lin2_a", "/*@>1445d85*/0.90993F", "/*@>1445d8f*/0.0450350046F", "&/*@>1445d9b*/Model_Target_B./*@>1445d9a*/sf_MATLABFunction_k", "&/*@>1445da8*/Model_Target_DW./*@>1445da7*/sf_MATLABFunction_k"], 254, 8, 6, 5, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[254]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

%endif
/* {S!d2904}Product: '<S699>/Multiply1' incorporates:
 *  Math: '<S690>/Math Function2'
 *
 * About '<S690>/Math Function2':
 *  Operator: reciprocal
 */
/*@>13ec92e*/for (/*@>14441df*/rtb_isImpulsive_c = /*@>14441de*/0; /*@>14441e9*/rtb_isImpulsive_c < /*@>14441e7*/129; /*@>14441e5*/rtb_isImpulsive_c/*@>1444434*/++) {
    /*@>1437baa*/Model_Target_B./*@>14455ff*/instCPS_c/*@>1417c38*/[/*@>1417c3b*/rtb_isImpulsive_c] *= /*@>1437bb5*/Model_Target_B./*@>1445605*/sf_MATLABFunction_k./*@>1445602*/y/*@>1434876*/[/*@>1434873*/rtb_isImpulsive_c];
}
/* {E!d2904}End of Product: '<S699>/Multiply1' */

/* {S!d2906}Product: '<S700>/Multiply' incorporates:
 *  MATLAB Function: '<S671>/Normalize Stretch Coeffs'
 *  Math: '<S690>/Math Function1'
 *
 * About '<S690>/Math Function1':
 *  Operator: magnitude^2
 */
/*@>13ec97d*/for (/*@>14441ce*/rtb_isImpulsive_c = /*@>14441cd*/0; /*@>14441d8*/rtb_isImpulsive_c < /*@>14441d6*/129; /*@>14441d4*/rtb_isImpulsive_c/*@>1444436*/++) {
    /*@>1437bd9*/Model_Target_B./*@>1445611*/Lstrk_k/*@>1417c50*/[/*@>1417c53*/rtb_isImpulsive_c] *= /*@>1437be5*/Model_Target_B./*@>1445614*/Multiply_bg/*@>143488e*/[/*@>143488b*/rtb_isImpulsive_c];
}
/* {E!d2906}End of Product: '<S700>/Multiply' */
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[254], "Output",5)

/* {S!d2908}MATLAB Function: '<S703>/MATLAB Function' incorporates:
 *  Constant: '<S669>/lsGain1'
 *  Constant: '<S669>/lsPole1'
 */
%if SLibCG_SystemFcnArgAccessed("Model_Target_MATLABFunction",254,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[143edfc*/",SLibCGIRGenReusableSysCall("Model_Target_MATLABFunction", ["%<_modelSS>", "/*@>1445de6*/Model_Target_B./*@>1445de5*/Lstrk_k", "/*@>1445df1*/0.90993F", "/*@>1445dfb*/0.0450350046F", "&/*@>1445e07*/Model_Target_B./*@>1445e06*/sf_MATLABFunction_b", "&/*@>1445e14*/Model_Target_DW./*@>1445e13*/sf_MATLABFunction_b"], 254, 9, 6, 5, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[254]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

%endif
/* {S!d2910}Product: '<S700>/Multiply1' incorporates:
 *  Product: '<S725>/Divide'
 */
/*@>13ec9cd*/for (/*@>14441bd*/rtb_isImpulsive_c = /*@>14441bc*/0; /*@>14441c7*/rtb_isImpulsive_c < /*@>14441c5*/129; /*@>14441c3*/rtb_isImpulsive_c/*@>1444438*/++) {
    /*@>1437c0f*/Model_Target_B./*@>1445629*/Multiply_a/*@>1417c68*/[/*@>1417c6b*/rtb_isImpulsive_c] *= /*@>1437c1a*/Model_Target_B./*@>144562f*/sf_MATLABFunction_b./*@>144562c*/y/*@>1434894*/[/*@>1434891*/rtb_isImpulsive_c];
}
/* {E!d2910}End of Product: '<S700>/Multiply1' */
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[257], "Output",5)

/* {S!d2912}MATLAB Function: '<S671>/Update Steering Coeffs' */
%if SLibCG_SystemFcnArgAccessed("Model_Target_UpdateSteeringCoeffs",257,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[143edfd*/",SLibCGIRGenReusableSysCall("Model_Target_UpdateSteeringCoeffs", ["%<_modelSS>", "/*@>1445e5b*/Model_Target_B./*@>1445e5a*/instCPS_c", "/*@>1445e67*/Model_Target_B./*@>1445e66*/Multiply_a", "/*@>1445e73*/Model_Target_B./*@>1445e72*/Multiply1_o", "/*@>1445e7f*/Model_Target_B./*@>1445e7e*/Multiply1_a", "/*@>1445e8b*/Model_Target_B./*@>1445e8a*/Lxks_j", "/*@>1445e96*/rtb_Rxks", "&/*@>1445ea2*/Model_Target_B./*@>1445ea1*/sf_UpdateSteeringCoeffs"], 257, 0, 6, 5, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[257]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

%endif
/* {S!d2918}Product: '<S679>/|Lx|^2' incorporates:
 *  Math: '<S668>/Math Function'
 *  Math: '<S679>/Math Function'
 *
 * About '<S668>/Math Function':
 *  Operator: magnitude^2
 *
 * About '<S679>/Math Function':
 *  Operator: magnitude^2
 */
/*@>13e2293*/for (/*@>14441ac*/i = /*@>14441ab*/0; /*@>14441b6*/i < /*@>14441b4*/129; /*@>14441b2*/i/*@>144443a*/++) {
    /* {S!d2914}Math: '<S679>/Math Function'
 *
 * About '<S679>/Math Function':
 *  Operator: magnitude^2
 */
    /*@>1403e3b*/updatedLokRokScaleFactor/*@>1403e3d*/ = /*@>1437c3d*/Model_Target_B./*@>144563b*/sf_UpdateSteeringCoeffs./*@>1445638*/Lxk/*@>14348a0*/[/*@>143489d*/i];
    /* {S!d2916}Math: '<S668>/Math Function'
 *
 * About '<S668>/Math Function':
 *  Operator: magnitude^2
 */
    /*@>1403e60*/minXp/*@>1403e62*/ = /*@>1437c48*/Model_Target_B./*@>1445641*/sf_Coeffs1stStage./*@>144563e*/absLi/*@>14348a6*/[/*@>14348a3*/i];
    /*@>1437c4e*/Model_Target_B./*@>1445644*/Lin2_a/*@>13eca21*/[/*@>1402713*/i]/*@>13e227a*/ = /*@>140d813*/updatedLokRokScaleFactor/*@>140d811*/ * /*@>140d815*/updatedLokRokScaleFactor/*@>1403615*/ * (/*@>140d818*/minXp/*@>140d816*/ * /*@>140d81a*/minXp);
}
/* {E!d2918}End of Product: '<S679>/|Lx|^2' */
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[254], "Output",5)

/* {S!d2920}MATLAB Function: '<S682>/MATLAB Function' incorporates:
 *  Constant: '<S669>/lsGain2'
 *  Constant: '<S669>/lsPole2'
 */
%if SLibCG_SystemFcnArgAccessed("Model_Target_MATLABFunction",254,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[143edfe*/",SLibCGIRGenReusableSysCall("Model_Target_MATLABFunction", ["%<_modelSS>", "/*@>1445ee0*/Model_Target_B./*@>1445edf*/Lin2_a", "/*@>1445eeb*/0.324919701F", "/*@>1445ef5*/0.33754015F", "&/*@>1445f01*/Model_Target_B./*@>1445f00*/sf_MATLABFunction_eo", "&/*@>1445f0e*/Model_Target_DW./*@>1445f0d*/sf_MATLABFunction_eo"], 254, 2, 6, 5, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[254]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

%endif
/* {S!d2922}MATLAB Function: '<S668>/MATLAB Function' incorporates:
 *  Product: '<S679>/SPS*|Lx|^2'
 *  Product: '<S679>/|Lx|^2'
 *  Selector: '<S657>/Selector'
 *  Selector: '<S657>/Selector1'
 */
/*  New SPS is calculated and smoothed using Lx/Rx. This change ensures no */
/*  surround content generated when there is no phase difference between L/R */
/*  regardless of the magnitude difference. */
/*  The old SPS was calculated using Lin/Rin, and smoothed using Lx/Rx. */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 2/Decimated-Rate FDP/Fdp/FreqDomainProcessing/CalculateAndApplyCoefficients/DeciRate/Calculate coefficients/Smooth 2nd Stage/MATLAB Function': '<S680>:1' */
/* '<S680>:1:7' Lx = Lxks .* Lin; */
/*@>13ecaae*/for (/*@>144419b*/rtb_isImpulsive_c = /*@>144419a*/0; /*@>14441a5*/rtb_isImpulsive_c < /*@>14441a3*/129; /*@>14441a1*/rtb_isImpulsive_c/*@>144443b*/++) {
    /*@>1437c5a*/Model_Target_B./*@>1445647*/Lx/*@>13fbafa*/[/*@>1402c3e*/rtb_isImpulsive_c]./*@>144544c*/re/*@>13fbaff*/ = /*@>1437c65*/Model_Target_B./*@>144564d*/sf_UpdateSteeringCoeffs./*@>144564a*/Lxk/*@>14348ac*/[/*@>14348a9*/rtb_isImpulsive_c]/*@>140361d*/ * /*@>1437c6b*/Model_Target_B./*@>1445650*/y_o/*@>14348b2*/[/*@>14348af*/rtb_isImpulsive_c].re;
    /*@>1437c77*/Model_Target_B./*@>1445653*/Lx/*@>13fbb0f*/[/*@>1402c4a*/rtb_isImpulsive_c]./*@>144544f*/im/*@>13fbb14*/ = /*@>1437c82*/Model_Target_B./*@>1445659*/sf_UpdateSteeringCoeffs./*@>1445656*/Lxk/*@>14348b8*/[/*@>14348b5*/rtb_isImpulsive_c]/*@>1403619*/ * /*@>1437c88*/Model_Target_B./*@>144565c*/y_o/*@>14348be*/[/*@>14348bb*/rtb_isImpulsive_c].im;
}
/* '<S680>:1:8' Rx = Rxks .* Rin; */
/*@>13ecb39*/for (/*@>144418a*/rtb_isImpulsive_c = /*@>1444189*/0; /*@>1444194*/rtb_isImpulsive_c < /*@>1444192*/129; /*@>1444190*/rtb_isImpulsive_c/*@>144443c*/++) {
    /*@>1437c8e*/Model_Target_B./*@>144565f*/Rx/*@>13fbb26*/[/*@>1402c57*/rtb_isImpulsive_c]./*@>1445452*/re/*@>13fbb2b*/ = /*@>1437c94*/Model_Target_B./*@>1445662*/y_o/*@>14348c6*/[/*@>14348c2*/rtb_isImpulsive_c/*@>14348c0*/ + /*@>14348c3*/129].re/*@>1403625*/ * /*@>1437c9f*/Model_Target_B./*@>1445668*/sf_UpdateSteeringCoeffs./*@>1445665*/Rxk/*@>14348cc*/[/*@>14348c9*/rtb_isImpulsive_c];
    /*@>1437ca5*/Model_Target_B./*@>144566b*/Rx/*@>13fbb3d*/[/*@>1402c64*/rtb_isImpulsive_c]./*@>1445455*/im/*@>13fbb42*/ = /*@>1437cab*/Model_Target_B./*@>144566e*/y_o/*@>14348d4*/[/*@>14348d0*/rtb_isImpulsive_c/*@>14348ce*/ + /*@>14348d1*/129].im/*@>1403621*/ * /*@>1437cb6*/Model_Target_B./*@>1445674*/sf_UpdateSteeringCoeffs./*@>1445671*/Rxk/*@>14348da*/[/*@>14348d7*/rtb_isImpulsive_c];
}
/*  Surround Phase Selectivity */
/*  SPS = |Lx - Rx|/(|Lx| + |Rx|) */
/* '<S680>:1:12' SPS = abs(Lx - Rx) ./ (abs(Lx) + abs(Rx) + single(eps)); */
/*@>13e22b6*/for (/*@>1444179*/i = /*@>1444178*/0; /*@>1444183*/i < /*@>1444181*/129; /*@>144417f*/i/*@>144443d*/++) {
    updatedLokRokScaleFactor = /*@>1437cd4*/Model_Target_B./*@>144567d*/Rx/*@>14348e0*/[/*@>14348dd*/i].re;
    minXp = /*@>1437ce0*/Model_Target_B./*@>1445680*/Rx/*@>14348e6*/[/*@>14348e3*/i].im;
    maxXp = /*@>1437ce6*/Model_Target_B./*@>1445683*/Lx/*@>14348ec*/[/*@>14348e9*/i].re;
    Lx_im = /*@>1437cec*/Model_Target_B./*@>1445686*/Lx/*@>14348f2*/[/*@>14348ef*/i].im;
    updatedLokRokScaleFactor/*@>13ecca2*/ = /*@>142c6c0*/qhmath_div_f(/*@>142c6ba*/qhmath_hypot_f(maxXp/*@>140dbe9*/ - updatedLokRokScaleFactor, Lx_im/*@>140dbee*/ - minXp), (/*@>142c6bc*/qhmath_hypot_f(maxXp, Lx_im)/*@>13ecc8f*/ + /*@>142c6be*/qhmath_hypot_f(updatedLokRokScaleFactor, minXp))/*@>13ecc8e*/ + /*@>1402547*/2.22044605E-16F);
    /*@>1437d1f*/Model_Target_B./*@>144569e*/Lstrk_k/*@>13f861a*/[/*@>1402b51*/i] = updatedLokRokScaleFactor;
    /*@>1437d25*/Model_Target_B./*@>14456a1*/Lin2_a/*@>1417c80*/[/*@>1417c83*/i] *= updatedLokRokScaleFactor;
}
/* {E!d2922}End of MATLAB Function: '<S668>/MATLAB Function' */
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[254], "Output",5)

/* {S!d2924}MATLAB Function: '<S683>/MATLAB Function' incorporates:
 *  Constant: '<S669>/lsGain2'
 *  Constant: '<S669>/lsPole2'
 */
%if SLibCG_SystemFcnArgAccessed("Model_Target_MATLABFunction",254,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[143edff*/",SLibCGIRGenReusableSysCall("Model_Target_MATLABFunction", ["%<_modelSS>", "/*@>1445f4c*/Model_Target_B./*@>1445f4b*/Lin2_a", "/*@>1445f57*/0.324919701F", "/*@>1445f61*/0.33754015F", "&/*@>1445f6d*/Model_Target_B./*@>1445f6c*/sf_MATLABFunction_d", "&/*@>1445f7a*/Model_Target_DW./*@>1445f79*/sf_MATLABFunction_d"], 254, 3, 6, 5, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[254]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

%endif
/* {S!d2926}Product: '<S668>/Multiply' incorporates:
 *  Constant: '<S679>/Constant1'
 *  Math: '<S679>/Math Function1'
 *  Product: '<S679>/Multiply'
 *  Sum: '<S679>/Add'
 *
 * About '<S679>/Math Function1':
 *  Operator: reciprocal
 */
/*@>13e22e5*/for (/*@>1444168*/i = /*@>1444167*/0; /*@>1444172*/i < /*@>1444170*/129; /*@>144416e*/i/*@>144443f*/++) {
    /*@>1437cf8*/Model_Target_B./*@>1445689*/Multiply_a/*@>13ecdc2*/[/*@>1402731*/i]/*@>13e22c4*/ = /*@>142c6c4*/qhmath_div_f(/*@>140d856*/1.0F, /*@>1437d03*/Model_Target_B./*@>144568f*/sf_MATLABFunction_eo./*@>144568c*/y/*@>14348f8*/[/*@>14348f5*/i]/*@>140dc03*/ + /*@>140dc09*/2.22044605E-16F)/*@>140363a*/ * /*@>1437d0e*/Model_Target_B./*@>1445695*/sf_MATLABFunction_d./*@>1445692*/y/*@>14348fe*/[/*@>14348fb*/i]/*@>1403636*/ * /*@>1437d19*/Model_Target_B./*@>144569b*/sf_UpdateSteeringCoeffs./*@>1445698*/Lxk/*@>1434904*/[/*@>1434901*/i];
}
/* {E!d2926}End of Product: '<S668>/Multiply' */

/* {S!d2932}Product: '<S681>/|Rx|^2' incorporates:
 *  Math: '<S668>/Math Function1'
 *  Math: '<S681>/Math Function'
 *
 * About '<S668>/Math Function1':
 *  Operator: magnitude^2
 *
 * About '<S681>/Math Function':
 *  Operator: magnitude^2
 */
/*@>13e230c*/for (/*@>1444157*/i = /*@>1444156*/0; /*@>1444161*/i < /*@>144415f*/129; /*@>144415d*/i/*@>1444440*/++) {
    /* {S!d2928}Math: '<S681>/Math Function'
 *
 * About '<S681>/Math Function':
 *  Operator: magnitude^2
 */
    /*@>1403ea9*/updatedLokRokScaleFactor/*@>1403eab*/ = /*@>1437d42*/Model_Target_B./*@>14456ad*/sf_UpdateSteeringCoeffs./*@>14456aa*/Rxk/*@>1434910*/[/*@>143490d*/i];
    /* {S!d2930}Math: '<S668>/Math Function1'
 *
 * About '<S668>/Math Function1':
 *  Operator: magnitude^2
 */
    /*@>1403ece*/minXp/*@>1403ed0*/ = /*@>1437d4d*/Model_Target_B./*@>14456b3*/sf_Coeffs1stStage./*@>14456b0*/absRi/*@>1434916*/[/*@>1434913*/i];
    /*@>1437d53*/Model_Target_B./*@>14456b6*/Lin2_a/*@>13ece14*/[/*@>140273d*/i]/*@>13e22f3*/ = /*@>140d862*/updatedLokRokScaleFactor/*@>140d860*/ * /*@>140d864*/updatedLokRokScaleFactor/*@>140363e*/ * (/*@>140d867*/minXp/*@>140d865*/ * /*@>140d869*/minXp);
}
/* {E!d2932}End of Product: '<S681>/|Rx|^2' */
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[254], "Output",5)

/* {S!d2934}MATLAB Function: '<S687>/MATLAB Function' incorporates:
 *  Constant: '<S669>/lsGain2'
 *  Constant: '<S669>/lsPole2'
 */
%if SLibCG_SystemFcnArgAccessed("Model_Target_MATLABFunction",254,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[143ee00*/",SLibCGIRGenReusableSysCall("Model_Target_MATLABFunction", ["%<_modelSS>", "/*@>1445fb8*/Model_Target_B./*@>1445fb7*/Lin2_a", "/*@>1445fc3*/0.324919701F", "/*@>1445fcd*/0.33754015F", "&/*@>1445fd9*/Model_Target_B./*@>1445fd8*/sf_MATLABFunction_ea", "&/*@>1445fe6*/Model_Target_DW./*@>1445fe5*/sf_MATLABFunction_ea"], 254, 5, 6, 5, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[254]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

%endif
/* {S!d2936}Product: '<S681>/SPS*|Rx|^2' incorporates:
 *  Product: '<S681>/|Rx|^2'
 */
/*@>13ece65*/for (/*@>1444146*/rtb_isImpulsive_c = /*@>1444145*/0; /*@>1444150*/rtb_isImpulsive_c < /*@>144414e*/129; /*@>144414c*/rtb_isImpulsive_c/*@>1444441*/++) {
    /*@>1437d65*/Model_Target_B./*@>14456bf*/Lin2_a/*@>1417c98*/[/*@>1417c9b*/rtb_isImpulsive_c] *= /*@>1437d71*/Model_Target_B./*@>14456c2*/Lstrk_k/*@>1434922*/[/*@>143491f*/rtb_isImpulsive_c];
}
/* {E!d2936}End of Product: '<S681>/SPS*|Rx|^2' */
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[254], "Output",5)

/* {S!d2938}MATLAB Function: '<S686>/MATLAB Function' incorporates:
 *  Constant: '<S669>/lsGain2'
 *  Constant: '<S669>/lsPole2'
 */
%if SLibCG_SystemFcnArgAccessed("Model_Target_MATLABFunction",254,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[143ee01*/",SLibCGIRGenReusableSysCall("Model_Target_MATLABFunction", ["%<_modelSS>", "/*@>1446024*/Model_Target_B./*@>1446023*/Lin2_a", "/*@>144602f*/0.324919701F", "/*@>1446039*/0.33754015F", "&/*@>1446045*/Model_Target_B./*@>1446044*/sf_MATLABFunction_f", "&/*@>1446052*/Model_Target_DW./*@>1446051*/sf_MATLABFunction_f"], 254, 4, 6, 5, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[254]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

%endif
/* {S!d2940}Product: '<S668>/Multiply1' incorporates:
 *  Constant: '<S681>/Constant1'
 *  Math: '<S681>/Math Function1'
 *  Product: '<S681>/Multiply'
 *  Sum: '<S681>/Add'
 *
 * About '<S681>/Math Function1':
 *  Operator: reciprocal
 */
/*@>13e233b*/for (/*@>1444135*/i = /*@>1444134*/0; /*@>144413f*/i < /*@>144413d*/129; /*@>144413b*/i/*@>1444443*/++) {
    /*@>1437d7d*/Model_Target_B./*@>14456c5*/Lstrk_k/*@>13eced5*/[/*@>1402756*/i]/*@>13e231a*/ = /*@>142c6ca*/qhmath_div_f(/*@>140d884*/1.0F, /*@>1437d88*/Model_Target_B./*@>14456cb*/sf_MATLABFunction_ea./*@>14456c8*/y/*@>1434928*/[/*@>1434925*/i]/*@>140dc16*/ + /*@>140dc1c*/2.22044605E-16F)/*@>140364a*/ * /*@>1437d93*/Model_Target_B./*@>14456d1*/sf_MATLABFunction_f./*@>14456ce*/y/*@>143492e*/[/*@>143492b*/i]/*@>1403646*/ * /*@>1437d9e*/Model_Target_B./*@>14456d7*/sf_UpdateSteeringCoeffs./*@>14456d4*/Rxk/*@>1434934*/[/*@>1434931*/i];
}
/* {E!d2940}End of Product: '<S668>/Multiply1' */

/* {S!d2942}MATLAB Function: '<S661>/Apply coefficients' incorporates:
 *  Product: '<S668>/Multiply'
 *  Product: '<S668>/Multiply1'
 *  Selector: '<S657>/Selector'
 *  Selector: '<S657>/Selector1'
 */
/*  Left/Right only */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 2/Decimated-Rate FDP/Fdp/FreqDomainProcessing/CalculateAndApplyCoefficients/DeciRate/Apply coefficients': '<S662>:1' */
/* '<S662>:1:4' Lo = Lok.*L; */
/*@>13ecfdb*/for (/*@>1444124*/rtb_isImpulsive_c = /*@>1444123*/0; /*@>144412e*/rtb_isImpulsive_c < /*@>144412c*/129; /*@>144412a*/rtb_isImpulsive_c/*@>1444444*/++) {
    /*@>1437da4*/Model_Target_B./*@>14456da*/MatrixConcatenate_p/*@>13fbcf6*/[/*@>1402c98*/rtb_isImpulsive_c]./*@>1445470*/re/*@>13fbcf5*/ = /*@>1437daf*/Model_Target_B./*@>14456e0*/sf_UpdateSteeringCoeffs./*@>14456dd*/Lok/*@>143493a*/[/*@>1434937*/rtb_isImpulsive_c]/*@>1403652*/ * /*@>1437db5*/Model_Target_B./*@>14456e3*/y_o/*@>1434940*/[/*@>143493d*/rtb_isImpulsive_c].re;
    /*@>1437dbb*/Model_Target_B./*@>14456e6*/MatrixConcatenate_p/*@>13ecfc7*/[/*@>1402760*/rtb_isImpulsive_c]./*@>1445473*/im/*@>13ecfce*/ = /*@>1437dc6*/Model_Target_B./*@>14456ec*/sf_UpdateSteeringCoeffs./*@>14456e9*/Lok/*@>1434946*/[/*@>1434943*/rtb_isImpulsive_c]/*@>140364e*/ * /*@>1437dcc*/Model_Target_B./*@>14456ef*/y_o/*@>143494c*/[/*@>1434949*/rtb_isImpulsive_c].im;
}
/* '<S662>:1:5' Ro = Rok.*R; */
/*@>13ed0e3*/for (/*@>1444113*/rtb_isImpulsive_c = /*@>1444112*/0; /*@>144411d*/rtb_isImpulsive_c < /*@>144411b*/129; /*@>1444119*/rtb_isImpulsive_c/*@>1444445*/++) {
    /*@>1437dd2*/Model_Target_B./*@>14456f2*/MatrixConcatenate_p/*@>13fbd0d*/[/*@>1402ca5*/rtb_isImpulsive_c/*@>13fbd0f*/ + /*@>1402ca4*/129]./*@>1445476*/re/*@>13fbd0c*/ = /*@>1437dd8*/Model_Target_B./*@>14456f5*/y_o/*@>1434954*/[/*@>1434950*/rtb_isImpulsive_c/*@>143494e*/ + /*@>1434951*/129].re/*@>140365a*/ * /*@>1437de3*/Model_Target_B./*@>14456fb*/sf_UpdateSteeringCoeffs./*@>14456f8*/Rok/*@>143495a*/[/*@>1434957*/rtb_isImpulsive_c];
    /*@>1437de9*/Model_Target_B./*@>14456fe*/MatrixConcatenate_p/*@>13ed0cd*/[/*@>1402770*/rtb_isImpulsive_c/*@>13ed0d2*/ + /*@>140276f*/129]./*@>1445479*/im/*@>13ed0d6*/ = /*@>1437def*/Model_Target_B./*@>1445701*/y_o/*@>1434962*/[/*@>143495e*/rtb_isImpulsive_c/*@>143495c*/ + /*@>143495f*/129].im/*@>1403656*/ * /*@>1437dfa*/Model_Target_B./*@>1445707*/sf_UpdateSteeringCoeffs./*@>1445704*/Rok/*@>1434968*/[/*@>1434965*/rtb_isImpulsive_c];
}
/*  Left/Right surround */
/* '<S662>:1:8' Ls = Lsk.*L; */
/* '<S662>:1:9' Rs = Rsk.*R; */
/*@>13ed1eb*/for (/*@>1444102*/rtb_isImpulsive_c = /*@>1444101*/0; /*@>144410c*/rtb_isImpulsive_c < /*@>144410a*/129; /*@>1444108*/rtb_isImpulsive_c/*@>1444446*/++) {
    updatedLokRokScaleFactor = /*@>1437e00*/Model_Target_B./*@>144570a*/Lstrk_k/*@>143496e*/[/*@>143496b*/rtb_isImpulsive_c];
    rtb_Add1_e3 = /*@>1437e06*/Model_Target_B./*@>144570d*/Multiply_a/*@>1434974*/[/*@>1434971*/rtb_isImpulsive_c];
    /*@>1437e12*/Model_Target_B./*@>1445710*/MatrixConcatenate_p/*@>13fbd28*/[/*@>1402cb3*/rtb_isImpulsive_c/*@>13fbd2a*/ + /*@>1402cb2*/258]./*@>144547c*/re/*@>13fbd27*/ = rtb_Add1_e3/*@>140366a*/ * /*@>1437e18*/Model_Target_B./*@>1445713*/y_o/*@>143497a*/[/*@>1434977*/rtb_isImpulsive_c].re;
    /*@>1437e1e*/Model_Target_B./*@>1445716*/MatrixConcatenate_p/*@>13ed1d5*/[/*@>1402780*/rtb_isImpulsive_c/*@>13ed1da*/ + /*@>140277f*/258]./*@>144547f*/im/*@>13ed1de*/ = rtb_Add1_e3/*@>1403666*/ * /*@>1437e24*/Model_Target_B./*@>1445719*/y_o/*@>1434980*/[/*@>143497d*/rtb_isImpulsive_c].im;
    /*@>1437e2a*/Model_Target_B./*@>144571c*/MatrixConcatenate_p/*@>13fbd41*/[/*@>1402cc0*/rtb_isImpulsive_c/*@>13fbd43*/ + /*@>1402cbf*/387]./*@>1445482*/re/*@>13fbd40*/ = /*@>1437e30*/Model_Target_B./*@>144571f*/y_o/*@>1434988*/[/*@>1434984*/rtb_isImpulsive_c/*@>1434982*/ + /*@>1434985*/129].re/*@>1403662*/ * updatedLokRokScaleFactor;
    /*@>1437e47*/Model_Target_B./*@>144572b*/MatrixConcatenate_p/*@>13ed2dd*/[/*@>1402790*/rtb_isImpulsive_c/*@>13ed2e2*/ + /*@>140278f*/387]./*@>1445485*/im/*@>13ed2e6*/ = /*@>1437e4d*/Model_Target_B./*@>144572e*/y_o/*@>143499c*/[/*@>1434998*/rtb_isImpulsive_c/*@>1434996*/ + /*@>1434999*/129].im/*@>140365e*/ * updatedLokRokScaleFactor;
}
/*  Left/Right surround residual */
/* '<S662>:1:12' Lsr = (Lxk - Lsk) .*L ; */
/*@>13ed3c1*/for (/*@>14440f1*/rtb_isImpulsive_c = /*@>14440f0*/0; /*@>14440fb*/rtb_isImpulsive_c < /*@>14440f9*/129; /*@>14440f7*/rtb_isImpulsive_c/*@>1444447*/++) {
    /*@>1418da5*/rtb_Add1_e3/*@>1418da7*/ = /*@>1437e3b*/Model_Target_B./*@>1445725*/sf_UpdateSteeringCoeffs./*@>1445722*/Lxk/*@>143498e*/[/*@>143498b*/rtb_isImpulsive_c]/*@>13fbd62*/ - /*@>1437e41*/Model_Target_B./*@>1445728*/Multiply_a/*@>1434994*/[/*@>1434991*/rtb_isImpulsive_c];
    /*@>1437e59*/Model_Target_B./*@>1445731*/Lx/*@>13fbd5c*/[/*@>1402ccd*/rtb_isImpulsive_c]./*@>1445488*/re/*@>13fbd5b*/ = /*@>1418da9*/rtb_Add1_e3/*@>1403672*/ * /*@>1437e5f*/Model_Target_B./*@>1445734*/y_o/*@>14349a2*/[/*@>143499f*/rtb_isImpulsive_c].re;
    /*@>1437e65*/Model_Target_B./*@>1445737*/Lx/*@>13ed3b3*/[/*@>140279e*/rtb_isImpulsive_c]./*@>144548b*/im/*@>13ed3b4*/ = rtb_Add1_e3/*@>140366e*/ * /*@>1437e6b*/Model_Target_B./*@>144573a*/y_o/*@>14349a8*/[/*@>14349a5*/rtb_isImpulsive_c].im;
}
/* '<S662>:1:13' Rsr = (Rxk - Rsk) .*R; */
/*@>13ed48f*/for (/*@>14440e0*/rtb_isImpulsive_c = /*@>14440df*/0; /*@>14440ea*/rtb_isImpulsive_c < /*@>14440e8*/129; /*@>14440e6*/rtb_isImpulsive_c/*@>1444448*/++) {
    /*@>1418db5*/rtb_Add1_e3/*@>1418db7*/ = /*@>1437e76*/Model_Target_B./*@>1445740*/sf_UpdateSteeringCoeffs./*@>144573d*/Rxk/*@>14349ae*/[/*@>14349ab*/rtb_isImpulsive_c]/*@>13fbd7f*/ - /*@>1437e7c*/Model_Target_B./*@>1445743*/Lstrk_k/*@>14349b4*/[/*@>14349b1*/rtb_isImpulsive_c];
    /*@>1437e82*/Model_Target_B./*@>1445746*/Rx/*@>13fbd79*/[/*@>1402cdd*/rtb_isImpulsive_c]./*@>144548e*/re/*@>13fbd78*/ = /*@>1437e88*/Model_Target_B./*@>1445749*/y_o/*@>14349bc*/[/*@>14349b8*/rtb_isImpulsive_c/*@>14349b6*/ + /*@>14349b9*/129].re/*@>140367a*/ * /*@>1418db9*/rtb_Add1_e3;
    /*@>1437e94*/Model_Target_B./*@>144574c*/Rx/*@>13ed481*/[/*@>14027b3*/rtb_isImpulsive_c]./*@>1445491*/im/*@>13ed482*/ = /*@>1437e9a*/Model_Target_B./*@>144574f*/y_o/*@>14349c4*/[/*@>14349c0*/rtb_isImpulsive_c/*@>14349be*/ + /*@>14349c1*/129].im/*@>1403676*/ * rtb_Add1_e3;
}
/* {E!d2942}End of MATLAB Function: '<S661>/Apply coefficients' */

/* {S!d2944}Product: '<S715>/Divide' incorporates:
 *  Constant: '<S715>/Constant'
 *  Constant: '<S715>/Constant1'
 *  Product: '<S726>/Divide'
 *  Sum: '<S715>/Minus'
 */
/*@>1418dd5*/Lx_im/*@>1418dd7*/ = (/*@>1402a19*/1.0F/*@>13d2d98*/ - %<SLibCG_DumpSSCode("/*@[143f281*/",(SLibCG_SE(SLibCG_BOCSC(299, 1, "", -1, "", 0))),"/*@]*/")>)/*@>140354c*/ * /*@>1402bff*/0.5F;
/* {S!d2946}Sum: '<S716>/Matrix Sum' */
/*@>1402426*/minXp/*@>10dec09*/ = /*@>1402425*/-0.0F;
/*@>13e2359*/for (/*@>14440cf*/i = /*@>14440ce*/0; /*@>14440d9*/i < /*@>14440d7*/129; /*@>14440d5*/i/*@>1444449*/++) {
    /* {S!d2948}Math: '<S660>/Math Function' incorporates:
 *  Math: '<S660>/Math Function1'
 *  Math: '<S690>/Math Function'
 *  Math: '<S690>/Math Function1'
 *  Selector: '<S657>/Selector'
 *  Selector: '<S657>/Selector1'
 *
 * About '<S660>/Math Function':
 *  Operator: magnitude^2
 *
 * About '<S660>/Math Function1':
 *  Operator: magnitude^2
 *
 * About '<S690>/Math Function':
 *  Operator: magnitude^2
 *
 * About '<S690>/Math Function1':
 *  Operator: magnitude^2
 */
    /*@>142fc9c*/rtb_y_o_0/*@>142fca3*/ = &/*@>1437ea6*/Model_Target_B./*@>1445752*/Lx/*@>142fca2*/[/*@>142fc9f*/i];
    /* {S!d2950}Math: '<S660>/Math Function'
 *
 * About '<S660>/Math Function':
 *  Operator: magnitude^2
 */
    /*@>1437eac*/Model_Target_B./*@>1445755*/MathFunction_l/*@>13ed4c5*/[/*@>14027be*/i]/*@>13e2349*/ = /*@>142fcc6*/rtb_y_o_0->re/*@>140d88e*/ * /*@>142fcc9*/rtb_y_o_0->re/*@>140d88d*/ + /*@>142fccc*/rtb_y_o_0->im/*@>140d897*/ * /*@>142fccf*/rtb_y_o_0->im;
    /* {S!d2952}Sum: '<S715>/Add1' incorporates:
 *  Delay: '<S715>/Delay'
 *  Delay: '<S715>/Delay1'
 *  Math: '<S660>/Math Function'
 *  Product: '<S715>/Divide'
 *  Product: '<S715>/Multiply'
 *  Product: '<S715>/Multiply1'
 *  Sum: '<S715>/Add'
 *
 * About '<S660>/Math Function':
 *  Operator: magnitude^2
 */
    /*@>1437eb2*/Model_Target_B./*@>1445758*/Lstrk_k/*@>13ed537*/[/*@>14027ce*/i]/*@>13e2367*/ = (/*@>1437eb8*/Model_Target_B./*@>144575b*/MathFunction_l/*@>14349ca*/[/*@>14349c7*/i]/*@>13e2370*/ + /*@>14389d5*/Model_Target_DW./*@>144586c*/Delay_DSTATE_mg/*@>14349d0*/[/*@>14349cd*/i])/*@>140367e*/ * /*@>141ac4f*/Lx_im/*@>13e236e*/ + /*@>14389db*/Model_Target_DW./*@>144586f*/Delay1_DSTATE_g/*@>14349d6*/[/*@>14349d3*/i]/*@>1403682*/ * %<SLibCG_DumpSSCode("/*@[143f14f*/",(SLibCG_SE(SLibCG_BOCSC(299, 1, "", -1, "", 0))),"/*@]*/")>;
    /* {S!d2954}Sum: '<S716>/Matrix Sum' incorporates:
 *  Math: '<S660>/Math Function'
 *
 * About '<S660>/Math Function':
 *  Operator: magnitude^2
 */
    /*@>1402421*/minXp/*@>144444a*/ += /*@>1437ebe*/Model_Target_B./*@>144575e*/MathFunction_l/*@>14349dc*/[/*@>14349d9*/i];
}
/* {S!d2956}Sum: '<S719>/Sum2' incorporates:
 *  Constant: '<S719>/Constant'
 *  Gain: '<S719>/Gain'
 *  Math: '<S719>/log10'
 *  Sum: '<S719>/Sum1'
 *
 * About '<S719>/log10':
 *  Operator: log10
 */
/*@>1402260*/updatedLokRokScaleFactor/*@>1104eb0*/ = /*@>142c6cc*/qhmath_log10_f(/*@>1402450*/minXp/*@>13d5ea9*/ + /*@>1402a1b*/2.22044605E-16F)/*@>1403548*/ * /*@>1402a1a*/10.0F;
/* {S!d2958}MATLAB Function: '<S716>/Detect Impulse' incorporates:
 *  Delay: '<S716>/Delay'
 *  Sum: '<S716>/Add1'
 */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 2/Decimated-Rate FDP/Fdp/FreqDomainProcessing/Reverb Extractions/Left Reverb Extraction/Compute PSD/Impulse Detector/Detect Impulse': '<S718>:1' */
/* '<S718>:1:5' if isempty(counter) */
/* '<S718>:1:6' if isempty(state) */
/* '<S718>:1:8' if (EnergyDifference > DetectImpulseThreshold) */
/*@>10dfe3d*/if (/*@>1402430*/updatedLokRokScaleFactor/*@>13d2dd0*/ - /*@>14389e1*/Model_Target_DW./*@>1445872*/Delay_DSTATE_nr/*@>10dfe39*/ > /*@>1402282*/6.0F) {
    /* '<S718>:1:9' isImpulsive = 1; */
    /*@>1402296*/rtb_isImpulsive_c/*@>10dfe2f*/ = /*@>1443f53*/1;
    /* '<S718>:1:10' counter = 0; */
    /*@>14389f3*/Model_Target_DW./*@>144587b*/counter_p/*@>10dfe30*/ = /*@>1402292*/0.0;
} else /*@>10dfe40*/if ((/*@>14389e7*/Model_Target_DW./*@>1445875*/counter_p/*@>10dfe3a*/ < /*@>1402281*/Model_Target_MaxValueOfCounterForDetectingImpulse)/*@>10dfe65*/ && (/*@>14389ed*/Model_Target_DW./*@>1445878*/state_e/*@>10dfe3b*/ == /*@>1402298*/1.0)) {
    /* '<S718>:1:11' elseif (counter < MaxValueOfCounterForDetectingImpulse) && (state == 1) */
    /* '<S718>:1:12' isImpulsive = 1; */
    /*@>140228d*/rtb_isImpulsive_c/*@>10dfe33*/ = /*@>1443f59*/1;
    /* '<S718>:1:13' counter = counter + 1; */
    /*@>14389f9*/Model_Target_DW./*@>144587e*/counter_p/*@>1444464*/++;
} else {
    /* '<S718>:1:14' else */
    /* '<S718>:1:15' isImpulsive = 0; */
    /*@>1402290*/rtb_isImpulsive_c/*@>10dfe36*/ = /*@>1443f56*/0;
}
/* '<S718>:1:17' state = isImpulsive; */
/*@>1438a05*/Model_Target_DW./*@>1445881*/state_e/*@>10dfe38*/ = /*@>1402285*/rtb_isImpulsive_c;
/* {E!d2958}End of MATLAB Function: '<S716>/Detect Impulse' */

/* {S!d2960}Product: '<S717>/Divide' incorporates:
 *  Constant: '<S717>/Constant'
 *  Constant: '<S717>/Constant1'
 *  Product: '<S728>/Divide'
 *  Sum: '<S717>/Minus'
 */
/*@>1418e15*/minXp_tmp/*@>1418e17*/ = (/*@>1402a1c*/1.0F/*@>13d2dd6*/ - %<SLibCG_DumpSSCode("/*@[143f29d*/",(SLibCG_SE(SLibCG_BOCSC(300, 1, "", -1, "", 0))),"/*@]*/")>)/*@>1403544*/ * /*@>1402c00*/0.5F;
/* {S!d2962}Sum: '<S717>/Add1' incorporates:
 *  Delay: '<S717>/Delay'
 *  Delay: '<S717>/Delay1'
 *  Math: '<S660>/Math Function'
 *  Product: '<S717>/Divide'
 *  Product: '<S717>/Multiply'
 *  Product: '<S717>/Multiply1'
 *  Sum: '<S717>/Add'
 *
 * About '<S660>/Math Function':
 *  Operator: magnitude^2
 */
/*@>13e23b9*/for (/*@>14440be*/i = /*@>14440bd*/0; /*@>14440c8*/i < /*@>14440c6*/129; /*@>14440c4*/i/*@>144444b*/++) {
    /*@>1437eca*/Model_Target_B./*@>1445761*/Lin2_a/*@>13ed5e0*/[/*@>14027e2*/i]/*@>13e2397*/ = (/*@>1437ed0*/Model_Target_B./*@>1445764*/MathFunction_l/*@>14349e2*/[/*@>14349df*/i]/*@>13e23a0*/ + /*@>1438a0b*/Model_Target_DW./*@>1445884*/Delay_DSTATE_lq/*@>14349e8*/[/*@>14349e5*/i])/*@>1403686*/ * /*@>141ac51*/minXp_tmp/*@>13e239e*/ + /*@>1438a11*/Model_Target_DW./*@>1445887*/Delay1_DSTATE_ab/*@>14349ee*/[/*@>14349eb*/i]/*@>140368a*/ * %<SLibCG_DumpSSCode("/*@[143f16b*/",(SLibCG_SE(SLibCG_BOCSC(300, 1, "", -1, "", 0))),"/*@]*/")>;
}
/* {E!d2962}End of Sum: '<S717>/Add1' */

/* {S!d2964}Delay: '<S713>/Delay' incorporates:
 *  Sum: '<S715>/Add1'
 */
/*@>10df2d3*/if (%<SLibCG_DumpSSCode("/*@[143ee54*/",(SLibCG_SE(SLibCG_BOCSC(301, 1, "", -1, "", 0))),"/*@]*/")>/*@>10df26d*/ < /*@>14023c3*/1.0F) {
    /*@>142e1ae*/memcpy(&/*@>1437edc*/Model_Target_B./*@>1445767*/Multiply1_o/*@>1427ea2*/[/*@>1427e91*/0], &/*@>1437ee2*/Model_Target_B./*@>144576a*/Lstrk_k/*@>1427eaa*/[/*@>1427e9e*/0], /*@>1427ea0*/129U/*@>1427ead*/ * /*@>1427eac*/sizeof(real32_T));
} else {
    /*@>13fb4cf*/if (%<SLibCG_DumpSSCode("/*@[143eefc*/",(SLibCG_SE(SLibCG_BOCSC(301, 1, "", -1, "", 0))),"/*@]*/")>/*@>1403527*/ > /*@>1403b5a*/645.0F) {
        /*@>1402c0c*/i/*@>13fb4d2*/ = /*@>1443f5c*/645;
    } else {
        /*@>14023be*/i/*@>10df278*/ = /*@>140927f*/(int32_T)/*@>1403522*/(uint32_T)/*@>142c6d0*/fmodf(/*@>142c6ce*/truncf(%<SLibCG_DumpSSCode("/*@[143f0fb*/",(SLibCG_BOCSC(301, 1, "", -1, "", 0)),"/*@]*/")>), /*@>140d8ab*/4.2949673E+9F);
    }
/*@>13efebf*/    for (/*@>14440ad*/MedusaFdpDeciRateRfftRfftInput_tmp = /*@>14440ac*/0; /*@>14440b7*/MedusaFdpDeciRateRfftRfftInput_tmp < /*@>14440b5*/129; /*@>14440b3*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>1444463*/++) {
        /*@>10df2c6*/if (/*@>1409290*/(uint32_T)/*@>14023b5*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>140353f*/ < /*@>1409292*/(uint32_T)/*@>14023b3*/i) {
            /*@>1437f0c*/Model_Target_B./*@>1445779*/Multiply1_o/*@>13ed75d*/[/*@>1402806*/MedusaFdpDeciRateRfftRfftInput_tmp]/*@>10df2b0*/ = /*@>1438a17*/Model_Target_DW./*@>144588a*/MedusaDRspumLPxxFast_d/*@>1434a02*/[(/*@>14349fc*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>14349fa*/ - /*@>14349fe*/i)/*@>14349f9*/ + /*@>14349ff*/645];
        } else {
            /*@>1437f00*/Model_Target_B./*@>1445773*/Multiply1_o/*@>13ed674*/[/*@>14027f4*/MedusaFdpDeciRateRfftRfftInput_tmp]/*@>10df2c4*/ = /*@>1437f06*/Model_Target_B./*@>1445776*/Lstrk_k/*@>14349f7*/[/*@>14349f2*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>14349f0*/ - /*@>14349f4*/i];
        }
    }
}
/* {E!d2964}End of Delay: '<S713>/Delay' */

/* {S!d2966}Delay: '<S713>/Delay1' incorporates:
 *  Sum: '<S717>/Add1'
 */
/*@>10df349*/if (%<SLibCG_DumpSSCode("/*@[143ee70*/",(SLibCG_SE(SLibCG_BOCSC(301, 1, "", -1, "", 0))),"/*@]*/")>/*@>10df2e3*/ < /*@>14023af*/1.0F) {
    /*@>142e1b0*/memcpy(&/*@>1437ef4*/Model_Target_B./*@>144576d*/Multiply1_a/*@>1427e13*/[/*@>1427e02*/0], &/*@>1437efa*/Model_Target_B./*@>1445770*/Lin2_a/*@>1427e1b*/[/*@>1427e0f*/0], /*@>1427e11*/129U/*@>1427e1e*/ * /*@>1427e1d*/sizeof(real32_T));
} else {
    /*@>13fb4d4*/if (%<SLibCG_DumpSSCode("/*@[143ef18*/",(SLibCG_SE(SLibCG_BOCSC(301, 1, "", -1, "", 0))),"/*@]*/")>/*@>14034df*/ > /*@>1403b70*/645.0F) {
        /*@>1402c0e*/i/*@>13fb4d7*/ = /*@>1443f5f*/645;
    } else {
        /*@>14023aa*/i/*@>10df2ee*/ = /*@>14092a8*/(int32_T)/*@>14034da*/(uint32_T)/*@>142c6d6*/fmodf(/*@>142c6d4*/truncf(%<SLibCG_DumpSSCode("/*@[143f0df*/",(SLibCG_BOCSC(301, 1, "", -1, "", 0)),"/*@]*/")>), /*@>140d8ba*/4.2949673E+9F);
    }
/*@>13efea5*/    for (/*@>144409c*/MedusaFdpDeciRateRfftRfftInput_tmp = /*@>144409b*/0; /*@>14440a6*/MedusaFdpDeciRateRfftRfftInput_tmp < /*@>14440a4*/129; /*@>14440a2*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>1444462*/++) {
        /*@>10df33c*/if (/*@>14092b7*/(uint32_T)/*@>14023a1*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>14034f7*/ < /*@>14092b9*/(uint32_T)/*@>140239f*/i) {
            /*@>1437f2a*/Model_Target_B./*@>1445782*/Multiply1_a/*@>13ed92d*/[/*@>1402822*/MedusaFdpDeciRateRfftRfftInput_tmp]/*@>10df326*/ = /*@>1438a1d*/Model_Target_DW./*@>144588d*/MedusaDRspumLPxxSlow_i/*@>1434a16*/[(/*@>1434a10*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>1434a0e*/ - /*@>1434a12*/i)/*@>1434a0d*/ + /*@>1434a13*/645];
        } else {
            /*@>1437f1e*/Model_Target_B./*@>144577c*/Multiply1_a/*@>13ed7ba*/[/*@>1402810*/MedusaFdpDeciRateRfftRfftInput_tmp]/*@>10df33a*/ = /*@>1437f24*/Model_Target_B./*@>144577f*/Lin2_a/*@>1434a0b*/[/*@>1434a06*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>1434a04*/ - /*@>1434a08*/i];
        }
    }
}
/* {E!d2966}End of Delay: '<S713>/Delay1' */

/* {S!d2968}Product: '<S722>/Divide' incorporates:
 *  Constant: '<S722>/Constant'
 *  Constant: '<S722>/Constant1'
 *  Product: '<S723>/Divide'
 *  Product: '<S733>/Divide'
 *  Product: '<S734>/Divide'
 *  Sum: '<S722>/Minus'
 */
/*@>1418dc5*/maxXp/*@>1418dc7*/ = (/*@>1402a20*/1.0F/*@>13d2e58*/ - %<SLibCG_DumpSSCode("/*@[143f265*/",(SLibCG_SE(SLibCG_BOCSC(302, 1, "", -1, "", 0))),"/*@]*/")>)/*@>14034b0*/ * /*@>1402c01*/0.5F;
/* {S!d2970}Sum: '<S727>/Matrix Sum' */
/*@>1402417*/minXp/*@>10ded1d*/ = /*@>1402416*/-0.0F;
/*@>13e2454*/for (/*@>144408b*/i = /*@>144408a*/0; /*@>1444095*/i < /*@>1444093*/129; /*@>1444091*/i/*@>144444c*/++) {
    /* {S!d2980}Switch: '<S711>/Switch' incorporates:
 *  Constant: '<S711>/Constant'
 *  Constant: '<S711>/Constant1'
 *  MinMax: '<S711>/Min'
 *  Product: '<S711>/Divide'
 *  Product: '<S711>/Multiply'
 *  Sum: '<S711>/Add'
 *  Switch: '<S713>/Switch'
 *  Switch: '<S713>/Switch1'
 */
    /*@>10df365*/if (%<SLibCG_DumpSSCode("/*@[143ee8c*/",(SLibCG_SE(SLibCG_BOCSC(303, 1, "", -1, "", 0))),"/*@]*/")>/*@>10df355*/ != /*@>140239c*/0.0F) {
        rtb_Add1_e3/*@>13e23ff*/ = 1.0F;
    } else {
        /*@>13fb504*/if (/*@>14024ed*/rtb_isImpulsive_c/*@>13e242d*/ > /*@>1402a1f*/0) {
            /* {S!d2972}Switch: '<S713>/Switch1' incorporates:
 *  Sum: '<S715>/Add1'
 */
            /*@>1402c24*/rtb_Add1_e3/*@>13fb507*/ = /*@>1437f3c*/Model_Target_B./*@>1445788*/Lstrk_k/*@>1434a22*/[/*@>1434a1f*/i];
            /* {S!d2974}Switch: '<S713>/Switch' incorporates:
 *  Delay: '<S713>/Delay'
 */
            /*@>1402c26*/rtb_R_f_re_tmp_0/*@>13fb50c*/ = /*@>1437f48*/Model_Target_B./*@>144578e*/Multiply1_o/*@>1434a2e*/[/*@>1434a2b*/i];
        } else {
            /* {S!d2976}Switch: '<S713>/Switch1' incorporates:
 *  Sum: '<S717>/Add1'
 */
            /*@>1402c14*/rtb_Add1_e3/*@>13fb4e7*/ = /*@>1437f36*/Model_Target_B./*@>1445785*/Lin2_a/*@>1434a1c*/[/*@>1434a19*/i];
            /* {S!d2978}Switch: '<S713>/Switch' incorporates:
 *  Delay: '<S713>/Delay1'
 */
            /*@>1402c18*/rtb_R_f_re_tmp_0/*@>13fb4ef*/ = /*@>1437f42*/Model_Target_B./*@>144578b*/Multiply1_a/*@>1434a28*/[/*@>1434a25*/i];
        }
        rtb_Add1_e3/*@>13e241b*/ = /*@>142c6dc*/fminf(/*@>1402a1d*/1.0F, /*@>142c6da*/qhmath_div_f(/*@>14024ec*/1.0F, /*@>1402c16*/rtb_Add1_e3/*@>13e2429*/ + /*@>1402a1e*/2.22044605E-16F)/*@>140369a*/ * (/*@>1402c1a*/rtb_R_f_re_tmp_0/*@>14036a7*/ * /*@>1437f5a*/Model_Target_B./*@>1445797*/Multiply));
    }
    /* {E!d2980}End of Switch: '<S711>/Switch' */

    /* {S!d2982}Product: '<S714>/Multiply' incorporates:
 *  Math: '<S660>/Math Function'
 *
 * About '<S660>/Math Function':
 *  Operator: magnitude^2
 */
    rtb_Add1_e3/*@>144444d*/ *= /*@>1437f4e*/Model_Target_B./*@>1445791*/MathFunction_l/*@>1434a34*/[/*@>1434a31*/i];
    /* {S!d2984}Sum: '<S722>/Add1' incorporates:
 *  Delay: '<S722>/Delay'
 *  Delay: '<S722>/Delay1'
 *  Product: '<S722>/Divide'
 *  Product: '<S722>/Multiply'
 *  Product: '<S722>/Multiply1'
 *  Sum: '<S722>/Add'
 */
    /*@>1437f54*/Model_Target_B./*@>1445794*/Multiply1_a/*@>1417d14*/[/*@>1417d17*/i] = (rtb_Add1_e3/*@>141adc5*/ + /*@>1438a23*/Model_Target_DW./*@>1445890*/Delay_DSTATE_h/*@>1434a3a*/[/*@>1434a37*/i])/*@>141adc4*/ * /*@>141adce*/maxXp/*@>141adc3*/ + /*@>1438a29*/Model_Target_DW./*@>1445893*/Delay1_DSTATE_e2/*@>1434a40*/[/*@>1434a3d*/i]/*@>141adcf*/ * %<SLibCG_DumpSSCode("/*@[143f22d*/",(SLibCG_SE(SLibCG_BOCSC(302, 1, "", -1, "", 0))),"/*@]*/")>;
    /* {S!d2986}Product: '<S714>/Multiply' */
    /*@>1437f60*/Model_Target_B./*@>144579a*/Multiply1_o/*@>1417d2c*/[/*@>1417d2f*/i] = rtb_Add1_e3;
    /* {S!d2988}Sum: '<S723>/Add1' incorporates:
 *  Delay: '<S723>/Delay'
 *  Delay: '<S723>/Delay1'
 *  Math: '<S660>/Math Function'
 *  Product: '<S723>/Multiply'
 *  Product: '<S723>/Multiply1'
 *  Sum: '<S723>/Add'
 *
 * About '<S660>/Math Function':
 *  Operator: magnitude^2
 */
    rtb_Add1_e3/*@>13e24b5*/ = (/*@>1437f66*/Model_Target_B./*@>144579d*/MathFunction_l/*@>1434a46*/[/*@>1434a43*/i]/*@>13e24be*/ + /*@>1438a41*/Model_Target_DW./*@>144589f*/Delay_DSTATE_ek/*@>1434a4c*/[/*@>1434a49*/i])/*@>14036c5*/ * maxXp/*@>13e24bc*/ + /*@>1438a47*/Model_Target_DW./*@>14458a2*/Delay1_DSTATE_o4/*@>1434a52*/[/*@>1434a4f*/i]/*@>14036c9*/ * %<SLibCG_DumpSSCode("/*@[143f187*/",(SLibCG_SE(SLibCG_BOCSC(302, 1, "", -1, "", 0))),"/*@]*/")>;
    /* {S!d2990}Product: '<S714>/Multiply1' incorporates:
 *  Constant: '<S714>/Constant'
 *  Product: '<S714>/Divide'
 *  Sum: '<S714>/Add'
 *  Sum: '<S714>/Subtract'
 *  Sum: '<S722>/Add1'
 */
    /*@>1418de5*/rtb_R_f_re_tmp/*@>1418de7*/ = /*@>142c6de*/qhmath_div_f(/*@>1437f6c*/Model_Target_B./*@>14457a0*/Multiply1_a/*@>1434a58*/[/*@>1434a55*/i], rtb_Add1_e3/*@>13fbc7c*/ + /*@>1402d79*/2.22044605E-16F);
    /*@>1418df5*/rtb_R_f_re_tmp_0/*@>1418df7*/ = /*@>1437f72*/Model_Target_B./*@>14457a3*/Lx/*@>1434a5e*/[/*@>1434a5b*/i].re;
    rtb_R_re/*@>13fbc72*/ = /*@>1418de9*/rtb_R_f_re_tmp/*@>14036b8*/ * /*@>1418df9*/rtb_R_f_re_tmp_0;
    /*@>1418e05*/rtb_R_f_im_tmp/*@>1418e07*/ = /*@>1437f78*/Model_Target_B./*@>14457a6*/Lx/*@>1434a64*/[/*@>1434a61*/i].im;
    rtb_R_f_re_tmp/*@>144444e*/ *= /*@>1418e09*/rtb_R_f_im_tmp;
    /* {S!d2992}Sum: '<S714>/Subtract' */
    /*@>1437f7e*/Model_Target_B./*@>14457a9*/MatrixConcatenate_p/*@>13fbc8e*/[/*@>1402c72*/i/*@>13fbc90*/ + /*@>1402c74*/516]./*@>1445458*/re/*@>13fbc8d*/ = rtb_R_f_re_tmp_0/*@>13fbc95*/ - rtb_R_re;
    /*@>1437f8a*/Model_Target_B./*@>14457ac*/MatrixConcatenate_p/*@>13edb2f*/[/*@>140284a*/i/*@>13edb34*/ + /*@>140284c*/516]./*@>144545b*/im/*@>13e2514*/ = rtb_R_f_im_tmp/*@>13e2522*/ - rtb_R_f_re_tmp;
    /* {S!d2994}SignalConversion generated from: '<S655>/Matrix Concatenate' */
    /*@>1437f90*/Model_Target_B./*@>14457af*/MatrixConcatenate_p/*@>13fbca7*/[/*@>1402c7b*/i/*@>13fbca9*/ + /*@>1402c7d*/645]./*@>144545e*/re/*@>13fbca6*/ = rtb_R_re;
    /*@>1437f96*/Model_Target_B./*@>14457b2*/MatrixConcatenate_p/*@>13edb68*/[/*@>140284f*/i/*@>13edb6d*/ + /*@>1402851*/645]./*@>1445461*/im/*@>13e2540*/ = rtb_R_f_re_tmp;
    /* {S!d2996}Math: '<S660>/Math Function1' incorporates:
 *  Math: '<S660>/Math Function'
 *  Math: '<S690>/Math Function'
 *  Math: '<S690>/Math Function1'
 *  Selector: '<S657>/Selector'
 *  Selector: '<S657>/Selector1'
 *
 * About '<S660>/Math Function1':
 *  Operator: magnitude^2
 *
 * About '<S660>/Math Function':
 *  Operator: magnitude^2
 *
 * About '<S690>/Math Function':
 *  Operator: magnitude^2
 *
 * About '<S690>/Math Function1':
 *  Operator: magnitude^2
 */
    /*@>142fca5*/rtb_y_o_0/*@>142fcac*/ = &/*@>1437fa2*/Model_Target_B./*@>14457b8*/Rx/*@>142fcab*/[/*@>142fca8*/i];
    /*@>1402852*/rtb_MathFunction1_e/*@>13edb9f*/[/*@>1402854*/i]/*@>13e2562*/ = /*@>142fcd2*/rtb_y_o_0->re/*@>140d8fb*/ * /*@>142fcd5*/rtb_y_o_0->re/*@>140d8fa*/ + /*@>142fcd8*/rtb_y_o_0->im/*@>140d904*/ * /*@>142fcdb*/rtb_y_o_0->im;
    /* {S!d2998}Sum: '<S723>/Add1' */
    /*@>1402bbf*/rtb_Add1_gg/*@>13f86e4*/[/*@>1402bc1*/i] = rtb_Add1_e3;
    /* {S!d3000}Sum: '<S726>/Add' incorporates:
 *  Math: '<S660>/Math Function1'
 *
 * About '<S660>/Math Function1':
 *  Operator: magnitude^2
 */
    rtb_Add1_e3 = /*@>1434a7a*/rtb_MathFunction1_e/*@>1434a7c*/[/*@>1434a79*/i];
    /* {S!d3002}Sum: '<S726>/Add1' incorporates:
 *  Delay: '<S726>/Delay'
 *  Delay: '<S726>/Delay1'
 *  Product: '<S726>/Multiply'
 *  Product: '<S726>/Multiply1'
 *  Sum: '<S726>/Add'
 */
    /*@>1437fc0*/Model_Target_B./*@>14457c1*/Multiply_bg/*@>13edc11*/[/*@>1402864*/i]/*@>13e2580*/ = (rtb_Add1_e3/*@>13e2589*/ + /*@>1438a71*/Model_Target_DW./*@>14458b4*/Delay_DSTATE_cg/*@>1434a82*/[/*@>1434a7f*/i])/*@>14036cd*/ * Lx_im/*@>13e2587*/ + /*@>1438a77*/Model_Target_DW./*@>14458b7*/Delay1_DSTATE_k/*@>1434a88*/[/*@>1434a85*/i]/*@>14036d1*/ * %<SLibCG_DumpSSCode("/*@[143f1a3*/",(SLibCG_SE(SLibCG_BOCSC(299, 1, "", -1, "", 0))),"/*@]*/")>;
    /* {S!d3004}Sum: '<S727>/Matrix Sum' */
    /*@>1402412*/minXp/*@>144444f*/ += rtb_Add1_e3;
}
/* {S!d3006}Sum: '<S730>/Sum2' incorporates:
 *  Constant: '<S730>/Constant'
 *  Gain: '<S730>/Gain'
 *  Math: '<S730>/log10'
 *  Sum: '<S730>/Sum1'
 *
 * About '<S730>/log10':
 *  Operator: log10
 */
/*@>140225e*/minXp/*@>1104f30*/ = /*@>142c6e0*/qhmath_log10_f(/*@>1402453*/minXp/*@>13d5edb*/ + /*@>1402a24*/2.22044605E-16F)/*@>14034a4*/ * /*@>1402a23*/10.0F;
/* {S!d3008}MATLAB Function: '<S727>/Detect Impulse' incorporates:
 *  Delay: '<S727>/Delay'
 *  Sum: '<S727>/Add1'
 */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 2/Decimated-Rate FDP/Fdp/FreqDomainProcessing/Reverb Extractions/Right Reverb Extraction/Compute PSD/Impulse Detector/Detect Impulse': '<S729>:1' */
/* '<S729>:1:5' if isempty(counter) */
/* '<S729>:1:6' if isempty(state) */
/* '<S729>:1:8' if (EnergyDifference > DetectImpulseThreshold) */
/*@>10dfe87*/if (/*@>140243c*/minXp/*@>13d2efd*/ - /*@>1438a2f*/Model_Target_DW./*@>1445896*/Delay_DSTATE_a/*@>10dfe83*/ > /*@>1402266*/6.0F) {
    /* '<S729>:1:9' isImpulsive = 1; */
    /*@>140227a*/rtb_isImpulsive_c/*@>10dfe79*/ = /*@>1443f62*/1;
    /* '<S729>:1:10' counter = 0; */
    /*@>1438a4d*/Model_Target_DW./*@>14458a5*/counter_n/*@>10dfe7a*/ = /*@>1402276*/0.0;
} else /*@>10dfe8a*/if ((/*@>1438a35*/Model_Target_DW./*@>1445899*/counter_n/*@>10dfe84*/ < /*@>1402265*/Model_Target_MaxValueOfCounterForDetectingImpulse)/*@>10dfeaf*/ && (/*@>1438a3b*/Model_Target_DW./*@>144589c*/state_o/*@>10dfe85*/ == /*@>140227c*/1.0)) {
    /* '<S729>:1:11' elseif (counter < MaxValueOfCounterForDetectingImpulse) && (state == 1) */
    /* '<S729>:1:12' isImpulsive = 1; */
    /*@>1402271*/rtb_isImpulsive_c/*@>10dfe7d*/ = /*@>1443f68*/1;
    /* '<S729>:1:13' counter = counter + 1; */
    /*@>1438a53*/Model_Target_DW./*@>14458a8*/counter_n/*@>1444461*/++;
} else {
    /* '<S729>:1:14' else */
    /* '<S729>:1:15' isImpulsive = 0; */
    /*@>1402274*/rtb_isImpulsive_c/*@>10dfe80*/ = /*@>1443f65*/0;
}
/* '<S729>:1:17' state = isImpulsive; */
/*@>1438a5f*/Model_Target_DW./*@>14458ab*/state_o/*@>10dfe82*/ = /*@>1402269*/rtb_isImpulsive_c;
/* {E!d3008}End of MATLAB Function: '<S727>/Detect Impulse' */

/* {S!d3010}Sum: '<S728>/Add1' incorporates:
 *  Delay: '<S728>/Delay'
 *  Delay: '<S728>/Delay1'
 *  Math: '<S660>/Math Function1'
 *  Product: '<S728>/Multiply'
 *  Product: '<S728>/Multiply1'
 *  Sum: '<S728>/Add'
 *
 * About '<S660>/Math Function1':
 *  Operator: magnitude^2
 */
/*@>13e25d2*/for (/*@>144407a*/i = /*@>1444079*/0; /*@>1444084*/i < /*@>1444082*/129; /*@>1444080*/i/*@>1444450*/++) {
    /*@>1437f9c*/Model_Target_B./*@>14457b5*/instCPS_c/*@>13edcb9*/[/*@>1402878*/i]/*@>13e25b0*/ = (/*@>1434a68*/rtb_MathFunction1_e/*@>1434a6a*/[/*@>1434a67*/i]/*@>13e25b9*/ + /*@>1438a65*/Model_Target_DW./*@>14458ae*/Delay_DSTATE_ks/*@>1434a70*/[/*@>1434a6d*/i])/*@>14036d5*/ * minXp_tmp/*@>13e25b7*/ + /*@>1438a6b*/Model_Target_DW./*@>14458b1*/Delay1_DSTATE_ep/*@>1434a76*/[/*@>1434a73*/i]/*@>14036d9*/ * %<SLibCG_DumpSSCode("/*@[143f1bf*/",(SLibCG_SE(SLibCG_BOCSC(300, 1, "", -1, "", 0))),"/*@]*/")>;
}
/* {E!d3010}End of Sum: '<S728>/Add1' */

/* {S!d3012}Delay: '<S724>/Delay' incorporates:
 *  Sum: '<S726>/Add1'
 */
/*@>10df4d9*/if (%<SLibCG_DumpSSCode("/*@[143eea8*/",(SLibCG_SE(SLibCG_BOCSC(301, 1, "", -1, "", 0))),"/*@]*/")>/*@>10df473*/ < /*@>1402398*/1.0F) {
    /*@>142e1b2*/memcpy(&/*@>1437fae*/Model_Target_B./*@>14457bb*/Lxks_j/*@>1427d5c*/[/*@>1427d4b*/0], &/*@>1437fb4*/Model_Target_B./*@>14457be*/Multiply_bg/*@>1427d64*/[/*@>1427d58*/0], /*@>1427d5a*/129U/*@>1427d67*/ * /*@>1427d66*/sizeof(real32_T));
} else {
    /*@>13fb4d9*/if (%<SLibCG_DumpSSCode("/*@[143ef34*/",(SLibCG_SE(SLibCG_BOCSC(301, 1, "", -1, "", 0))),"/*@]*/")>/*@>1403483*/ > /*@>1403b9d*/645.0F) {
        /*@>1402c10*/i/*@>13fb4dc*/ = /*@>1443f6b*/645;
    } else {
        /*@>1402393*/i/*@>10df47e*/ = /*@>1409371*/(int32_T)/*@>140347e*/(uint32_T)/*@>142c6e4*/fmodf(/*@>142c6e2*/truncf(%<SLibCG_DumpSSCode("/*@[143f0c3*/",(SLibCG_BOCSC(301, 1, "", -1, "", 0)),"/*@]*/")>), /*@>140d918*/4.2949673E+9F);
    }
/*@>13efe4f*/    for (/*@>1444069*/MedusaFdpDeciRateRfftRfftInput_tmp = /*@>1444068*/0; /*@>1444073*/MedusaFdpDeciRateRfftRfftInput_tmp < /*@>1444071*/129; /*@>144406f*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>1444460*/++) {
        /*@>10df4cc*/if (/*@>1409382*/(uint32_T)/*@>140238a*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>140349b*/ < /*@>1409384*/(uint32_T)/*@>1402388*/i) {
            /*@>1437fd8*/Model_Target_B./*@>14457cd*/Lxks_j/*@>13ede36*/[/*@>140289c*/MedusaFdpDeciRateRfftRfftInput_tmp]/*@>10df4b6*/ = /*@>1438a7d*/Model_Target_DW./*@>14458ba*/MedusaDRspumRPxxFast_e/*@>1434a9c*/[(/*@>1434a96*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>1434a94*/ - /*@>1434a98*/i)/*@>1434a93*/ + /*@>1434a99*/645];
        } else {
            /*@>1437fcc*/Model_Target_B./*@>14457c7*/Lxks_j/*@>13edd4d*/[/*@>140288a*/MedusaFdpDeciRateRfftRfftInput_tmp]/*@>10df4ca*/ = /*@>1437fd2*/Model_Target_B./*@>14457ca*/Multiply_bg/*@>1434a91*/[/*@>1434a8c*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>1434a8a*/ - /*@>1434a8e*/i];
        }
    }
}
/* {E!d3012}End of Delay: '<S724>/Delay' */

/* {S!d3014}Delay: '<S724>/Delay1' incorporates:
 *  Sum: '<S728>/Add1'
 */
/*@>10df54f*/if (%<SLibCG_DumpSSCode("/*@[143eec4*/",(SLibCG_SE(SLibCG_BOCSC(301, 1, "", -1, "", 0))),"/*@]*/")>/*@>10df4e9*/ < /*@>1402384*/1.0F) {
    /*@>142e1b4*/memcpy(&/*@>1427ccc*/rtb_Rxks/*@>1427ccd*/[/*@>1427cbc*/0], &/*@>1437fc6*/Model_Target_B./*@>14457c4*/instCPS_c/*@>1427cd5*/[/*@>1427cc9*/0], /*@>1427ccb*/129U/*@>1427cd8*/ * /*@>1427cd7*/sizeof(real32_T));
} else {
    /*@>13fb4de*/if (%<SLibCG_DumpSSCode("/*@[143ef50*/",(SLibCG_SE(SLibCG_BOCSC(301, 1, "", -1, "", 0))),"/*@]*/")>/*@>140343b*/ > /*@>1403bb3*/645.0F) {
        /*@>1402c12*/i/*@>13fb4e1*/ = /*@>1443f6e*/645;
    } else {
        /*@>140237f*/i/*@>10df4f4*/ = /*@>140939a*/(int32_T)/*@>1403436*/(uint32_T)/*@>142c6ea*/fmodf(/*@>142c6e8*/truncf(%<SLibCG_DumpSSCode("/*@[143f0a7*/",(SLibCG_BOCSC(301, 1, "", -1, "", 0)),"/*@]*/")>), /*@>140d927*/4.2949673E+9F);
    }
/*@>13efe35*/    for (/*@>1444058*/MedusaFdpDeciRateRfftRfftInput_tmp = /*@>1444057*/0; /*@>1444062*/MedusaFdpDeciRateRfftRfftInput_tmp < /*@>1444060*/129; /*@>144405e*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>144445f*/++) {
        /*@>10df542*/if (/*@>14093a9*/(uint32_T)/*@>1402376*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>1403453*/ < /*@>14093ab*/(uint32_T)/*@>1402374*/i) {
            /*@>14028ba*/rtb_Rxks/*@>13ee006*/[/*@>14028bc*/MedusaFdpDeciRateRfftRfftInput_tmp]/*@>10df52c*/ = /*@>1438a83*/Model_Target_DW./*@>14458bd*/MedusaDRspumRPxxSlow_i/*@>1434ab0*/[(/*@>1434aaa*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>1434aa8*/ - /*@>1434aac*/i)/*@>1434aa7*/ + /*@>1434aad*/645];
        } else {
            /*@>14028a4*/rtb_Rxks/*@>13ede93*/[/*@>14028a6*/MedusaFdpDeciRateRfftRfftInput_tmp]/*@>10df540*/ = /*@>1437fe4*/Model_Target_B./*@>14457d0*/instCPS_c/*@>1434aa5*/[/*@>1434aa0*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>1434a9e*/ - /*@>1434aa2*/i];
        }
    }
}
/* {E!d3014}End of Delay: '<S724>/Delay1' */
/*@>13e266d*/for (/*@>1444047*/i = /*@>1444046*/0; /*@>1444051*/i < /*@>144404f*/129; /*@>144404d*/i/*@>1444451*/++) {
    /* {S!d3024}Switch: '<S712>/Switch' incorporates:
 *  Constant: '<S712>/Constant'
 *  Constant: '<S712>/Constant1'
 *  MinMax: '<S712>/Min'
 *  Product: '<S712>/Divide'
 *  Product: '<S712>/Multiply'
 *  Sum: '<S712>/Add'
 *  Switch: '<S724>/Switch'
 *  Switch: '<S724>/Switch1'
 */
    /*@>10df56b*/if (%<SLibCG_DumpSSCode("/*@[143eee0*/",(SLibCG_SE(SLibCG_BOCSC(303, 1, "", -1, "", 0))),"/*@]*/")>/*@>10df55b*/ != /*@>1402371*/0.0F) {
        rtb_Add1_e3/*@>13e2618*/ = 1.0F;
    } else {
        /*@>13fb50e*/if (/*@>1402522*/rtb_isImpulsive_c/*@>13e2646*/ > /*@>1402a28*/0) {
            /* {S!d3016}Switch: '<S724>/Switch1' incorporates:
 *  Sum: '<S726>/Add1'
 */
            /*@>1402c28*/rtb_Add1_e3/*@>13fb511*/ = /*@>1437ff0*/Model_Target_B./*@>14457d6*/Multiply_bg/*@>1434abc*/[/*@>1434ab9*/i];
            /* {S!d3018}Switch: '<S724>/Switch' incorporates:
 *  Delay: '<S724>/Delay'
 */
            /*@>1402c2a*/rtb_R_f_re_tmp_0/*@>13fb516*/ = /*@>1437ff6*/Model_Target_B./*@>14457d9*/Lxks_j/*@>1434ac8*/[/*@>1434ac5*/i];
        } else {
            /* {S!d3020}Switch: '<S724>/Switch1' incorporates:
 *  Sum: '<S728>/Add1'
 */
            /*@>1402c1c*/rtb_Add1_e3/*@>13fb4f7*/ = /*@>1437fea*/Model_Target_B./*@>14457d3*/instCPS_c/*@>1434ab6*/[/*@>1434ab3*/i];
            /* {S!d3022}Switch: '<S724>/Switch' incorporates:
 *  Delay: '<S724>/Delay1'
 */
            /*@>1402c20*/rtb_R_f_re_tmp_0/*@>13fb4ff*/ = /*@>1434ac0*/rtb_Rxks/*@>1434ac2*/[/*@>1434abf*/i];
        }
        rtb_Add1_e3/*@>13e2634*/ = /*@>142c6f0*/fminf(/*@>1402a26*/1.0F, /*@>142c6ee*/qhmath_div_f(/*@>1402521*/1.0F, /*@>1402c1e*/rtb_Add1_e3/*@>13e2642*/ + /*@>1402a27*/2.22044605E-16F)/*@>14036e9*/ * (/*@>1402c22*/rtb_R_f_re_tmp_0/*@>14036f6*/ * /*@>1438002*/Model_Target_B./*@>14457df*/Multiply));
    }
    /* {S!d3026}Product: '<S725>/Multiply' incorporates:
 *  Math: '<S660>/Math Function1'
 *  Product: '<S725>/Divide'
 *
 * About '<S660>/Math Function1':
 *  Operator: magnitude^2
 */
    rtb_Add1_e3/*@>1444452*/ *= /*@>1434acc*/rtb_MathFunction1_e/*@>1434ace*/[/*@>1434acb*/i];
    /* {S!d3028}Switch: '<S712>/Switch' incorporates:
 *  Product: '<S725>/Divide'
 */
    /*@>1437ffc*/Model_Target_B./*@>14457dc*/Multiply_a/*@>13f872f*/[/*@>1402bdb*/i] = rtb_Add1_e3;
    /* {S!d3030}Sum: '<S733>/Add1' incorporates:
 *  Delay: '<S733>/Delay'
 *  Delay: '<S733>/Delay1'
 *  Product: '<S733>/Multiply'
 *  Product: '<S733>/Multiply1'
 *  Sum: '<S733>/Add'
 */
    /*@>1438008*/Model_Target_B./*@>14457e2*/Lxks_j/*@>1417d88*/[/*@>1417d8b*/i] = (rtb_Add1_e3/*@>141ae21*/ + /*@>1438a89*/Model_Target_DW./*@>14458c0*/Delay_DSTATE_ai/*@>1434ad4*/[/*@>1434ad1*/i])/*@>141ae20*/ * maxXp/*@>141ae1f*/ + /*@>1438a8f*/Model_Target_DW./*@>14458c3*/Delay1_DSTATE_i/*@>1434ada*/[/*@>1434ad7*/i]/*@>141ae2b*/ * %<SLibCG_DumpSSCode("/*@[143f249*/",(SLibCG_SE(SLibCG_BOCSC(302, 1, "", -1, "", 0))),"/*@]*/")>;
    /* {S!d3032}Sum: '<S734>/Add1' incorporates:
 *  Delay: '<S734>/Delay'
 *  Delay: '<S734>/Delay1'
 *  Math: '<S660>/Math Function1'
 *  Product: '<S734>/Multiply'
 *  Product: '<S734>/Multiply1'
 *  Sum: '<S734>/Add'
 *
 * About '<S660>/Math Function1':
 *  Operator: magnitude^2
 */
    Lx_im/*@>13e26ab*/ = (/*@>1434ade*/rtb_MathFunction1_e/*@>1434ae0*/[/*@>1434add*/i]/*@>13e26b4*/ + /*@>1438a95*/Model_Target_DW./*@>14458c6*/Delay_DSTATE_at/*@>1434ae6*/[/*@>1434ae3*/i])/*@>1403714*/ * maxXp/*@>13e26b2*/ + /*@>1438a9b*/Model_Target_DW./*@>14458c9*/Delay1_DSTATE_aa/*@>1434aec*/[/*@>1434ae9*/i]/*@>1403718*/ * %<SLibCG_DumpSSCode("/*@[143f1db*/",(SLibCG_SE(SLibCG_BOCSC(302, 1, "", -1, "", 0))),"/*@]*/")>;
    /* {S!d3034}Product: '<S725>/Multiply1' incorporates:
 *  Constant: '<S725>/Constant'
 *  Product: '<S725>/Divide'
 *  Sum: '<S725>/Add'
 *  Sum: '<S725>/Subtract'
 *  Sum: '<S733>/Add1'
 */
    /*@>1418e35*/rtb_R_f_re_tmp/*@>1418e37*/ = /*@>142c6f2*/qhmath_div_f(/*@>143800e*/Model_Target_B./*@>14457e5*/Lxks_j/*@>1434af2*/[/*@>1434aef*/i], Lx_im/*@>13fbcbe*/ + /*@>1402d7b*/2.22044605E-16F);
    /*@>1418e45*/rtb_R_f_re_tmp_0/*@>1418e47*/ = /*@>1438014*/Model_Target_B./*@>14457e8*/Rx/*@>1434af8*/[/*@>1434af5*/i].re;
    rtb_R_re/*@>13fbcb4*/ = /*@>1418e39*/rtb_R_f_re_tmp/*@>1403707*/ * /*@>1418e49*/rtb_R_f_re_tmp_0;
    /*@>1418e55*/rtb_R_f_im_tmp/*@>1418e57*/ = /*@>143801a*/Model_Target_B./*@>14457eb*/Rx/*@>1434afe*/[/*@>1434afb*/i].im;
    rtb_R_f_re_tmp/*@>1444453*/ *= /*@>1418e59*/rtb_R_f_im_tmp;
    /* {S!d3036}Sum: '<S725>/Subtract' */
    /*@>1438020*/Model_Target_B./*@>14457ee*/MatrixConcatenate_p/*@>13fbccf*/[/*@>1402c8a*/i/*@>13fbcd1*/ + /*@>1402c8c*/774]./*@>1445464*/re/*@>13fbcce*/ = rtb_R_f_re_tmp_0/*@>13fbcd6*/ - rtb_R_re;
    /*@>1438026*/Model_Target_B./*@>14457f1*/MatrixConcatenate_p/*@>13ee203*/[/*@>14028e4*/i/*@>13ee208*/ + /*@>14028e6*/774]./*@>1445467*/im/*@>13e270a*/ = rtb_R_f_im_tmp/*@>13e2718*/ - rtb_R_f_re_tmp;
    /* {S!d3038}SignalConversion generated from: '<S655>/Matrix Concatenate' */
    /*@>143802c*/Model_Target_B./*@>14457f4*/MatrixConcatenate_p/*@>13fbce8*/[/*@>1402c93*/i/*@>13fbcea*/ + /*@>1402c95*/903]./*@>144546a*/re/*@>13fbce7*/ = rtb_R_re;
    /*@>1438032*/Model_Target_B./*@>14457f7*/MatrixConcatenate_p/*@>13ee239*/[/*@>14028e9*/i/*@>13ee23e*/ + /*@>14028eb*/903]./*@>144546d*/im/*@>13e2736*/ = rtb_R_f_re_tmp;
    /* {S!d3040}Sum: '<S734>/Add1' */
    /*@>1402be9*/rtb_Rxks/*@>13f874e*/[/*@>1402beb*/i] = Lx_im;
}
/* {S!d3042}MATLAB Function: '<S737>/MATLAB Function' incorporates:
 *  Concatenate: '<S655>/Matrix Concatenate'
 *  Constant: '<S656>/Constant'
 */
/* MATLAB Function 'RifftWola/RifftWola/Hexagon/MATLAB Function': '<S739>:1' */
/* '<S739>:1:7' [~, numChannels] = size(u); */
/* '<S739>:1:8' outputSize = fftSize - numOverlap; */
/*  Buffer to hold overlapped samples */
/* '<S739>:1:12' if isempty(outputOverlap) */
/*  Buffer for Simulation  */
/*  Nullcopy copies type, size, and complexity of input to output */
/* '<S739>:1:20' y = coder.nullcopy(single(zeros(outputSize, numChannels))); */
/*  Simulation */
/* '<S739>:1:23' if(coder.target('MATLAB') || coder.target('Sfun')) */
/* '<S739>:1:33' else */
/* '<S739>:1:34' y = rifft_process(   single(complex(u)), ... */
/* '<S739>:1:35'                         single(Twiddle1),... */
/* '<S739>:1:36'                         single(Twiddle2),...  */
/* '<S739>:1:37'                         single(RifftOutputTmp),... */
/* '<S739>:1:38'                         single(win),... */
/* '<S739>:1:39'                         outputOverlap,... */
/* '<S739>:1:40'                         int32(fftSize),... */
/* '<S739>:1:41'                         int32(numChannels),... */
/* '<S739>:1:42'                         int32(numOverlap)); */
/*@>142c6f4*/rifft_process(&/*@>1438038*/Model_Target_B./*@>14457fa*/y_pz/*@>142aeec*/[/*@>142aee9*/0], &/*@>143803e*/Model_Target_B./*@>14457fd*/MatrixConcatenate_p/*@>13ee267*/[/*@>14028f1*/0], %<SLibCG_DumpSSCode("/*@[143efa7*/",(SLibCG_CSCDWAddr(160, 96, "", -1, "", 0)),"/*@]*/")>, %<SLibCG_DumpSSCode("/*@[143ef8a*/",(SLibCG_CSCDWAddr(161, 128, "", -1, "", 0)),"/*@]*/")>, %<SLibCG_DumpSSCode("/*@[143ef6d*/",(SLibCG_CSCDWAddr(170, 256, "", -1, "", 0)),"/*@]*/")>, &/*@>14381df*/Model_Target_ConstP./*@>1445833*/pooled74/*@>13ee2bb*/[/*@>14028fd*/0], &/*@>1438aa1*/Model_Target_DW./*@>14458cc*/outputOverlap_j/*@>13ee2d0*/[/*@>1402900*/0], /*@>1443f71*/256, /*@>1443f74*/8, /*@>1443f77*/128);
/* {S!d3044}Buffer: '<S647>/BufferOut' */
/*@>140236f*/rtb_isImpulsive_c/*@>10df5f8*/ = /*@>1443f7a*/0;
/*@>13efe13*/for (/*@>1443fe6*/i = /*@>1443fe5*/0; /*@>1443ff0*/i < /*@>1443fee*/8; /*@>1443fec*/i/*@>1444454*/++) {
    int32_T tmp;
    int32_T tmp_0;
    /*@>140236c*/memIdx/*@>10df601*/ = /*@>1443f7d*/128;
    /*@>1418e65*/tmp_0/*@>1418e67*/ = /*@>1402369*/i/*@>1403729*/ << /*@>1403728*/8;
    /*@>1402364*/tmp/*@>10df609*/ = /*@>1418e69*/tmp_0/*@>10df608*/ + /*@>1438ac5*/Model_Target_DW./*@>14458d8*/BufferOut_inBufPtrIdx;
    /*@>10df60e*/if (/*@>1438acb*/Model_Target_DW./*@>14458db*/BufferOut_inBufPtrIdx/*@>10df60d*/ > /*@>14021f3*/128) {
/*@>144402c*/        for (/*@>1444028*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>1444027*/ = /*@>1444029*/0; /*@>144401a*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>1444018*/ < /*@>144401c*/256/*@>144401b*/ - /*@>144401f*/Model_Target_DW./*@>1445944*/BufferOut_inBufPtrIdx; /*@>1444022*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>1444455*/++) {
            /*@>1438af5*/Model_Target_DW./*@>14458e4*/BufferOut_CircBuf/*@>13ee357*/[/*@>1402911*/tmp/*@>13ee35c*/ + /*@>1402913*/MedusaFdpDeciRateRfftRfftInput_tmp]/*@>10df621*/ = /*@>143804a*/Model_Target_B./*@>1445800*/y_pz/*@>1434b07*/[/*@>1434b02*/rtb_isImpulsive_c/*@>1434b00*/ + /*@>1434b04*/MedusaFdpDeciRateRfftRfftInput_tmp];
        }
        /*@>1402354*/rtb_isImpulsive_c/*@>10df625*/ = (/*@>1402356*/rtb_isImpulsive_c/*@>13d4048*/ - /*@>1438aef*/Model_Target_DW./*@>14458e1*/BufferOut_inBufPtrIdx)/*@>13d4049*/ + /*@>1402449*/256;
        /*@>140234f*/tmp/*@>10df628*/ = tmp_0;
        /*@>140234d*/memIdx/*@>10df62c*/ = /*@>1438b0d*/Model_Target_DW./*@>14458ed*/BufferOut_inBufPtrIdx/*@>13d404b*/ - /*@>140244c*/128;
    }
/*@>1444004*/    for (/*@>1444000*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>1443fff*/ = /*@>1444001*/0; /*@>1443ff6*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>1443ff4*/ < /*@>1443ff8*/memIdx; /*@>1443ffa*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>1444456*/++) {
        /*@>1438b01*/Model_Target_DW./*@>14458e7*/BufferOut_CircBuf/*@>13ee392*/[/*@>140291d*/tmp/*@>13ee397*/ + /*@>140291f*/MedusaFdpDeciRateRfftRfftInput_tmp]/*@>10df63e*/ = /*@>1438050*/Model_Target_B./*@>1445803*/y_pz/*@>1434b10*/[/*@>1434b0b*/rtb_isImpulsive_c/*@>1434b09*/ + /*@>1434b0d*/MedusaFdpDeciRateRfftRfftInput_tmp];
    }
    /*@>140233b*/rtb_isImpulsive_c/*@>1444457*/ += /*@>140233f*/memIdx;
}
/*@>1438aa7*/Model_Target_DW./*@>14458cf*/BufferOut_inBufPtrIdx/*@>1444458*/ += /*@>1402338*/128;
/*@>10df648*/if (/*@>1438ab3*/Model_Target_DW./*@>14458d2*/BufferOut_inBufPtrIdx/*@>10df647*/ >= /*@>1402333*/256) {
    /*@>1438ab9*/Model_Target_DW./*@>14458d5*/BufferOut_inBufPtrIdx/*@>1444459*/ -= /*@>1402330*/256;
}
/* {E!d3044}End of Buffer: '<S647>/BufferOut' */
%if !WHITE_SPACE(tlcOutputsFcnOfS300B124)

/* {S!d3046}S-Function (AudioStats_MEX): '<S660>/Audio Stats' */
%<SLibCG_DumpSSCode("/*@[143edf3*/",tlcOutputsFcnOfS300B124,"/*@]*/")>\
%endif
/* {S!d3048}Update for Delay: '<S716>/Delay' */
/*@>1438ad1*/Model_Target_DW./*@>14458de*/Delay_DSTATE_nr/*@>10df6e8*/ = /*@>140232c*/updatedLokRokScaleFactor;
/* {S!d3050}Update for Delay: '<S715>/Delay' incorporates:
 *  Math: '<S660>/Math Function'
 *
 * About '<S660>/Math Function':
 *  Operator: magnitude^2
 */
/*@>142e1b6*/memcpy(&/*@>1438b07*/Model_Target_DW./*@>14458ea*/Delay_DSTATE_mg/*@>1427be8*/[/*@>1427b64*/0], &/*@>1438056*/Model_Target_B./*@>1445806*/MathFunction_l/*@>1427bf0*/[/*@>1427b71*/0], /*@>1427be6*/129U/*@>1427bf3*/ * /*@>1427bf2*/sizeof(real32_T));
/* {S!d3052}Update for Delay: '<S715>/Delay1' incorporates:
 *  Sum: '<S715>/Add1'
 */
/*@>142e1b8*/memcpy(&/*@>1438b13*/Model_Target_DW./*@>14458f0*/Delay1_DSTATE_g/*@>1427c08*/[/*@>1427b80*/0], &/*@>143805c*/Model_Target_B./*@>1445809*/Lstrk_k/*@>1427c10*/[/*@>1427b8d*/0], /*@>1427c06*/129U/*@>1427c13*/ * /*@>1427c12*/sizeof(real32_T));
/* {S!d3054}Update for Delay: '<S717>/Delay' incorporates:
 *  Math: '<S660>/Math Function'
 *
 * About '<S660>/Math Function':
 *  Operator: magnitude^2
 */
/*@>142e1ba*/memcpy(&/*@>1438b19*/Model_Target_DW./*@>14458f3*/Delay_DSTATE_lq/*@>1427c28*/[/*@>1427b9c*/0], &/*@>1438062*/Model_Target_B./*@>144580c*/MathFunction_l/*@>1427c30*/[/*@>1427ba9*/0], /*@>1427c26*/129U/*@>1427c33*/ * /*@>1427c32*/sizeof(real32_T));
/* {S!d3056}Update for Delay: '<S717>/Delay1' incorporates:
 *  Sum: '<S717>/Add1'
 */
/*@>142e1bc*/memcpy(&/*@>1438b1f*/Model_Target_DW./*@>14458f6*/Delay1_DSTATE_ab/*@>1427c48*/[/*@>1427bb8*/0], &/*@>1438068*/Model_Target_B./*@>144580f*/Lin2_a/*@>1427c50*/[/*@>1427bc5*/0], /*@>1427c46*/129U/*@>1427c53*/ * /*@>1427c52*/sizeof(real32_T));
/* {S!d3058}Update for Delay: '<S713>/Delay' incorporates:
 *  Sum: '<S715>/Add1'
 */
/*@>13efdeb*/for (/*@>1443fd5*/MedusaFdpDeciRateRfftRfftInput_tmp = /*@>1443fd4*/0; /*@>1443fdf*/MedusaFdpDeciRateRfftRfftInput_tmp < /*@>1443fdd*/516; /*@>1443fdb*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>144445a*/++) {
    /*@>1438b2b*/Model_Target_DW./*@>14458fc*/MedusaDRspumLPxxFast_d/*@>13ee544*/[/*@>140294e*/MedusaFdpDeciRateRfftRfftInput_tmp]/*@>10df750*/ = /*@>1438b31*/Model_Target_DW./*@>14458ff*/MedusaDRspumLPxxFast_d/*@>1434b18*/[/*@>1434b14*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>1434b12*/ + /*@>1434b15*/129];
}
/*@>142e1be*/memcpy(&/*@>1438b25*/Model_Target_DW./*@>14458f9*/MedusaDRspumLPxxFast_d/*@>1427bc9*/[/*@>1427ad3*/516], &/*@>143806e*/Model_Target_B./*@>1445812*/Lstrk_k/*@>1427bd1*/[/*@>1427ae0*/0], /*@>1427bc7*/129U/*@>1427bd4*/ * /*@>1427bd3*/sizeof(real32_T));
/* {E!d3058}End of Update for Delay: '<S713>/Delay' */

/* {S!d3060}Update for Delay: '<S713>/Delay1' */
/*@>13efdc6*/for (/*@>1443fc4*/MedusaFdpDeciRateRfftRfftInput_tmp = /*@>1443fc3*/0; /*@>1443fce*/MedusaFdpDeciRateRfftRfftInput_tmp < /*@>1443fcc*/516; /*@>1443fca*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>144445b*/++) {
    /*@>1438b3d*/Model_Target_DW./*@>1445905*/MedusaDRspumLPxxSlow_i/*@>13ee652*/[/*@>1402965*/MedusaFdpDeciRateRfftRfftInput_tmp]/*@>10df7a8*/ = /*@>1438b43*/Model_Target_DW./*@>1445908*/MedusaDRspumLPxxSlow_i/*@>1434b20*/[/*@>1434b1c*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>1434b1a*/ + /*@>1434b1d*/129];
}
/* {S!d3062}Update for Delay: '<S727>/Delay' */
/*@>1438b37*/Model_Target_DW./*@>1445902*/Delay_DSTATE_a/*@>10df88c*/ = /*@>1402328*/minXp;
/*@>13ee614*/for (/*@>1443fb3*/i = /*@>1443fb2*/0; /*@>1443fbd*/i < /*@>1443fbb*/129; /*@>1443fb9*/i/*@>144445c*/++) {
    /* {S!d3064}Update for Delay: '<S726>/Delay' incorporates:
 *  Math: '<S660>/Math Function1'
 *
 * About '<S660>/Math Function1':
 *  Operator: magnitude^2
 */
    rtb_Add1_e3 = /*@>1434b24*/rtb_MathFunction1_e/*@>1434b26*/[/*@>1434b23*/i];
    /* {S!d3066}Update for Delay: '<S713>/Delay1' incorporates:
 *  Sum: '<S717>/Add1'
 */
    /*@>1438b79*/Model_Target_DW./*@>144590b*/MedusaDRspumLPxxSlow_i/*@>13ee5fd*/[/*@>1402957*/i/*@>13ee602*/ + /*@>1402956*/516]/*@>13ee607*/ = /*@>1438074*/Model_Target_B./*@>1445815*/Lin2_a/*@>1434b2c*/[/*@>1434b29*/i];
    /* {S!d3068}Update for Delay: '<S722>/Delay' incorporates:
 *  Product: '<S714>/Multiply'
 */
    /*@>1438b91*/Model_Target_DW./*@>1445917*/Delay_DSTATE_h/*@>13ee68e*/[/*@>140296d*/i]/*@>13e27c8*/ = /*@>1438080*/Model_Target_B./*@>144581b*/Multiply1_o/*@>1434b3a*/[/*@>1434b37*/i];
    /* {S!d3070}Update for Delay: '<S722>/Delay1' incorporates:
 *  Sum: '<S722>/Add1'
 */
    /*@>1438b97*/Model_Target_DW./*@>144591a*/Delay1_DSTATE_e2/*@>13ee6c6*/[/*@>1402975*/i]/*@>13e27e4*/ = /*@>1438086*/Model_Target_B./*@>144581e*/Multiply1_a/*@>1434b40*/[/*@>1434b3d*/i];
    /* {S!d3072}Update for Delay: '<S723>/Delay' incorporates:
 *  Math: '<S660>/Math Function'
 *
 * About '<S660>/Math Function':
 *  Operator: magnitude^2
 */
    /*@>1438b9d*/Model_Target_DW./*@>144591d*/Delay_DSTATE_ek/*@>13ee6fd*/[/*@>140297d*/i]/*@>13e2800*/ = /*@>143808c*/Model_Target_B./*@>1445821*/MathFunction_l/*@>1434b46*/[/*@>1434b43*/i];
    /* {S!d3074}Update for Delay: '<S723>/Delay1' incorporates:
 *  Sum: '<S723>/Add1'
 */
    /*@>1438bb5*/Model_Target_DW./*@>1445926*/Delay1_DSTATE_o4/*@>13ee734*/[/*@>1402985*/i]/*@>13e281c*/ = /*@>1434b52*/rtb_Add1_gg/*@>1434b54*/[/*@>1434b51*/i];
    /* {S!d3076}Update for Delay: '<S726>/Delay' */
    /*@>1438bc1*/Model_Target_DW./*@>1445929*/Delay_DSTATE_cg/*@>13ee76b*/[/*@>1402989*/i]/*@>13e2838*/ = rtb_Add1_e3;
    /* {S!d3078}Update for Delay: '<S726>/Delay1' incorporates:
 *  Sum: '<S726>/Add1'
 */
    /*@>1438bcd*/Model_Target_DW./*@>144592c*/Delay1_DSTATE_k/*@>13ee7a0*/[/*@>1402991*/i]/*@>13e2854*/ = /*@>1438092*/Model_Target_B./*@>1445824*/Multiply_bg/*@>1434b5a*/[/*@>1434b57*/i];
    /* {S!d3080}Update for Delay: '<S728>/Delay' */
    /*@>1438bd9*/Model_Target_DW./*@>144592f*/Delay_DSTATE_ks/*@>13ee7da*/[/*@>1402995*/i]/*@>13e2870*/ = rtb_Add1_e3;
    /* {S!d3082}Update for Delay: '<S728>/Delay1' incorporates:
 *  Sum: '<S728>/Add1'
 */
    /*@>1438be5*/Model_Target_DW./*@>1445935*/Delay1_DSTATE_ep/*@>13ee80f*/[/*@>140299d*/i]/*@>13e288c*/ = /*@>143809e*/Model_Target_B./*@>144582a*/instCPS_c/*@>1434b60*/[/*@>1434b5d*/i];
}
/* {S!d3084}Update for Delay: '<S724>/Delay' incorporates:
 *  Sum: '<S726>/Add1'
 */
/*@>13efda1*/for (/*@>1443fa2*/MedusaFdpDeciRateRfftRfftInput_tmp = /*@>1443fa1*/0; /*@>1443fac*/MedusaFdpDeciRateRfftRfftInput_tmp < /*@>1443faa*/516; /*@>1443fa8*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>144445d*/++) {
    /*@>1438b85*/Model_Target_DW./*@>1445911*/MedusaDRspumRPxxFast_e/*@>13ee915*/[/*@>14029b4*/MedusaFdpDeciRateRfftRfftInput_tmp]/*@>10df8f4*/ = /*@>1438b8b*/Model_Target_DW./*@>1445914*/MedusaDRspumRPxxFast_e/*@>1434b34*/[/*@>1434b30*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>1434b2e*/ + /*@>1434b31*/129];
}
/*@>142e1c0*/memcpy(&/*@>1438b7f*/Model_Target_DW./*@>144590e*/MedusaDRspumRPxxFast_e/*@>1427a76*/[/*@>1427a4c*/516], &/*@>143807a*/Model_Target_B./*@>1445818*/Multiply_bg/*@>1427a7e*/[/*@>1427a59*/0], /*@>1427a74*/129U/*@>1427a81*/ * /*@>1427a80*/sizeof(real32_T));
/* {E!d3084}End of Update for Delay: '<S724>/Delay' */

/* {S!d3086}Update for Delay: '<S724>/Delay1' incorporates:
 *  Sum: '<S728>/Add1'
 */
/*@>13efd7c*/for (/*@>1443f91*/MedusaFdpDeciRateRfftRfftInput_tmp = /*@>1443f90*/0; /*@>1443f9b*/MedusaFdpDeciRateRfftRfftInput_tmp < /*@>1443f99*/516; /*@>1443f97*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>144445e*/++) {
    /*@>1438ba9*/Model_Target_DW./*@>1445920*/MedusaDRspumRPxxSlow_i/*@>13eea23*/[/*@>14029cb*/MedusaFdpDeciRateRfftRfftInput_tmp]/*@>10df94c*/ = /*@>1438baf*/Model_Target_DW./*@>1445923*/MedusaDRspumRPxxSlow_i/*@>1434b4e*/[/*@>1434b4a*/MedusaFdpDeciRateRfftRfftInput_tmp/*@>1434b48*/ + /*@>1434b4b*/129];
}
/*@>142e1c2*/memcpy(&/*@>1438bdf*/Model_Target_DW./*@>1445932*/MedusaDRspumRPxxSlow_i/*@>1427974*/[/*@>14278f3*/516], &/*@>1438098*/Model_Target_B./*@>1445827*/instCPS_c/*@>142797c*/[/*@>1427900*/0], /*@>1427972*/129U/*@>142797f*/ * /*@>142797e*/sizeof(real32_T));
/* {E!d3086}End of Update for Delay: '<S724>/Delay1' */

/* {S!d3088}Update for Delay: '<S733>/Delay' incorporates:
 *  Product: '<S725>/Multiply'
 */
/*@>142e1c4*/memcpy(&/*@>1438beb*/Model_Target_DW./*@>1445938*/Delay_DSTATE_ai/*@>1427993*/[/*@>142790f*/0], &/*@>14380a4*/Model_Target_B./*@>144582d*/Multiply_a/*@>142799b*/[/*@>142791c*/0], /*@>1427991*/129U/*@>142799e*/ * /*@>142799d*/sizeof(real32_T));
/* {S!d3090}Update for Delay: '<S733>/Delay1' incorporates:
 *  Sum: '<S733>/Add1'
 */
/*@>142e1c6*/memcpy(&/*@>1438bf1*/Model_Target_DW./*@>144593b*/Delay1_DSTATE_i/*@>14279b3*/[/*@>142792b*/0], &/*@>14380aa*/Model_Target_B./*@>1445830*/Lxks_j/*@>14279bb*/[/*@>1427938*/0], /*@>14279b1*/129U/*@>14279be*/ * /*@>14279bd*/sizeof(real32_T));
/* {S!d3092}Update for Delay: '<S734>/Delay' incorporates:
 *  Math: '<S660>/Math Function1'
 *
 * About '<S660>/Math Function1':
 *  Operator: magnitude^2
 */
/*@>142e1c8*/memcpy(&/*@>1438bf7*/Model_Target_DW./*@>144593e*/Delay_DSTATE_at/*@>14279d3*/[/*@>1427947*/0], &/*@>14279da*/rtb_MathFunction1_e/*@>14279db*/[/*@>1427954*/0], /*@>14279d1*/129U/*@>14279de*/ * /*@>14279dd*/sizeof(real32_T));
/* {S!d3094}Update for Delay: '<S734>/Delay1' incorporates:
 *  Sum: '<S734>/Add1'
 */
/*@>142e1ca*/memcpy(&/*@>1438bfd*/Model_Target_DW./*@>1445941*/Delay1_DSTATE_aa/*@>14279f3*/[/*@>1427963*/0], &/*@>14279fa*/rtb_Rxks/*@>14279fb*/[/*@>1427970*/0], /*@>14279f1*/129U/*@>14279fe*/ * /*@>14279fd*/sizeof(real32_T));
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutput5LocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%endif
%endfunction
%function OutputsFcnProtoTypeForTID(block, system, tid) Output
%if tid == 2
%assign ::GlobalCurrentTID = 2
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Model_Target_Medusa5H1Part2TID2(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(376, 1, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 4
%assign ::GlobalCurrentTID = 4
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Model_Target_Medusa5H1Part2TID4(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(376, 2, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 5
%assign ::GlobalCurrentTID = 5
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Model_Target_Medusa5H1Part2TID5(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(376, 3, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%endif
%endfunction

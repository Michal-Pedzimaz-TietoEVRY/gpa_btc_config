%implements s1068_b0_g3vnd_20_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

int32_T i;
%closefile localVarDecl
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 3/On/Premix/Premix with Mono-Surround & CAE with Fade Ramper/Full Mixing Matrix_Center Surround/Ramper/process': '<S1068>:1' */
/* '<S1068>:1:10' for i = 1:numel(Premix_currentGain_CS) */
/*@>10c0be0*/for (/*@>117d54e*/i = /*@>117d54d*/0; /*@>117d558*/i < /*@>117d556*/20; /*@>117d554*/i/*@>117d55c*/++) {
    /* '<S1068>:1:11' if (Premix_Freeze_CS(1) == false) */
    /*@>10c0be2*/if (!/*@<10c0bee*/*/*@<117d565*/rtd_Premix_Freeze_CS) {
        /* '<S1068>:1:12' if (Premix_frameCount_CS(i) == 0) */
        /*@>10c0be3*/if (/*@>117d2ba*/rtd_Premix_frameCount_CS/*@>117d2bc*/[/*@>117d2b8*/i]/*@>10c0bd6*/ == /*@>117ca4d*/0) {
            /*  The ramp is finished. Stop ramping and SNAP to the target */
            /* '<S1068>:1:14' Premix_currentGain_CS(i) = Premix_targetGain_CS(i); */
            /*@>117ca59*/rtd_Premix_currentGain_CS/*@>117c764*/[/*@>117ca5b*/i]/*@>10c0bca*/ = /*@>117d2c1*/rtd_Premix_targetGain_CS/*@>117d2c3*/[/*@>117d2bf*/i];
        } else {
            /* '<S1068>:1:15' else */
            /*  The ramp is *NOT* frozen or done: gain is moving */
            /* '<S1068>:1:17' Premix_currentGain_CS(i) = Premix_currentGain_CS(i)*Premix_rampCoeff_CS(i); */
            /*@>117ca65*/rtd_Premix_currentGain_CS/*@>117c7be*/[/*@>117ca67*/i]/*@>117d55d*/ *= /*@>117d2cf*/rtd_Premix_rampCoeff_CS/*@>117d2d1*/[/*@>117d2cd*/i];
            /* '<S1068>:1:18' Premix_frameCount_CS(i) = Premix_frameCount_CS(i) - 1; */
            /*@>117ca6d*/rtd_Premix_frameCount_CS/*@>117c7f8*/[/*@>117ca6f*/i]/*@>117d55e*/--;
        }
    }
}
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[20].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(20, 0, 0)>
%endif
%if SLibCG_ArgAccessed(20, 0, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(20, 0, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Model_Target_process_p(\
%assign comma = ""
%if SLibCG_ArgAccessed(20, 0, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("Model_Target_process_p", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>const boolean_T *rtd_Premix_Freeze_CS\
%assign comma = ", "
%<comma>real32_T rtd_Premix_currentGain_CS[20]\
%assign comma = ", "
%<comma>int32_T rtd_Premix_frameCount_CS[20]\
%assign comma = ", "
%<comma>const real32_T rtd_Premix_rampCoeff_CS[20]\
%assign comma = ", "
%<comma>const real32_T rtd_Premix_targetGain_CS[20]\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(20, 0, fcnProtoType)>
%endfunction

%implements s1068_b0_g3vnd_22_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

int32_T i;
%closefile localVarDecl
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 3/On/Premix/Premix with Mono-Surround & CAE with Fade Ramper/Full Mixing Matrix_Right/Ramper/process': '<S1092>:1' */
/* '<S1092>:1:10' for i = 1:numel(Premix_currentGain_Right) */
/*@>10c0e10*/for (/*@>117f9ba*/i = /*@>117f9b9*/0; /*@>117f9c4*/i < /*@>117f9c2*/77; /*@>117f9c0*/i/*@>117f9c8*/++) {
    /* '<S1092>:1:11' if (Premix_Freeze_Right(1) == false) */
    /*@>10c0e12*/if (!/*@<10c0e1e*/*/*@<117f9d1*/rtd_Premix_Freeze_Right) {
        /* '<S1092>:1:12' if (Premix_frameCount_Right(i) == 0) */
        /*@>10c0e13*/if (/*@>117f726*/rtd_Premix_frameCount_Right/*@>117f728*/[/*@>117f724*/i]/*@>10c0e06*/ == /*@>117eeb9*/0) {
            /*  The ramp is finished. Stop ramping and SNAP to the target */
            /* '<S1092>:1:14' Premix_currentGain_Right(i) = Premix_targetGain_Right(i); */
            /*@>117eec5*/rtd_Premix_currentGain_Right/*@>117ebd0*/[/*@>117eec7*/i]/*@>10c0dfa*/ = /*@>117f72d*/rtd_Premix_targetGain_Right/*@>117f72f*/[/*@>117f72b*/i];
        } else {
            /* '<S1092>:1:15' else */
            /*  The ramp is *NOT* frozen or done: gain is moving */
            /* '<S1092>:1:17' Premix_currentGain_Right(i) = Premix_currentGain_Right(i)*Premix_rampCoeff_Right(i); */
            /*@>117eed1*/rtd_Premix_currentGain_Right/*@>117ec2a*/[/*@>117eed3*/i]/*@>117f9c9*/ *= /*@>117f73b*/rtd_Premix_rampCoeff_Right/*@>117f73d*/[/*@>117f739*/i];
            /* '<S1092>:1:18' Premix_frameCount_Right(i) = Premix_frameCount_Right(i) - 1; */
            /*@>117eed9*/rtd_Premix_frameCount_Right/*@>117ec64*/[/*@>117eedb*/i]/*@>117f9ca*/--;
        }
    }
}
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[22].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(22, 0, 0)>
%endif
%if SLibCG_ArgAccessed(22, 0, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(22, 0, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Model_Target_process_f(\
%assign comma = ""
%if SLibCG_ArgAccessed(22, 0, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("Model_Target_process_f", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>const boolean_T *rtd_Premix_Freeze_Right\
%assign comma = ", "
%<comma>real32_T rtd_Premix_currentGain_Right[77]\
%assign comma = ", "
%<comma>int32_T rtd_Premix_frameCount_Right[77]\
%assign comma = ", "
%<comma>const real32_T rtd_Premix_rampCoeff_Right[77]\
%assign comma = ", "
%<comma>const real32_T rtd_Premix_targetGain_Right[77]\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(22, 0, fcnProtoType)>
%endfunction

%implements s1068_b0_g3vnd_354_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

int32_T i;
boolean_T exitg1;
%closefile localVarDecl
/* {S!d2223}MATLAB Function: '<S563>/check sequence' */
/* {S!d2228}MATLAB Function: '<S563>/check sequence' */
/*  Invoke the function trigger output */
/* MATLAB Function 'RTC/NtfCheck': '<S580>:1' */
/* '<S580>:1:3' go(); */
/*  Function which checks if the notification sequence */
/*  has completed successfully  */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/Balance/Balance/check sequence': '<S577>:1' */
/*  Assume the work is complete until proven otherwise */
/* '<S577>:1:8' done = true; */
/*@>139966f*/Model_Target_B./*@>1399acd*/done_p/*@>10d8ebd*/ = /*@>1398f01*/true;
/* '<S577>:1:10' for i=1:MaskNumRampers */
/*@>1398f02*/i/*@>10d8ecf*/ = /*@>1399a7b*/0;
exitg1 = false;
while/*@<10d8ed8*/ ((!exitg1) && (/*@>1398f05*/i/*@>10d8ed7*/ <= /*@>1398f07*/3)) {
    /* '<S577>:1:11' if (Rampers(i).targetGain ~= Rampers(i).currentGain) */
    /*@>10d8ec8*/if (%<SLibCG_DumpSSCode("/*@[1399a2e*/",(SLibCG_SE(SLibCG_CSCDW(8, 1, "[/*@>1399a05*/i].targetGain", -1, "", 0))),"/*@]*/")>/*@>10d8ec5*/ != %<SLibCG_DumpSSCode("/*@[13999f8*/",(SLibCG_SE(SLibCG_CSCDW(8, 1, "[/*@>13999cf*/i].currentGain", -1, "", 0))),"/*@]*/")>) {
        /* '<S577>:1:12' done = false; */
        /*@>139967b*/Model_Target_B./*@>1399ad3*/done_p/*@>10d8ec4*/ = /*@>1398f0f*/false;
        /*  just proved otherwise */
        exitg1 = true;
    } else {
        /*@>1398f0d*/i/*@>1399aa0*/++;
    }
}
/* {S!d2225}Outputs for Function Call SubSystem: '<S563>/Triggered Subsystem' */
/* {S!d2230}SignalConversion generated from: '<S567>/In1' */
/*@>1399675*/Model_Target_B./*@>1399ad0*/In1_j/*@>10d8eab*/ = %<SLibCG_DumpSSCode("/*@[1399a4a*/",(SLibCG_SE(SLibCG_BOCSC(97, 1, "", -1, "", 0))),"/*@]*/")>;
/* {E!d2225}End of Outputs for SubSystem: '<S563>/Triggered Subsystem' */
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(354, 0, fcnProtoType)>
%endfunction

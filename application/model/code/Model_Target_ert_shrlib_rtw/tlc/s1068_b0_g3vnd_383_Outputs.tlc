%implements s1068_b0_g3vnd_383_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

int32_T cutLinearLowFreq;
real32_T boostLinearHighFreq;
real32_T cutLinearHighFreq;
uint8_T j;
boolean_T exitg1;
%closefile localVarDecl
%assign _modelSS = ""

/* {S!d3149}MATLAB Function: '<S1359>/calculate_fade_gain' */
/* {S!d3166}MATLAB Function: '<S1359>/calculate_fade_gain' */
/*  Invoke the function trigger output */
/* MATLAB Function 'RTC/REQ': '<S1372>:1' */
/* '<S1372>:1:3' go(); */
/*  %<"\% inputs"> */
/*  parameters */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/SleepingBeauty/SleepingBeauty/Enabled/FadeControl/InnerLink/calculate_fade_gain': '<S1367>:1' */
/*  Computes the fade gains for the 'Front' and 'Rear' groups based on the */
/*  index. Based on the position of the index in the table, either group  */
/*  receives a gain 'cut' or 'boost' in order to achieve the fade effect. The */
/*  gain 'cut' is computed from the table and the 'boost' is in turn computed */
/*  from the 'cut' value depending on whether 'boostDisable' is set (0dB) or */
/*  reset. When reset, the boost value is computed from the cut value based  */
/*  on the energy preseving relationship: Boost^2 + Cut^2 = 2. These gain  */
/*  values are applied only to the non-bass frequencies; the bass remains  */
/*  unaltered (unless 'silent extreme' is enabled).  */
/*  Ramper configuration: */
/*  1 & 2: Non-bass (Front; Rear) */
/*  3 & 4: Bass (Front; Rear) */
/*  global Rampers; */
/* '<S1367>:1:20' j = uint8(1); */
/*@>144c37b*/j/*@>10cb82c*/ = /*@>144f557*/1U;
/* '<S1367>:1:21' cutLinearHighFreq = single(1.0); */
/*@>144c37d*/cutLinearHighFreq/*@>10cb82d*/ = /*@>144c3cc*/1.0F;
/* '<S1367>:1:22' cutLinearLowFreq = single(1.0); */
/*@>144c37f*/cutLinearLowFreq/*@>10cb82e*/ = /*@>144f55a*/1;
/* '<S1367>:1:23' targetGains = ones(1,MaskNumRampers,'single'); */
/* '<S1367>:1:24' fadeIndex = single(fadeIndex); */
/*  Find the front and the rear gains */
/*  Based on the Fade table, the dB value of the index is calculated */
/* '<S1367>:1:28' while (j <= numel(fadeTableIdx)) */
exitg1 = false;
while/*@<10cb87a*/ ((!exitg1) && (/*@>144c381*/j/*@>10cb851*/ <= /*@>144c3ce*/30)) {
    /* '<S1367>:1:29' if (fadeIndex <= fadeTableIdx(j)) */
    /*@>144cdec*/boostLinearHighFreq/*@>144cdee*/ = %<SLibCG_DumpSSCode("/*@[144f33a*/",(SLibCG_SE(SLibCG_BOCSC(271, 30, "", -1, "/*@>144e5f8*/j/*@>144e5f5*/ - /*@>144e5f9*/1", 0))),"/*@]*/")>;
    /*@>10cb87b*/if (%<SLibCG_DumpSSCode("/*@[144f125*/",(SLibCG_SE(SLibCG_BOCSC(88, 1, "", -1, "", 0))),"/*@]*/")>/*@>10cb854*/ <= /*@>144cdf0*/boostLinearHighFreq) {
        /* '<S1367>:1:30' if (j <= 1) */
        /*@>10cb87c*/if (/*@>144c384*/j/*@>10cb855*/ <= /*@>144c386*/1) {
            /*  First indexed value is linearly interpolated to zero */
            /* '<S1367>:1:31' if (fadeTableIdx(j)) */
            /*@>10cb87e*/if (%<SLibCG_DumpSSCode("/*@[144f142*/",(SLibCG_SE(SLibCG_BOCSC(271, 30, "", -1, "", 0))),"/*@]*/")>/*@>10cb856*/ != /*@>144c38e*/0.0F) {
                /* '<S1367>:1:32' percent = single(fadeIndex) / single(fadeTableIdx(j)); */
                /*@>144c3b0*/cutLinearHighFreq/*@>10cb8f4*/ = /*@>144df7e*/qhmath_div_f(/*@>10cb912*/(real32_T)%<SLibCG_DumpSSCode("/*@[144f294*/",(SLibCG_BOCSC(88, 1, "", -1, "", 0)),"/*@]*/")>, %<SLibCG_DumpSSCode("/*@[144f278*/",(SLibCG_BOCSC(271, 30, "", -1, "", 0)),"/*@]*/")>);
            } else {
                /* '<S1367>:1:33' else */
                /* '<S1367>:1:34' percent = single(1); */
            }
            /* '<S1367>:1:36' cutLinearHighFreq = percent * 10 ^ (fadeTabledB(j) / 20); */
            /*@>144c397*/cutLinearHighFreq/*@>144f584*/ *= /*@>144df82*/qhmath_pow_f(/*@>144c3d7*/10.0F, /*@>144df80*/qhmath_div_f(%<SLibCG_DumpSSCode("/*@[144f25b*/",(SLibCG_BOCSC(270, 30, "", -1, "", 0)),"/*@]*/")>, /*@>144c3d6*/20.0F));
        } else {
            real32_T cutLinearHighFreq_tmp;
            /* '<S1367>:1:37' else */
            /*  Other values are interpolated in dB space */
            /* '<S1367>:1:38' lastIdx = fadeTableIdx(j-1); */
            /* '<S1367>:1:39' percent = single(fadeIndex - lastIdx) / single(fadeTableIdx(j) - lastIdx); */
            /* '<S1367>:1:40' cutLinearHighFreq = 10 ^ (((percent * (fadeTabledB(j) - fadeTabledB(j-1))) + fadeTabledB(j-1)) / 20); */
            /*@>144cdfc*/cutLinearHighFreq/*@>144cdfe*/ = %<SLibCG_DumpSSCode("/*@[144f355*/",(SLibCG_SE(SLibCG_BOCSC(271, 30, "", -1, "/*@>144e60b*/j/*@>144e608*/ - /*@>144e60c*/2", 0))),"/*@]*/")>;
            /*@>144ce24*/cutLinearHighFreq_tmp/*@>144ce26*/ = %<SLibCG_DumpSSCode("/*@[144f370*/",(SLibCG_SE(SLibCG_BOCSC(270, 30, "", -1, "/*@>144e614*/j/*@>144e611*/ - /*@>144e615*/2", 0))),"/*@]*/")>;
            /*@>144c3b4*/cutLinearHighFreq/*@>10cb8fc*/ = /*@>144df7c*/qhmath_pow_f(/*@>144c3d4*/10.0F, /*@>144df7a*/qhmath_div_f((%<SLibCG_DumpSSCode("/*@[144f2cb*/",(SLibCG_SE(SLibCG_BOCSC(270, 30, "", -1, "/*@>144e61d*/j/*@>144e61a*/ - /*@>144e61e*/1", 0))),"/*@]*/")>/*@>10cb94e*/ - /*@>144ce28*/cutLinearHighFreq_tmp)/*@>144c47b*/ * /*@>144df78*/qhmath_div_f(/*@>10cb941*/(real32_T)%<SLibCG_DumpSSCode("/*@[144f2b0*/",(SLibCG_SE(SLibCG_BOCSC(88, 1, "", -1, "", 0))),"/*@]*/")>/*@>10cb940*/ - /*@>144ce00*/cutLinearHighFreq, boostLinearHighFreq/*@>10cb944*/ - cutLinearHighFreq)/*@>10cb93d*/ + cutLinearHighFreq_tmp, /*@>144c3d3*/20.0F));
        }
        exitg1 = true;
    } else {
        /* '<S1367>:1:43' else */
        /* '<S1367>:1:44' j = j + 1; */
        /*@>144c38a*/j/*@>144f585*/++;
    }
}
/*  Compute boost gain */
/* '<S1367>:1:49' if boostDisable ~= 0 */
/*@>10cb885*/if (%<SLibCG_DumpSSCode("/*@[144f15e*/",(SLibCG_SE(SLibCG_BOCSC(272, 1, "", -1, "", 0))),"/*@]*/")>/*@>10cb859*/ != /*@>144c383*/0.0F) {
    /* '<S1367>:1:50' boostLinearHighFreq = single(1); */
    /*@>144c38c*/boostLinearHighFreq/*@>10cb838*/ = /*@>144c3cf*/1.0F;
} else {
    /* '<S1367>:1:51' else */
    /* '<S1367>:1:52' boostLinearHighFreq = sqrt(2.0 - cutLinearHighFreq^2); */
    /*@>144c3b2*/boostLinearHighFreq/*@>10cb8f9*/ = /*@>144df84*/qhmath_sqrt_f(/*@>144c3d0*/2.0F/*@>10cb91a*/ - /*@>144c3c4*/cutLinearHighFreq/*@>144c46e*/ * /*@>144c3c6*/cutLinearHighFreq);
}
/*  If silent extreme is enabled and we're extreme, make the cut complete */
/* '<S1367>:1:56' if (EnableSilentExtreme && abs(fadeIndex - indexOffset) >= (indexOffset-1)) */
/*@>10cb889*/if ((%<SLibCG_DumpSSCode("/*@[144f17a*/",(SLibCG_SE(SLibCG_BOCSC(273, 1, "", -1, "", 0))),"/*@]*/")>/*@>10cb85a*/ != /*@>144c38f*/0.0F)/*@>144f3fd*/ && (/*@>144df86*/qhmath_abs_f(/*@>10cb92a*/(real32_T)%<SLibCG_DumpSSCode("/*@[144f1ce*/",(SLibCG_SE(SLibCG_BOCSC(88, 1, "", -1, "", 0))),"/*@]*/")>/*@>10cb929*/ - %<SLibCG_DumpSSCode("/*@[144f1b2*/",(SLibCG_SE(SLibCG_BOCSC(274, 1, "", -1, "", 0))),"/*@]*/")>)/*@>10cb85c*/ >= %<SLibCG_DumpSSCode("/*@[144f196*/",(SLibCG_SE(SLibCG_BOCSC(274, 1, "", -1, "", 0))),"/*@]*/")>/*@>10cb85b*/ - /*@>144c390*/1.0F)) {
    /* '<S1367>:1:57' cutLinearHighFreq = single(0); */
    /*@>144c393*/cutLinearHighFreq/*@>10cb839*/ = /*@>144c3d2*/0.0F;
    /* '<S1367>:1:58' cutLinearLowFreq = single(0); */
    /*@>144c39a*/cutLinearLowFreq/*@>10cb83a*/ = /*@>144f55d*/0;
}
/*  Assign to Gain Values */
/* '<S1367>:1:62' if (fadeIndex - indexOffset) < 0 */
/*@>10cb88e*/if (/*@>10cb91b*/(real32_T)%<SLibCG_DumpSSCode("/*@[144f206*/",(SLibCG_SE(SLibCG_BOCSC(88, 1, "", -1, "", 0))),"/*@]*/")>/*@>10cb85d*/ - %<SLibCG_DumpSSCode("/*@[144f1ea*/",(SLibCG_SE(SLibCG_BOCSC(274, 1, "", -1, "", 0))),"/*@]*/")>/*@>10cb85e*/ < /*@>144c399*/0.0F) {
    /*  Front speakers attenuated */
    /* '<S1367>:1:63' targetGains(1) = single(cutLinearHighFreq); */
    /*@>144e8d8*/Model_Target_B./*@>144f67d*/targetGains/*@>10cb83b*/[/*@>144c39f*/0]/*@>10cb83d*/ = /*@>144c3a0*/cutLinearHighFreq;
    /* '<S1367>:1:64' targetGains(2) = single(boostLinearHighFreq); */
    /*@>144e8e4*/Model_Target_B./*@>144f683*/targetGains/*@>10cb83e*/[/*@>144c3a5*/1]/*@>10cb840*/ = /*@>144c3a6*/boostLinearHighFreq;
    /* '<S1367>:1:65' targetGains(3) = single(cutLinearLowFreq); */
    /*@>144e8f0*/Model_Target_B./*@>144f689*/targetGains/*@>10cb841*/[/*@>144c3a9*/2]/*@>10cb843*/ = /*@>144c84f*/(real32_T)/*@>144c3aa*/cutLinearLowFreq;
    /* '<S1367>:1:66' targetGains(4) = single(1.0); */
    /*@>144e8fc*/Model_Target_B./*@>144f68f*/targetGains/*@>10cb844*/[/*@>144c3af*/3]/*@>10cb845*/ = /*@>144c3d9*/1.0F;
} else {
    /* '<S1367>:1:67' else */
    /* '<S1367>:1:68' targetGains(1) = single(boostLinearHighFreq); */
    /*@>144e8d2*/Model_Target_B./*@>144f67a*/targetGains/*@>10cb846*/[/*@>144c39c*/0]/*@>10cb848*/ = /*@>144c39d*/boostLinearHighFreq;
    /* '<S1367>:1:69' targetGains(2) = single(cutLinearHighFreq); */
    /*@>144e8de*/Model_Target_B./*@>144f680*/targetGains/*@>10cb849*/[/*@>144c3a2*/1]/*@>10cb84b*/ = /*@>144c3a3*/cutLinearHighFreq;
    /* '<S1367>:1:70' targetGains(3) = single(1.0); */
    /*@>144e8ea*/Model_Target_B./*@>144f686*/targetGains/*@>10cb84c*/[/*@>144c3a8*/2]/*@>10cb84d*/ = /*@>144c3d8*/1.0F;
    /* '<S1367>:1:71' targetGains(4) = single(cutLinearLowFreq); */
    /*@>144e8f6*/Model_Target_B./*@>144f68c*/targetGains/*@>10cb84e*/[/*@>144c3ac*/3]/*@>10cb850*/ = /*@>144c853*/(real32_T)/*@>144c3ad*/cutLinearLowFreq;
}
/* {E!d3166}End of MATLAB Function: '<S1359>/calculate_fade_gain' */

/* {S!d3151}MATLAB Function: '<S1359>/calculate_ramp_parameters' */
/* {S!d3168}MATLAB Function: '<S1359>/calculate_ramp_parameters' */
/*@>144c3ed*/boostLinearHighFreq/*@>10cb99b*/ = %<SLibCG_DumpSSCode("/*@[144f2e7*/",(SLibCG_SE(SLibCG_BOCSC(269, 1, "", -1, "", 0))),"/*@]*/")>;
/*  parameters */
/*  Function to calculate ramp parameters */
/*   */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/SleepingBeauty/SleepingBeauty/Enabled/FadeControl/InnerLink/calculate_ramp_parameters': '<S1368>:1' */
/*  Ramp time and rate are provided to the block through RTC messages. However  */
/*  in case neither of them are provided, the block will use the default ramp  */
/*  time given in the tune variables. */
/* '<S1368>:1:11' ramptime = single(rampTimeTune); */
/* '<S1368>:1:12' rampRate = single(0); */
/*@>144c3e9*/cutLinearHighFreq/*@>10cb99d*/ = /*@>144c3f9*/0.0F;
/* '<S1368>:1:14' if (rampRateRTC) */
/*@>10cb9a6*/if (%<SLibCG_DumpSSCode("/*@[144f222*/",(SLibCG_SE(SLibCG_BOCSC(89, 1, "", -1, "", 0))),"/*@]*/")>/*@>10cb99f*/ != /*@>144c3e3*/0U) {
    /* '<S1368>:1:15' rampRate = single(rampRateRTC); */
    /* '<S1368>:1:16' rampRate = max(rampRateBounds(1), rampRate); */
    /* '<S1368>:1:17' rampRate = min(rampRateBounds(2), rampRate); */
    /*@>144c3e7*/cutLinearHighFreq/*@>10cb9bb*/ = /*@>144df8a*/fminf(/*@>144c459*/50000.0F, /*@>144df88*/fmaxf(/*@>144c458*/5.0F, /*@>10cb9e2*/(real32_T)%<SLibCG_DumpSSCode("/*@[144f31f*/",(SLibCG_BOCSC(89, 1, "", -1, "", 0)),"/*@]*/")>));
}
/* '<S1368>:1:19' if (rampTimeRTC) */
/*@>10cb9a8*/if (%<SLibCG_DumpSSCode("/*@[144f23e*/",(SLibCG_SE(SLibCG_BOCSC(90, 1, "", -1, "", 0))),"/*@]*/")>/*@>10cb9a0*/ != /*@>144c3e4*/0U) {
    /* '<S1368>:1:20' ramptime = single(rampTimeRTC); */
    /*@>144c3eb*/boostLinearHighFreq/*@>10cb99e*/ = /*@>10cb9a1*/(real32_T)%<SLibCG_DumpSSCode("/*@[144f303*/",(SLibCG_SE(SLibCG_BOCSC(90, 1, "", -1, "", 0))),"/*@]*/")>;
}
/* '<S1368>:1:22' ramptime = max(rampTimeBounds(1), ramptime); */
/* '<S1368>:1:23' ramptime = min(rampTimeBounds(2), ramptime); */
/*@>144c3e5*/boostLinearHighFreq/*@>10cb9be*/ = /*@>144df8e*/fminf(/*@>144c45b*/3000.0F, /*@>144df8c*/fmaxf(/*@>144c45a*/1.0F, /*@>144c3f5*/boostLinearHighFreq));
/* {E!d3168}End of MATLAB Function: '<S1359>/calculate_ramp_parameters' */
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[512], "Output",2)

/* {S!d3153}Outputs for Function Call SubSystem: '<S1375>/SetDsm' */
%if SLibCG_SystemFcnArgAccessed("Model_Target_SetDsm_l",512,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[144f105*/",SLibCGIRGenReusableSysCall("Model_Target_SetDsm_l", ["%<_modelSS>", "/*@>144f6d0*/1U"], 512, 0, 6, 2, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[512]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

/* {E!d3153}End of Outputs for SubSystem: '<S1375>/SetDsm' */
%endif
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[513], "Output",2)

/* {S!d3155}MATLAB Function: '<S1375>/fade control' */
/* {S!d3170}MATLAB Function: '<S1375>/fade control' incorporates:
 *  S-Function (AudioStats_MEX): '<S1375>/Audio Stats'
 */
%if SLibCG_SystemFcnArgAccessed("Model_Target_fadecontrol",513,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[144f106*/",SLibCGIRGenReusableSysCall("Model_Target_fadecontrol", ["%<_modelSS>", "/*@>144f71b*/Model_Target_B./*@>144f71a*/targetGains", "/*@>144f726*/cutLinearHighFreq", "/*@>144f730*/boostLinearHighFreq", "%<SLibCG_DumpSSCode("/*@[144f73a*/",(SLibCG_Expr(578, 27, 0, 1, "", -1, "", 0)),"/*@]*/")>", "%<SLibCG_DumpSSCode("/*@[144f74e*/",(SLibCG_Expr(578, 27, 1, 1, "", -1, "", 0)),"/*@]*/")>"], 513, 0, 6, 2, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[513]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[512], "Output",2)

/* {S!d3157}Outputs for Function Call SubSystem: '<S1375>/SetDsm1' */
%if SLibCG_SystemFcnArgAccessed("Model_Target_SetDsm_l",512,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[144f107*/",SLibCGIRGenReusableSysCall("Model_Target_SetDsm_l", ["%<_modelSS>", "/*@>144f784*/0U"], 512, 1, 6, 2, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[512]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

/* {E!d3157}End of Outputs for SubSystem: '<S1375>/SetDsm1' */
%endif
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[514], "Output",2)

/* {S!d3159}Outputs for Function Call SubSystem: '<S1382>/SetDsm' */
%if SLibCG_SystemFcnArgAccessed("Model_Target_SetDsm_d",514,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[144f108*/",SLibCGIRGenReusableSysCall("Model_Target_SetDsm_d", ["%<_modelSS>", "/*@>144f7b0*/1U"], 514, 0, 6, 2, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[514]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

/* {E!d3159}End of Outputs for SubSystem: '<S1382>/SetDsm' */
%endif
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[515], "Output",2)

/* {S!d3161}MATLAB Function: '<S1382>/fade control' */
/* {S!d3172}MATLAB Function: '<S1382>/fade control' incorporates:
 *  S-Function (AudioStats_MEX): '<S1382>/Audio Stats'
 */
%if SLibCG_SystemFcnArgAccessed("Model_Target_fadecontrol_b",515,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[144f109*/",SLibCGIRGenReusableSysCall("Model_Target_fadecontrol_b", ["%<_modelSS>", "/*@>144f7fb*/Model_Target_B./*@>144f7fa*/targetGains", "/*@>144f806*/cutLinearHighFreq", "/*@>144f810*/boostLinearHighFreq", "%<SLibCG_DumpSSCode("/*@[144f81a*/",(SLibCG_Expr(578, 26, 0, 1, "", -1, "", 0)),"/*@]*/")>", "%<SLibCG_DumpSSCode("/*@[144f82e*/",(SLibCG_Expr(578, 26, 1, 1, "", -1, "", 0)),"/*@]*/")>"], 515, 0, 6, 2, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[515]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[514], "Output",2)

/* {S!d3163}Outputs for Function Call SubSystem: '<S1382>/SetDsm1' */
%if SLibCG_SystemFcnArgAccessed("Model_Target_SetDsm_d",514,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[144f10a*/",SLibCGIRGenReusableSysCall("Model_Target_SetDsm_d", ["%<_modelSS>", "/*@>144f864*/0U"], 514, 1, 6, 2, 6, 957),"/*@]*/")>\
%assign ss = ::CompiledModel.System[514]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

/* {E!d3163}End of Outputs for SubSystem: '<S1382>/SetDsm1' */
%endif
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void HandleReqPreAmpFadeControlSet(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(383, 0, fcnProtoType)>
%endfunction

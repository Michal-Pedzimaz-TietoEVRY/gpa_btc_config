%implements s1068_b0_g3vnd_81_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
/*  %<"\% RTC message parameters"> */
/*  Tune parameters */
/* MATLAB Function 'NEAR/Near1p1/VolumeMute/VolMuteCh1/Volume/get_ramp_parameters': '<S1914>:1' */
/*  Ramp time and rate are provided to the block through RTC messages. However  */
/*  in case neither of them are provided, the block will use the default ramp  */
/*  time given in the tune variables. */
/*  NOTE: Tune variable for ramp rate is provided as an option, but not used */
/*  in the current version. */
/* '<S1914>:1:10' Numiters=size(rampTimeRTC,2); */
/* '<S1914>:1:11' ramp_ms=zeros(1,Numiters); */
/* '<S1914>:1:12' ramp_rate=zeros(1,Numiters); */
/* '<S1914>:1:14' ramp_ms(1:Numiters) = single(rampTimeTune); */
/*@>1235563*/localB->/*@>12357a7*/ramp_ms/*@>10cc67b*/ = /*@>1234fe6*/rtu_rampTimeTune;
/* '<S1914>:1:15' ramp_rate(1:Numiters) = single(0.0); */
/*@>123556a*/localB->/*@>12357aa*/ramp_rate/*@>10cc67c*/ = /*@>1234fe1*/0.0;
/*  Set to rampRateTune if a default is to be set */
/* '<S1914>:1:16' for rampind=1:Numiters */
/* '<S1914>:1:17' if (rampTimeRTC(rampind)) */
/*@>10cc688*/if (/*@>1234fe8*/rtu_rampTimeRTC/*@>10cc67d*/ != /*@>1234fd3*/0U) {
    /* '<S1914>:1:18' ramp_ms(rampind) = single(rampTimeRTC(rampind)); */
    /* '<S1914>:1:19' ramp_ms(rampind) = min(100000, ramp_ms(rampind)); */
    /* '<S1914>:1:20' ramp_ms(rampind) = max(1, ramp_ms(rampind)); */
    /*@>1235571*/localB->/*@>12357ad*/ramp_ms/*@>10cc69f*/ = /*@>1235407*/fmin(/*@>1234fdf*/100000.0, /*@>10cc6b1*/(real32_T)/*@>1234fec*/rtu_rampTimeRTC);
}
/* '<S1914>:1:22' if (rampRateRTC(rampind)) */
/*@>10cc68a*/if (/*@>1234fea*/rtu_rampRateRTC/*@>10cc67f*/ != /*@>1234fd4*/0U) {
    /* '<S1914>:1:23' ramp_rate(rampind) = single(rampRateRTC(rampind)); */
    /* '<S1914>:1:24' ramp_rate(rampind) = min(50000, ramp_rate(rampind)); */
    /* '<S1914>:1:25' ramp_rate(rampind) = max(5, ramp_rate(rampind)); */
    /*@>1235578*/localB->/*@>12357b0*/ramp_rate/*@>10cc6a1*/ = /*@>123540b*/fmax(/*@>1234fde*/5.0, /*@>1235409*/fmin(/*@>1234fe0*/50000.0, /*@>10cc6b6*/(real32_T)/*@>1234fee*/rtu_rampRateRTC));
}
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[81].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(81, 0, 0)>
%endif
%if SLibCG_ArgAccessed(81, 0, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(81, 0, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Model_Target_get_ramp_parameters(\
%assign comma = ""
%if SLibCG_ArgAccessed(81, 0, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("Model_Target_get_ramp_parameters", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>uint32_T rtu_rampTimeRTC\
%assign comma = ", "
%<comma>uint32_T rtu_rampRateRTC\
%assign comma = ", "
%<comma>real32_T rtu_rampTimeTune\
%assign comma = ", "
%<comma>B_get_ramp_parameters_Model_Target_T *localB\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(81, 0, fcnProtoType)>
%endfunction

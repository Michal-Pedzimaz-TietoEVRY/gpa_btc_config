%implements s798_b0_evwnd_226_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

int32_T i;
real32_T Samples;
char_T b_data[56];
static const char_T c[56] = %<(TLC_STR_CTX(115))>;
%closefile localVarDecl
/* {S!d1583}MATLAB Function: '<S351>/ms2samples' */
/* {S!d1586}MATLAB Function: '<S351>/ms2samples' incorporates:
 *  S-Function (TuneVarMEX): '<S351>/Tune Variable'
 */
/*  Invoke the function trigger output */
/* MATLAB Function 'TranslateTrigger/tfunc': '<S354>:1' */
/* '<S354>:1:3' f(); */
/*  Convert from milliseconds to samples */
/* MATLAB Function 'ModelPreAmp/DecRate/AudioPilot35/Audiopilot_3_5/NoiseEstimationVariant/RegularNoiseEstimation/LFNoiseEstimatorCoh/ReferenceLatency/RefLatencySamples/ms2samples': '<S353>:1' */
/*  Use floor to minimize the risk of going noncausal  */
/* '<S353>:1:5' Samples = floor(DelayTimeMS.Value*DecRate/1000); */
/*@>eaf542*/Samples/*@>c7318c*/ = /*@>eafc42*/floorf(/*@>eb013e*/Model_TranslationEngine64_B./*@>eb0310*/RefLatencyMs_l.Value/*@>eaf570*/ * /*@>eaf564*/692.307678F/*@>c73191*/ / /*@>eaf546*/1000.0F);
/* '<S353>:1:8' if Samples > MaxLatencySamples */
/*@>c73168*/if (/*@>c73166*/(real_T)/*@>eaf53c*/Samples/*@>c73165*/ > /*@>eb0175*/Model_TranslationEngine64_ConstB./*@>eb0316*/CapturedTuneConst_d) {
    /* '<S353>:1:9' TranslateError('Delay amount cannot be greater than specified max delay'); */
    /* TRANSLATEERROR (For use in Functions triggered by TranslationTrigger blocks.) */
    /* Print error message during tune data translation. */
    /*   Do not include a final newline as this behavior is already built in. */
    /*   Note that escape sequences such as '\n' will not work here. To emit */
    /*   special characters, pass them in as arguments to %<"\%c or \%s format"> */
    /*   specifiers. */
    /*    Copyright 2018-2019 Bose Corporation */
    /* 'TranslateError:10' coder.extrinsic('gcb') */
    /* 'TranslateError:11' coder.extrinsic('warning') */
    /* 'TranslateError:12' coder.allowpcode('plain'); */
    /*  enable code generation from p-file */
    /* 'TranslateError:14' if (coder.target('MATLAB')) */
    /* 'TranslateError:18' if (coder.target('Sfun')) */
    /* 'TranslateError:21' else */
    /* 'TranslateError:22' count = numel(varargin); */
    /* 'TranslateError:23' fixedArgs = varargin; */
    /* 'TranslateError:24' for i=1:count */
    /* 'TranslateError:25' if (ischar(varargin{i})) */
    /* 'TranslateError:26' fixedArgs{i} = [varargin{i} char(0)]; */
    /* 'TranslateError:29' coder.ceval('TranslateError',fixedArgs{:}); */
/*@>eaf360*/    for (/*@>eb02bf*/i = /*@>eb02be*/0; /*@>eb02c9*/i < /*@>eb02c7*/56; /*@>eb02c5*/i/*@>eb02cd*/++) {
        /*@>eafa67*/b_data[/*@>eaf55b*/i]/*@>eaf353*/ = /*@>eafdf1*/c/*@>eafdf3*/[/*@>eafdf0*/i];
    }
    /*@>eafc44*/TranslateError(&/*@>eafa50*/b_data/*@>eafa63*/[/*@>eaf541*/0]);
}
/*@>eb0144*/Model_TranslationEngine64_B./*@>eb0313*/Samples_g/*@>c7315f*/ = /*@>eaf53a*/Samples;
/* {E!d1586}End of MATLAB Function: '<S351>/ms2samples' */
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void FuncTranslation_Model_117_517_351(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(226, 0, fcnProtoType)>
%endfunction

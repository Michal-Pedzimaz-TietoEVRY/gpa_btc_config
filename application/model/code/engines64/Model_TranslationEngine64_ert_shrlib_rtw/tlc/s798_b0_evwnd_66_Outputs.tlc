%implements s798_b0_evwnd_66_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

int32_T i;
int32_T xpageoffset;
char_T c_data[96];
char_T d_data[78];
int8_T nz[10];
boolean_T x[20];
static const char_T e[96] = %<(TLC_STR_CTX(65))>;
static const char_T f[78] = %<(TLC_STR_CTX(66))>;
%closefile localVarDecl
/* {S!d125}MATLAB Function: '<S854>/Trivial Translation' */
/* {S!d128}MATLAB Function: '<S854>/Trivial Translation' incorporates:
 *  S-Function (TuneVarMEX): '<S854>/Tune Variable'
 */
/*  Invoke the function trigger output */
/* MATLAB Function 'TranslateTrigger/tfunc': '<S867>:1' */
/* '<S867>:1:3' f(); */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 3/On/Premix/Premix with Mono-Surround & CAE with Fade Ramper/Fade Tuning/Downmix Weights CS/Trivial Translation': '<S866>:1' */
/* '<S866>:1:3' numCSIn = MedusaPremixConfig.CS_in; */
/* '<S866>:1:4' NumCAEWeights = MedusaPremixConfig.NumTailComp.CS; */
/* '<S866>:1:6' NumRows = MedusaPremixConfig.CS_out; */
/* '<S866>:1:7' NumColumns = numCSIn + NumCAEWeights; */
/* '<S866>:1:8' if(~ MedusaPremixConfig.includeCAE) */
/* '<S866>:1:9' NumColumns = numCSIn; */
/*  Checks if the parameter satisfies dimensionality requirements */
/* '<S866>:1:13' if(downmix_wts_CS.Size(1) ~= NumRows || downmix_wts_CS.Size(2) ~= NumColumns) */
/*@>c67409*/if ((/*@>d602a7*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d60690*/DownmixWeights_CS./*@>d60687*/Size/*@>d60130*/[/*@>d60129*/0]/*@>c67403*/ != /*@>d5e7d0*/2.0)/*@>d60526*/ || (/*@>d602ad*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d60693*/DownmixWeights_CS./*@>d6068a*/Size/*@>d60139*/[/*@>d60132*/1]/*@>c67405*/ != /*@>d5e7d1*/10.0)) {
    /* '<S866>:1:14' TranslateError('The parameter ''medusa_premix_downmix_cs'' must be a matrix consisting of %<"\%d rows and \%d columns.\', NumRows, NumColumns);"> */
    /* TRANSLATEERROR (For use in Functions triggered by TranslationTrigger blocks.) */
    /* Print error message during tune data translation. */
    /*   Do not include a final newline as this behavior is already built in. */
    /*   Note that escape sequences such as '\n' will not work here. To emit */
    /*   special characters, pass them in as arguments to %<"\%c or \%s format"> */
    /*   specifiers. */
    /*    Copyright 2018-2019 Bose Corporation */
    /* 'TranslateError:10' coder.extrinsic('gcb') */
    /* 'TranslateError:11' coder.extrinsic('warning') */
    /* 'TranslateError:12' coder.allowpcode('plain'); */
    /*  enable code generation from p-file */
    /* 'TranslateError:14' if (coder.target('MATLAB')) */
    /* 'TranslateError:18' if (coder.target('Sfun')) */
    /* 'TranslateError:21' else */
    /* 'TranslateError:22' count = numel(varargin); */
    /* 'TranslateError:23' fixedArgs = varargin; */
    /* 'TranslateError:24' for i=1:count */
    /* 'TranslateError:25' if (ischar(varargin{i})) */
    /* 'TranslateError:26' fixedArgs{i} = [varargin{i} char(0)]; */
    /* 'TranslateError:25' if (ischar(varargin{i})) */
    /* 'TranslateError:29' coder.ceval('TranslateError',fixedArgs{:}); */
    /*@>d5fe21*/memcpy(&/*@>d5fa80*/c_data[/*@>d5fa70*/0], &/*@>d5fa88*/e/*@>d5fa89*/[/*@>d5fa7d*/0], /*@>d5fa7f*/96U/*@>d5fa8c*/ * /*@>d5fa8b*/sizeof(char_T));
    /*@>d5fd0b*/TranslateError(&/*@>d5f755*/c_data/*@>d5f768*/[/*@>d5e7d8*/0], /*@>d5e7d9*/2.0, /*@>d5e7da*/10.0);
}
/*  Checks if the parameter values follow bound requirements */
/* '<S866>:1:18' checkValues = (downmix_wts_CS.Value < 0); */
/*@>d5dcee*/for (/*@>d605b8*/i = /*@>d605b7*/0; /*@>d605c2*/i < /*@>d605c0*/20; /*@>d605be*/i/*@>d605c6*/++) {
    /*@>d5e817*/x/*@>d5dce0*/[/*@>d5e815*/i]/*@>d5dce1*/ = (/*@>d602b3*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d60696*/DownmixWeights_CS./*@>d6068d*/Value/*@>d60143*/[/*@>d6013c*/i]/*@>d5dcd0*/ < /*@>d5e805*/0.0);
}
/* '<S866>:1:19' if(sum(sum(checkValues))) */
/*@>c6747d*/for (/*@>d605a7*/i = /*@>d605a6*/0; /*@>d605b1*/i < /*@>d605af*/10; /*@>d605ad*/i/*@>d605c7*/++) {
    /*@>d5e7e7*/xpageoffset/*@>c67473*/ = /*@>d5e7f6*/i/*@>d5e8a8*/ << /*@>d5e8a7*/1;
    /*@>d5e861*/nz/*@>d5e533*/[/*@>d5e863*/i] = (int8_T)(/*@>d6014e*/x/*@>d60150*/[/*@>d6014c*/xpageoffset/*@>d6014a*/ + /*@>d6014d*/1]/*@>d5ecfa*/ + /*@>d60154*/x/*@>d60156*/[/*@>d60153*/xpageoffset]);
}
/*@>d5e7e9*/xpageoffset/*@>c67490*/ = /*@>d60146*/nz/*@>d60148*/[/*@>d60145*/0];
/*@>c67499*/for (/*@>d60596*/i = /*@>d60595*/0; /*@>d605a0*/i < /*@>d6059e*/9; /*@>d6059c*/i/*@>d605c8*/++) {
    /*@>d5e7f2*/xpageoffset/*@>d605c9*/ += /*@>d6015c*/nz/*@>d6015e*/[/*@>d6015a*/i/*@>d60158*/ + /*@>d6015b*/1];
}
/*@>c6740f*/if (/*@>d5e7d2*/xpageoffset/*@>c67408*/ != /*@>d5e7d4*/0) {
    /*  Results in 0 if all values in the matrix respect the bound requirements */
    /* '<S866>:1:20' TranslateError('The weights in ''medusa_premix_downmix_CS'' must be greater than or equal to 0.'); */
    /* TRANSLATEERROR (For use in Functions triggered by TranslationTrigger blocks.) */
    /* Print error message during tune data translation. */
    /*   Do not include a final newline as this behavior is already built in. */
    /*   Note that escape sequences such as '\n' will not work here. To emit */
    /*   special characters, pass them in as arguments to %<"\%c or \%s format"> */
    /*   specifiers. */
    /*    Copyright 2018-2019 Bose Corporation */
    /* 'TranslateError:10' coder.extrinsic('gcb') */
    /* 'TranslateError:11' coder.extrinsic('warning') */
    /* 'TranslateError:12' coder.allowpcode('plain'); */
    /*  enable code generation from p-file */
    /* 'TranslateError:14' if (coder.target('MATLAB')) */
    /* 'TranslateError:18' if (coder.target('Sfun')) */
    /* 'TranslateError:21' else */
    /* 'TranslateError:22' count = numel(varargin); */
    /* 'TranslateError:23' fixedArgs = varargin; */
    /* 'TranslateError:24' for i=1:count */
    /* 'TranslateError:25' if (ischar(varargin{i})) */
    /* 'TranslateError:26' fixedArgs{i} = [varargin{i} char(0)]; */
    /* 'TranslateError:29' coder.ceval('TranslateError',fixedArgs{:}); */
    /*@>d5fe23*/memcpy(&/*@>d5fa1e*/d_data[/*@>d5fa0e*/0], &/*@>d5fa26*/f/*@>d5fa27*/[/*@>d5fa1b*/0], /*@>d5fa1d*/78U/*@>d5fa2a*/ * /*@>d5fa29*/sizeof(char_T));
    /*@>d5fd0f*/TranslateError(&/*@>d5f7b3*/d_data/*@>d5f7c6*/[/*@>d5e7de*/0]);
}
/*  Assigning the parameter values to respective tuneTOPS */
/* '<S866>:1:24' TOP = downmix_wts_CS.Value(:, 1:numCSIn); */
/*@>d5fe25*/memcpy(&/*@>d602bf*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d60699*/TOP_co/*@>d5f9bf*/[/*@>d5f9ae*/0], &/*@>d602c5*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d6069c*/DownmixWeights_CS./*@>d60684*/Value[0], /*@>d5f9bd*/20U/*@>d5f9d0*/ * /*@>d5f9cf*/sizeof(real_T));
/* '<S866>:1:25' if(~ MedusaPremixConfig.includeCAE) */
/* '<S866>:1:26' TOP_CAE = zeros(NumRows, NumCAEWeights); */
/*@>d602cb*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d6069f*/TOP_CAE_h/*@>d5e5fb*/[/*@>d5e86f*/0]/*@>d5e5fa*/ = /*@>d5e86e*/0.0;
/*@>d602d1*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d606a2*/TOP_CAE_h/*@>d5e604*/[/*@>d5e873*/1]/*@>d5e603*/ = /*@>d5e872*/0.0;
/*@>d602d7*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d606a5*/TOP_CAE_h/*@>d5e60d*/[/*@>d5e877*/2]/*@>d5e60c*/ = /*@>d5e876*/0.0;
/*@>d602dd*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d606a8*/TOP_CAE_h/*@>d5e616*/[/*@>d5e87b*/3]/*@>d5e615*/ = /*@>d5e87a*/0.0;
/* {E!d128}End of MATLAB Function: '<S854>/Trivial Translation' */
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void FuncTranslation_Model_141_3609(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(66, 0, fcnProtoType)>
%endfunction

%implements s798_b0_evwnd_289_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

int32_T i;
char_T b_data[58];
char_T c_data[26];
static const char_T d[58] = %<(TLC_STR_CTX(129))>;
static const char_T e[58] = %<(TLC_STR_CTX(130))>;
static const char_T f[26] = %<(TLC_STR_CTX(131))>;
%closefile localVarDecl
/* {S!d1881}MATLAB Function: '<S673>/Trivial Translation' */
/* {S!d1884}MATLAB Function: '<S673>/Trivial Translation' incorporates:
 *  S-Function (TuneVarMEX): '<S666>/Tune Variable7'
 *  S-Function (TuneVarMEX): '<S673>/Tune Variable'
 *  S-Function (TuneVarMEX): '<S673>/Tune Variable3'
 *
 * Block description for '<S666>/Tune Variable7':
 *  Minimum stretch factor - must be in range [0,1)
 *
 * Block description for '<S673>/Tune Variable':
 *  Maximum stretch factor - must be in range [0,1).
 *
 * Block description for '<S673>/Tune Variable3':
 *  Minimum stretch factor - must be in range [0,1)
 */
/*  Invoke the function trigger output */
/* MATLAB Function 'TranslateTrigger/tfunc': '<S678>:1' */
/* '<S678>:1:3' f(); */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 2/Full-Rate FDP/Fdp/FreqDomainProcessing/CalculateAndApplyCoefficients/FullRate/Calculate coefficients/StretchParams/Trivial Translation': '<S676>:1' */
/* '<S676>:1:3' XpMax = XpMaxIn.Value; */
/* '<S676>:1:4' XpMin = XpMinIn.Value; */
/* '<S676>:1:6' if (XpMin < 0) || (XpMin >= 1) */
/*@>c6bdb8*/if ((/*@>f07849*/Model_TranslationEngine64_B./*@>f07c9b*/XpMin_c.Value/*@>c6bdad*/ < /*@>f05e23*/0.0)/*@>c6be67*/ || (/*@>f0784f*/Model_TranslationEngine64_B./*@>f07c9e*/XpMin_c.Value/*@>c6bdae*/ >= /*@>f05e24*/1.0)) {
    /* '<S676>:1:7' TranslateError('XpMin must be no less than 0.0, and must be less than 1.0'); */
    /* TRANSLATEERROR (For use in Functions triggered by TranslationTrigger blocks.) */
    /* Print error message during tune data translation. */
    /*   Do not include a final newline as this behavior is already built in. */
    /*   Note that escape sequences such as '\n' will not work here. To emit */
    /*   special characters, pass them in as arguments to %<"\%c or \%s format"> */
    /*   specifiers. */
    /*    Copyright 2018-2019 Bose Corporation */
    /* 'TranslateError:10' coder.extrinsic('gcb') */
    /* 'TranslateError:11' coder.extrinsic('warning') */
    /* 'TranslateError:12' coder.allowpcode('plain'); */
    /*  enable code generation from p-file */
    /* 'TranslateError:14' if (coder.target('MATLAB')) */
    /* 'TranslateError:18' if (coder.target('Sfun')) */
    /* 'TranslateError:21' else */
    /* 'TranslateError:22' count = numel(varargin); */
    /* 'TranslateError:23' fixedArgs = varargin; */
    /* 'TranslateError:24' for i=1:count */
    /* 'TranslateError:25' if (ischar(varargin{i})) */
    /* 'TranslateError:26' fixedArgs{i} = [varargin{i} char(0)]; */
    /* 'TranslateError:29' coder.ceval('TranslateError',fixedArgs{:}); */
/*@>f05893*/    for (/*@>f07bca*/i = /*@>f07bc9*/0; /*@>f07bd4*/i < /*@>f07bd2*/58; /*@>f07bd0*/i/*@>f07bd8*/++) {
        /*@>f06aac*/b_data[/*@>f05e8e*/i]/*@>f05886*/ = /*@>f0748e*/d/*@>f07490*/[/*@>f0748d*/i];
    }
    /*@>f06fb8*/TranslateError(&/*@>f06a95*/b_data/*@>f06aa8*/[/*@>f05e2e*/0]);
}
/* '<S676>:1:10' if (XpMax < 0) || (XpMax >= 1) */
/*@>c6bdba*/if ((/*@>f07855*/Model_TranslationEngine64_B./*@>f07ca1*/XpMax_ce.Value/*@>c6bdaf*/ < /*@>f05e25*/0.0)/*@>c6be68*/ || (/*@>f0785b*/Model_TranslationEngine64_B./*@>f07ca4*/XpMax_ce.Value/*@>c6bdb0*/ >= /*@>f05e26*/1.0)) {
    /* '<S676>:1:11' TranslateError('XpMax must be no less than 0.0, and must be less than 1.0'); */
    /* TRANSLATEERROR (For use in Functions triggered by TranslationTrigger blocks.) */
    /* Print error message during tune data translation. */
    /*   Do not include a final newline as this behavior is already built in. */
    /*   Note that escape sequences such as '\n' will not work here. To emit */
    /*   special characters, pass them in as arguments to %<"\%c or \%s format"> */
    /*   specifiers. */
    /*    Copyright 2018-2019 Bose Corporation */
    /* 'TranslateError:10' coder.extrinsic('gcb') */
    /* 'TranslateError:11' coder.extrinsic('warning') */
    /* 'TranslateError:12' coder.allowpcode('plain'); */
    /*  enable code generation from p-file */
    /* 'TranslateError:14' if (coder.target('MATLAB')) */
    /* 'TranslateError:18' if (coder.target('Sfun')) */
    /* 'TranslateError:21' else */
    /* 'TranslateError:22' count = numel(varargin); */
    /* 'TranslateError:23' fixedArgs = varargin; */
    /* 'TranslateError:24' for i=1:count */
    /* 'TranslateError:25' if (ischar(varargin{i})) */
    /* 'TranslateError:26' fixedArgs{i} = [varargin{i} char(0)]; */
    /* 'TranslateError:29' coder.ceval('TranslateError',fixedArgs{:}); */
/*@>f05962*/    for (/*@>f07bb9*/i = /*@>f07bb8*/0; /*@>f07bc3*/i < /*@>f07bc1*/58; /*@>f07bbf*/i/*@>f07bd9*/++) {
        /*@>f06b0a*/b_data[/*@>f05ea8*/i]/*@>f05955*/ = /*@>f07494*/e/*@>f07496*/[/*@>f07493*/i];
    }
    /*@>f06fba*/TranslateError(&/*@>f06af3*/b_data/*@>f06b06*/[/*@>f05e32*/0]);
}
/* '<S676>:1:14' if (XpMax < XpMin) */
/*@>c6bdbc*/if (/*@>f07861*/Model_TranslationEngine64_B./*@>f07ca7*/XpMax_ce.Value/*@>c6bdb1*/ < /*@>f07867*/Model_TranslationEngine64_B./*@>f07caa*/XpMin_c.Value) {
    /* '<S676>:1:15' TranslateError('XpMin cannot exceed XpMax'); */
    /* TRANSLATEERROR (For use in Functions triggered by TranslationTrigger blocks.) */
    /* Print error message during tune data translation. */
    /*   Do not include a final newline as this behavior is already built in. */
    /*   Note that escape sequences such as '\n' will not work here. To emit */
    /*   special characters, pass them in as arguments to %<"\%c or \%s format"> */
    /*   specifiers. */
    /*    Copyright 2018-2019 Bose Corporation */
    /* 'TranslateError:10' coder.extrinsic('gcb') */
    /* 'TranslateError:11' coder.extrinsic('warning') */
    /* 'TranslateError:12' coder.allowpcode('plain'); */
    /*  enable code generation from p-file */
    /* 'TranslateError:14' if (coder.target('MATLAB')) */
    /* 'TranslateError:18' if (coder.target('Sfun')) */
    /* 'TranslateError:21' else */
    /* 'TranslateError:22' count = numel(varargin); */
    /* 'TranslateError:23' fixedArgs = varargin; */
    /* 'TranslateError:24' for i=1:count */
    /* 'TranslateError:25' if (ischar(varargin{i})) */
    /* 'TranslateError:26' fixedArgs{i} = [varargin{i} char(0)]; */
    /* 'TranslateError:29' coder.ceval('TranslateError',fixedArgs{:}); */
/*@>f059f3*/    for (/*@>f07ba8*/i = /*@>f07ba7*/0; /*@>f07bb2*/i < /*@>f07bb0*/26; /*@>f07bae*/i/*@>f07bda*/++) {
        /*@>f06b3b*/c_data[/*@>f05ebc*/i]/*@>f059e6*/ = /*@>f0749a*/f/*@>f0749c*/[/*@>f07499*/i];
    }
    /*@>f06fbc*/TranslateError(&/*@>f06b24*/c_data/*@>f06b37*/[/*@>f05e36*/0]);
}
/*  Do not need to check for translation error as this is already done in */
/*  Decimated Rate block. */
/* '<S676>:1:20' deciXpMax = deciXpMaxIn.Value; */
/*  NOTE: The Xp used for detect is the decimated rate Xp while the Xp */
/*  used for the XpMax (in the dynamically created Xp) is the treble Xp. */
/*  All parameters are also treble-specific (different from decimated rate). */
/*  This means the LokRokMaxScaleFactor for treble stretching is calculated */
/*  using the decimated rate XpMax. */
/* '<S676>:1:27' if (deciXpMax == 1) */
/*@>c6bdbe*/if (/*@>f0786d*/Model_TranslationEngine64_B./*@>f07cad*/XpMax_c.Value/*@>c6bdb2*/ == /*@>f05e27*/1.0) {
    /* '<S676>:1:28' LokRokMaxScaleFactor = 0; */
    /*@>f07873*/Model_TranslationEngine64_B./*@>f07cb0*/LokRokMaxScaleFactor/*@>c6bdab*/ = /*@>f05e28*/0.0;
} else {
    /* '<S676>:1:29' else */
    /* '<S676>:1:30' LokRokMaxScaleFactor = 0.5 * deciXpMax / (1 - deciXpMax); */
    /*@>f07879*/Model_TranslationEngine64_B./*@>f07cb3*/LokRokMaxScaleFactor/*@>c6bdac*/ = /*@>f05e29*/0.5/*@>f05ef4*/ * /*@>f0787f*/Model_TranslationEngine64_B./*@>f07cb6*/XpMax_c.Value/*@>c6bdb5*/ / (/*@>f05e2a*/1.0/*@>c6bdb4*/ - /*@>f07885*/Model_TranslationEngine64_B./*@>f07cb9*/XpMax_c.Value);
}
/*@>f0788b*/Model_TranslationEngine64_B./*@>f07cbc*/XpMax_n/*@>c6bd9d*/ = /*@>f07891*/Model_TranslationEngine64_B./*@>f07cbf*/XpMax_ce.Value;
/*@>f07897*/Model_TranslationEngine64_B./*@>f07cc2*/XpMin_h/*@>c6bda1*/ = /*@>f0789d*/Model_TranslationEngine64_B./*@>f07cc5*/XpMin_c.Value;
/* {E!d1884}End of MATLAB Function: '<S673>/Trivial Translation' */
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void FuncTranslation_Model_141_2423(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(289, 0, fcnProtoType)>
%endfunction

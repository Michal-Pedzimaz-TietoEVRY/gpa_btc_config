%implements s798_b0_evwnd_323_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

int32_T i;
%closefile localVarDecl
/* {S!d2265}MATLAB Function: '<S1112>/channel_ramper_translation' */
/* {S!d2268}MATLAB Function: '<S1112>/channel_ramper_translation' incorporates:
 *  S-Function (TuneVarMEX): '<S1112>/TuneVarChannelRamperMap'
 */
/*  Invoke the function trigger output */
/* MATLAB Function 'TranslateTrigger/tfunc': '<S1119>:1' */
/* '<S1119>:1:3' f(); */
/*  %<"\%Inputs"> */
/*  Parameters */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/SleepingBeauty/SleepingBeauty/Enabled/SleepingBeautyDR/InnerLink/channel_ramper_translation': '<S1118>:1' */
/*  Function that verifies channel-to-ramper map is valid */
/*  Takes channelRamperMap and channelCount as inputs, and  */
/*  number of rampers as a parameter */
/* '<S1118>:1:7' argName = 'SleepingBeauty'; */
/*  Ensure each channel is present in the map */
/* '<S1118>:1:10' inputMapWidth = numel(TuneChanRampMap.Value); */
/* '<S1118>:1:11' if (inputMapWidth ~= channelCount) */
/*  Verifies if each channel is assigned to one of the 5 possible rampers. */
/* '<S1118>:1:20' if (numel(unique(TuneChanRampMap.Value)) > (MaskNumRampers + 1)) */
/*  Verify that a value of 0 was not incorrectly entered as a ramper */
/* '<S1118>:1:28' if (sum(TuneChanRampMap.Value == 0) > 0) */
/* '<S1118>:1:34' ChanRampMap = int32(TuneChanRampMap.Value); */
/*@>f5a4b4*/for (/*@>f5bb8b*/i = /*@>f5bb8a*/0; /*@>f5bb95*/i < /*@>f5bb93*/30; /*@>f5bb91*/i/*@>f5bb99*/++) {
    /*@>f5b9b1*/Model_TranslationEngine64_B./*@>f5bbc3*/ChanRampMap_c/*@>f5a535*/[/*@>f5ae94*/i]/*@>f5a4a3*/ = /*@>f5ae9b*/(int32_T)%<SLibCG_DumpSSCode("/*@[f5bb4b*/",(SLibCGCallSubFcn("rt_roundd_snf", ["/*@>f5bbe2*/Model_TranslationEngine64_B./*@>f5bbe1*/ChannelToRamperMap_f./*@>f5bbe0*/Value/*@>f5bbdf*/[/*@>f5bbe5*/i]"], 323, 1, 0)),"/*@]*/")>;
}
/* {E!d2268}End of MATLAB Function: '<S1112>/channel_ramper_translation' */
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void FuncTranslation_Model_533(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(323, 1, fcnProtoType)>
%endfunction

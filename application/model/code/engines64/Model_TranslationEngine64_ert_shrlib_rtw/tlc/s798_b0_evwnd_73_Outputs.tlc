%implements s798_b0_evwnd_73_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

real_T b;
int32_T nz[7];
int32_T i;
int32_T k;
char_T c_data[98];
char_T d_data[80];
boolean_T x[77];
static const char_T e[98] = %<(TLC_STR_CTX(75))>;
static const char_T f[80] = %<(TLC_STR_CTX(76))>;
%closefile localVarDecl
/* {S!d153}MATLAB Function: '<S882>/Trivial Translation' */
/* {S!d156}MATLAB Function: '<S882>/Trivial Translation' incorporates:
 *  S-Function (TuneVarMEX): '<S882>/Tune Variable'
 */
/*  Invoke the function trigger output */
/* MATLAB Function 'TranslateTrigger/tfunc': '<S898>:1' */
/* '<S898>:1:3' f(); */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 3/On/Premix/Premix with Mono-Surround & CAE with Fade Ramper/SLC Tuning/Detent Level Right/Trivial Translation': '<S897>:1' */
/* '<S897>:1:3' numLRIn = MedusaPremixConfig.LR_in; */
/* '<S897>:1:4' NumCAEWeights = MedusaPremixConfig.NumTailComp.LR; */
/* '<S897>:1:6' NumRows = MedusaPremixConfig.LR_out; */
/* '<S897>:1:7' NumColumns = numLRIn + NumCAEWeights; */
/* '<S897>:1:8' if(~ MedusaPremixConfig.includeCAE) */
/* '<S897>:1:9' NumColumns = numLRIn; */
/*  Checks if the parameter satisfies dimensionality requirements */
/* '<S897>:1:13' if(detentGain_Right.Size(1) ~= NumRows || detentGain_Right.Size(2) ~= NumColumns) */
/*@>c67a91*/if ((/*@>d718a8*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d71c9b*/DetentLevel_Right./*@>d71c92*/Size/*@>d71728*/[/*@>d71721*/0]/*@>c67a8b*/ != /*@>d6fd58*/11.0)/*@>d71b18*/ || (/*@>d718ae*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d71c9e*/DetentLevel_Right./*@>d71c95*/Size/*@>d71731*/[/*@>d7172a*/1]/*@>c67a8d*/ != /*@>d6fd59*/7.0)) {
    /* '<S897>:1:14' TranslateError('The parameter ''medusa_premix_right_detent'' must be a matrix consisting of %<"\%d rows and \%d columns.\', NumRows, NumColumns);"> */
    /* TRANSLATEERROR (For use in Functions triggered by TranslationTrigger blocks.) */
    /* Print error message during tune data translation. */
    /*   Do not include a final newline as this behavior is already built in. */
    /*   Note that escape sequences such as '\n' will not work here. To emit */
    /*   special characters, pass them in as arguments to %<"\%c or \%s format"> */
    /*   specifiers. */
    /*    Copyright 2018-2019 Bose Corporation */
    /* 'TranslateError:10' coder.extrinsic('gcb') */
    /* 'TranslateError:11' coder.extrinsic('warning') */
    /* 'TranslateError:12' coder.allowpcode('plain'); */
    /*  enable code generation from p-file */
    /* 'TranslateError:14' if (coder.target('MATLAB')) */
    /* 'TranslateError:18' if (coder.target('Sfun')) */
    /* 'TranslateError:21' else */
    /* 'TranslateError:22' count = numel(varargin); */
    /* 'TranslateError:23' fixedArgs = varargin; */
    /* 'TranslateError:24' for i=1:count */
    /* 'TranslateError:25' if (ischar(varargin{i})) */
    /* 'TranslateError:26' fixedArgs{i} = [varargin{i} char(0)]; */
    /* 'TranslateError:25' if (ischar(varargin{i})) */
    /* 'TranslateError:29' coder.ceval('TranslateError',fixedArgs{:}); */
    /*@>d713f8*/memcpy(&/*@>d71065*/c_data[/*@>d71055*/0], &/*@>d7106d*/e/*@>d7106e*/[/*@>d71062*/0], /*@>d71064*/98U/*@>d71071*/ * /*@>d71070*/sizeof(char_T));
    /*@>d712e2*/TranslateError(&/*@>d70d38*/c_data/*@>d70d4b*/[/*@>d6fd60*/0], /*@>d6fd61*/11.0, /*@>d6fd62*/7.0);
}
/*  Checks if the parameter values follow bound requirements */
/* '<S897>:1:18' checkValues = (detentGain_Right.Value < 0); */
/*@>d6f2a9*/for (/*@>d71bbc*/i = /*@>d71bbb*/0; /*@>d71bc6*/i < /*@>d71bc4*/77; /*@>d71bc2*/i/*@>d71bca*/++) {
    /*@>d6fdb6*/x/*@>d6f29b*/[/*@>d6fdb4*/i]/*@>d6f29c*/ = (/*@>d718b4*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d71ca1*/DetentLevel_Right./*@>d71c98*/Value/*@>d7173b*/[/*@>d71734*/i]/*@>d6f28b*/ < /*@>d6fda2*/0.0);
}
/* '<S897>:1:19' if(sum(sum(checkValues))) */
/*@>c67b06*/for (/*@>d71b9a*/i = /*@>d71b99*/0; /*@>d71ba4*/i < /*@>d71ba2*/7; /*@>d71ba0*/i/*@>d71bcb*/++) {
    int32_T xpageoffset;
    /*@>d6fd6f*/xpageoffset/*@>c67afb*/ = /*@>d6fd83*/i/*@>d6fe43*/ * /*@>d6fd6e*/11;
    /*@>d6fdc1*/nz/*@>d6fa94*/[/*@>d6fdc3*/i]/*@>c67aff*/ = /*@>d71744*/x/*@>d71746*/[/*@>d71743*/xpageoffset];
/*@>c67b0a*/    for (/*@>d71bab*/k = /*@>d71baa*/0; /*@>d71bb5*/k < /*@>d71bb3*/10; /*@>d71bb1*/k/*@>d71bcc*/++) {
        /*@>d706e8*/nz/*@>d706e7*/[/*@>d706ea*/i] += /*@>d71757*/x/*@>d71759*/[(/*@>d71753*/xpageoffset/*@>d71751*/ + /*@>d71755*/k)/*@>d71750*/ + /*@>d71756*/1];
    }
}
/*@>d6fd76*/b/*@>c67b1f*/ = /*@>d7173e*/nz/*@>d71740*/[/*@>d7173d*/0];
/*@>c67b28*/for (/*@>d71b89*/i = /*@>d71b88*/0; /*@>d71b93*/i < /*@>d71b91*/6; /*@>d71b8f*/i/*@>d71bce*/++) {
    /*@>d6fd7f*/b/*@>d71bcf*/ += /*@>d700b7*/(real_T)/*@>d7174c*/nz/*@>d7174e*/[/*@>d7174a*/i/*@>d71748*/ + /*@>d7174b*/1];
}
/*@>c67a97*/if (/*@>d6fd5a*/b/*@>c67a90*/ != /*@>d6fd5c*/0.0) {
    /*  Results in 0 if all values in the matrix respect the bound requirements */
    /* '<S897>:1:20' TranslateError('The weights in ''medusa_premix_right_detent'' must be greater than or equal to 0.'); */
    /* TRANSLATEERROR (For use in Functions triggered by TranslationTrigger blocks.) */
    /* Print error message during tune data translation. */
    /*   Do not include a final newline as this behavior is already built in. */
    /*   Note that escape sequences such as '\n' will not work here. To emit */
    /*   special characters, pass them in as arguments to %<"\%c or \%s format"> */
    /*   specifiers. */
    /*    Copyright 2018-2019 Bose Corporation */
    /* 'TranslateError:10' coder.extrinsic('gcb') */
    /* 'TranslateError:11' coder.extrinsic('warning') */
    /* 'TranslateError:12' coder.allowpcode('plain'); */
    /*  enable code generation from p-file */
    /* 'TranslateError:14' if (coder.target('MATLAB')) */
    /* 'TranslateError:18' if (coder.target('Sfun')) */
    /* 'TranslateError:21' else */
    /* 'TranslateError:22' count = numel(varargin); */
    /* 'TranslateError:23' fixedArgs = varargin; */
    /* 'TranslateError:24' for i=1:count */
    /* 'TranslateError:25' if (ischar(varargin{i})) */
    /* 'TranslateError:26' fixedArgs{i} = [varargin{i} char(0)]; */
    /* 'TranslateError:29' coder.ceval('TranslateError',fixedArgs{:}); */
    /*@>d713fa*/memcpy(&/*@>d71002*/d_data[/*@>d70ff2*/0], &/*@>d7100a*/f/*@>d7100b*/[/*@>d70fff*/0], /*@>d71001*/80U/*@>d7100e*/ * /*@>d7100d*/sizeof(char_T));
    /*@>d712e6*/TranslateError(&/*@>d70d96*/d_data/*@>d70da9*/[/*@>d6fd66*/0]);
}
/*  Assigning the parameter values to respective tuneTOPS */
/* '<S897>:1:24' TOP = detentGain_Right.Value(:, 1:numLRIn); */
/*@>d713fc*/memcpy(&/*@>d718c0*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d71ca4*/TOP_h/*@>d70fa3*/[/*@>d70f92*/0], &/*@>d718c6*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d71ca7*/DetentLevel_Right./*@>d71c8f*/Value[0], /*@>d70fa1*/77U/*@>d70fb4*/ * /*@>d70fb3*/sizeof(real_T));
/* '<S897>:1:25' if(~ MedusaPremixConfig.includeCAE) */
/* '<S897>:1:26' TOP_CAE = zeros(NumRows, NumCAEWeights); */
/*@>d71407*/memset(&/*@>d718d2*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d71caa*/TOP_CAE_e/*@>d71115*/[/*@>d71111*/0], /*@>d71b81*/0, /*@>d71113*/33U/*@>d7111b*/ * /*@>d7111a*/sizeof(real_T));
/* {E!d156}End of MATLAB Function: '<S882>/Trivial Translation' */
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void FuncTranslation_Model_141_4107(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(73, 0, fcnProtoType)>
%endfunction

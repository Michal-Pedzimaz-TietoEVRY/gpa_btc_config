%implements s798_b0_evwnd_49_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

int32_T nz[3];
int32_T i;
int32_T k;
char_T c_data[95];
char_T d_data[77];
boolean_T x[30];
static const char_T e[95] = %<(TLC_STR_CTX(42))>;
static const char_T f[77] = %<(TLC_STR_CTX(43))>;
%closefile localVarDecl
/* {S!d57}MATLAB Function: '<S779>/Trivial Translation' */
/* {S!d60}MATLAB Function: '<S779>/Trivial Translation' incorporates:
 *  S-Function (TuneVarMEX): '<S779>/Tune Variable'
 */
/*  Invoke the function trigger output */
/* MATLAB Function 'TranslateTrigger/tfunc': '<S794>:1' */
/* '<S794>:1:3' f(); */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 3/On/Full-rate Mixer/Full-Rate Mixer with CAE & Fade Ramper/Fade Tuning/Downmix Weights Left/Trivial Translation': '<S793>:1' */
/* '<S793>:1:3' numLRIn = MedusaFRMConfig.LR_in; */
/* '<S793>:1:4' NumCAEWeights = MedusaFRMConfig.NumTailComp.LR; */
/* '<S793>:1:6' NumRows = MedusaFRMConfig.LR_out; */
/* '<S793>:1:7' NumColumns = numLRIn + NumCAEWeights; */
/* '<S793>:1:8' if(~ MedusaFRMConfig.includeCAE) */
/* '<S793>:1:9' NumColumns = numLRIn; */
/*  Checks if the parameter satisfies dimensionality requirements */
/* '<S793>:1:13' if(downmix_wts_Left.Size(1) ~= NumRows || downmix_wts_Left.Size(2) ~= NumColumns) */
/*@>c6636f*/if ((/*@>d354ae*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d35851*/DownmixWeights_Left_n./*@>d35848*/Size/*@>d35334*/[/*@>d3532d*/0]/*@>c66368*/ != /*@>d3388e*/10.0)/*@>d356f5*/ || (/*@>d354b4*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d35854*/DownmixWeights_Left_n./*@>d3584b*/Size/*@>d3533d*/[/*@>d35336*/1]/*@>c6636a*/ != /*@>d3388f*/3.0)) {
    /* '<S793>:1:14' TranslateError('The parameter ''medusa_frm_downmix_left'' must be a matrix consisting of %<"\%d rows and \%d columns.\', NumRows, NumColumns);"> */
    /* TRANSLATEERROR (For use in Functions triggered by TranslationTrigger blocks.) */
    /* Print error message during tune data translation. */
    /*   Do not include a final newline as this behavior is already built in. */
    /*   Note that escape sequences such as '\n' will not work here. To emit */
    /*   special characters, pass them in as arguments to %<"\%c or \%s format"> */
    /*   specifiers. */
    /*    Copyright 2018-2019 Bose Corporation */
    /* 'TranslateError:10' coder.extrinsic('gcb') */
    /* 'TranslateError:11' coder.extrinsic('warning') */
    /* 'TranslateError:12' coder.allowpcode('plain'); */
    /*  enable code generation from p-file */
    /* 'TranslateError:14' if (coder.target('MATLAB')) */
    /* 'TranslateError:18' if (coder.target('Sfun')) */
    /* 'TranslateError:21' else */
    /* 'TranslateError:22' count = numel(varargin); */
    /* 'TranslateError:23' fixedArgs = varargin; */
    /* 'TranslateError:24' for i=1:count */
    /* 'TranslateError:25' if (ischar(varargin{i})) */
    /* 'TranslateError:26' fixedArgs{i} = [varargin{i} char(0)]; */
    /* 'TranslateError:25' if (ischar(varargin{i})) */
    /* 'TranslateError:29' coder.ceval('TranslateError',fixedArgs{:}); */
    /*@>d35024*/memcpy(&/*@>d34c98*/c_data[/*@>d34c88*/0], &/*@>d34ca0*/e/*@>d34ca1*/[/*@>d34c95*/0], /*@>d34c97*/95U/*@>d34ca4*/ * /*@>d34ca3*/sizeof(char_T));
    /*@>d34f03*/TranslateError(&/*@>d34969*/c_data/*@>d3497c*/[/*@>d33896*/0], /*@>d33897*/10.0, /*@>d33898*/3.0);
}
/*  Checks if the parameter values follow bound requirements */
/* '<S793>:1:18' checkValues = (downmix_wts_Left.Value < 0); */
/*@>d32e14*/for (/*@>d35784*/i = /*@>d35783*/0; /*@>d3578e*/i < /*@>d3578c*/30; /*@>d3578a*/i/*@>d35792*/++) {
    /*@>d338e3*/x/*@>d32e06*/[/*@>d338e1*/i]/*@>d32e07*/ = (/*@>d354ba*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d35857*/DownmixWeights_Left_n./*@>d3584e*/Value/*@>d35347*/[/*@>d35340*/i]/*@>d32df6*/ < /*@>d338cf*/0.0);
}
/* '<S793>:1:19' if(sum(sum(checkValues))) */
/*@>c663e4*/for (/*@>d35762*/i = /*@>d35761*/0; /*@>d3576c*/i < /*@>d3576a*/3; /*@>d35768*/i/*@>d35793*/++) {
    int32_T xpageoffset;
    /*@>d338a5*/xpageoffset/*@>c663d9*/ = /*@>d338b0*/i/*@>d33983*/ * /*@>d338a4*/10;
    /*@>d338ee*/nz/*@>d33597*/[/*@>d338f0*/i]/*@>c663dd*/ = /*@>d3535a*/x/*@>d3535c*/[/*@>d35359*/xpageoffset];
/*@>c663e8*/    for (/*@>d35773*/k = /*@>d35772*/0; /*@>d3577d*/k < /*@>d3577b*/9; /*@>d35779*/k/*@>d35794*/++) {
        /*@>d3432c*/nz/*@>d3432b*/[/*@>d3432e*/i] += /*@>d35365*/x/*@>d35367*/[(/*@>d35361*/xpageoffset/*@>d3535f*/ + /*@>d35363*/k)/*@>d3535e*/ + /*@>d35364*/1];
    }
}
/*@>c66375*/if ((/*@>d33e3a*/(real_T)/*@>d3534a*/nz/*@>d3534c*/[/*@>d35349*/0]/*@>d33e39*/ + /*@>d33e3f*/(real_T)/*@>d3534f*/nz/*@>d35351*/[/*@>d3534e*/1])/*@>d33dc9*/ + /*@>d33dcc*/(real_T)/*@>d35354*/nz/*@>d35356*/[/*@>d35353*/2]/*@>c6636d*/ != /*@>d33892*/0.0) {
    /*  Results in 0 if all values in the matrix respect the bound requirements */
    /* '<S793>:1:20' TranslateError('The weights in ''medusa_frm_downmix_left'' must be greater than or equal to 0.'); */
    /* TRANSLATEERROR (For use in Functions triggered by TranslationTrigger blocks.) */
    /* Print error message during tune data translation. */
    /*   Do not include a final newline as this behavior is already built in. */
    /*   Note that escape sequences such as '\n' will not work here. To emit */
    /*   special characters, pass them in as arguments to %<"\%c or \%s format"> */
    /*   specifiers. */
    /*    Copyright 2018-2019 Bose Corporation */
    /* 'TranslateError:10' coder.extrinsic('gcb') */
    /* 'TranslateError:11' coder.extrinsic('warning') */
    /* 'TranslateError:12' coder.allowpcode('plain'); */
    /*  enable code generation from p-file */
    /* 'TranslateError:14' if (coder.target('MATLAB')) */
    /* 'TranslateError:18' if (coder.target('Sfun')) */
    /* 'TranslateError:21' else */
    /* 'TranslateError:22' count = numel(varargin); */
    /* 'TranslateError:23' fixedArgs = varargin; */
    /* 'TranslateError:24' for i=1:count */
    /* 'TranslateError:25' if (ischar(varargin{i})) */
    /* 'TranslateError:26' fixedArgs{i} = [varargin{i} char(0)]; */
    /* 'TranslateError:29' coder.ceval('TranslateError',fixedArgs{:}); */
    /*@>d35026*/memcpy(&/*@>d34c37*/d_data[/*@>d34c27*/0], &/*@>d34c3f*/f/*@>d34c40*/[/*@>d34c34*/0], /*@>d34c36*/77U/*@>d34c43*/ * /*@>d34c42*/sizeof(char_T));
    /*@>d34f07*/TranslateError(&/*@>d349c7*/d_data/*@>d349da*/[/*@>d3389c*/0]);
}
/*  Assigning the parameter values to respective tuneTOPS */
/* '<S793>:1:24' TOP = downmix_wts_Left.Value(:, 1:numLRIn); */
/*@>d35028*/memcpy(&/*@>d354c6*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d3585a*/TOP_kd/*@>d34bd8*/[/*@>d34bc7*/0], &/*@>d354cc*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d3585d*/DownmixWeights_Left_n./*@>d35845*/Value[0], /*@>d34bd6*/30U/*@>d34be9*/ * /*@>d34be8*/sizeof(real_T));
/* '<S793>:1:25' if(~ MedusaFRMConfig.includeCAE) */
/* '<S793>:1:26' TOP_CAE = zeros(NumRows, NumCAEWeights); */
/*@>d35033*/memset(&/*@>d354d8*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d35860*/TOP_CAE_ja/*@>d34d42*/[/*@>d34d3e*/0], /*@>d3575a*/0, /*@>d34d40*/10U/*@>d34d48*/ * /*@>d34d47*/sizeof(real_T));
/* {E!d60}End of MATLAB Function: '<S779>/Trivial Translation' */
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void FuncTranslation_Model_141_2947(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(49, 0, fcnProtoType)>
%endfunction

%implements s798_b0_evwnd_57_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

int32_T i;
int32_T xpageoffset;
char_T c_data[89];
char_T d_data[71];
int8_T nz[6];
boolean_T x[12];
static const char_T e[89] = %<(TLC_STR_CTX(52))>;
static const char_T f[71] = %<(TLC_STR_CTX(53))>;
%closefile localVarDecl
/* {S!d89}MATLAB Function: '<S808>/Trivial Translation' */
/* {S!d92}MATLAB Function: '<S808>/Trivial Translation' incorporates:
 *  S-Function (TuneVarMEX): '<S808>/Tune Variable'
 */
/*  Invoke the function trigger output */
/* MATLAB Function 'TranslateTrigger/tfunc': '<S828>:1' */
/* '<S828>:1:3' f(); */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 3/On/Full-rate Mixer/Full-Rate Mixer with CAE & Fade Ramper/SLC Tuning/Max Level CS/Trivial Translation': '<S827>:1' */
/* '<S827>:1:3' numCSIn = MedusaFRMConfig.CS_in; */
/* '<S827>:1:4' NumCAEWeights = MedusaFRMConfig.NumTailComp.CS; */
/* '<S827>:1:6' NumRows = MedusaFRMConfig.CS_out; */
/* '<S827>:1:7' NumColumns = numCSIn + NumCAEWeights; */
/* '<S827>:1:8' if(~ MedusaFRMConfig.includeCAE) */
/* '<S827>:1:9' NumColumns = numCSIn; */
/*  Checks if the parameter satisfies dimensionality requirements */
/* '<S827>:1:13' if(maxGain_CS.Size(1) ~= NumRows || maxGain_CS.Size(2) ~= NumColumns) */
/*@>c66a2a*/if ((/*@>d46fa7*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d47390*/MaxLevel_CS_b./*@>d47387*/Size/*@>d46e30*/[/*@>d46e29*/0]/*@>c66a24*/ != /*@>d454de*/2.0)/*@>d47226*/ || (/*@>d46fad*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d47393*/MaxLevel_CS_b./*@>d4738a*/Size/*@>d46e39*/[/*@>d46e32*/1]/*@>c66a26*/ != /*@>d454df*/6.0)) {
    /* '<S827>:1:14' TranslateError('The parameter ''medusa_frm_cs_max'' must be a matrix consisting of %<"\%d rows and \%d columns.\', NumRows, NumColumns);"> */
    /* TRANSLATEERROR (For use in Functions triggered by TranslationTrigger blocks.) */
    /* Print error message during tune data translation. */
    /*   Do not include a final newline as this behavior is already built in. */
    /*   Note that escape sequences such as '\n' will not work here. To emit */
    /*   special characters, pass them in as arguments to %<"\%c or \%s format"> */
    /*   specifiers. */
    /*    Copyright 2018-2019 Bose Corporation */
    /* 'TranslateError:10' coder.extrinsic('gcb') */
    /* 'TranslateError:11' coder.extrinsic('warning') */
    /* 'TranslateError:12' coder.allowpcode('plain'); */
    /*  enable code generation from p-file */
    /* 'TranslateError:14' if (coder.target('MATLAB')) */
    /* 'TranslateError:18' if (coder.target('Sfun')) */
    /* 'TranslateError:21' else */
    /* 'TranslateError:22' count = numel(varargin); */
    /* 'TranslateError:23' fixedArgs = varargin; */
    /* 'TranslateError:24' for i=1:count */
    /* 'TranslateError:25' if (ischar(varargin{i})) */
    /* 'TranslateError:26' fixedArgs{i} = [varargin{i} char(0)]; */
    /* 'TranslateError:25' if (ischar(varargin{i})) */
    /* 'TranslateError:29' coder.ceval('TranslateError',fixedArgs{:}); */
    /*@>d46b21*/memcpy(&/*@>d46780*/c_data[/*@>d46770*/0], &/*@>d46788*/e/*@>d46789*/[/*@>d4677d*/0], /*@>d4677f*/89U/*@>d4678c*/ * /*@>d4678b*/sizeof(char_T));
    /*@>d46a0b*/TranslateError(&/*@>d46455*/c_data/*@>d46468*/[/*@>d454e6*/0], /*@>d454e7*/2.0, /*@>d454e8*/6.0);
}
/*  Checks if the parameter values follow bound requirements */
/* '<S827>:1:18' checkValues = (maxGain_CS.Value < 0); */
/*@>d44a62*/for (/*@>d472b8*/i = /*@>d472b7*/0; /*@>d472c2*/i < /*@>d472c0*/12; /*@>d472be*/i/*@>d472c6*/++) {
    /*@>d45525*/x/*@>d44a54*/[/*@>d45523*/i]/*@>d44a55*/ = (/*@>d46fb3*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d47396*/MaxLevel_CS_b./*@>d4738d*/Value/*@>d46e43*/[/*@>d46e3c*/i]/*@>d44a44*/ < /*@>d45513*/0.0);
}
/* '<S827>:1:19' if(sum(sum(checkValues))) */
/*@>c66a9e*/for (/*@>d472a7*/i = /*@>d472a6*/0; /*@>d472b1*/i < /*@>d472af*/6; /*@>d472ad*/i/*@>d472c7*/++) {
    /*@>d454f5*/xpageoffset/*@>c66a94*/ = /*@>d45504*/i/*@>d455b6*/ << /*@>d455b5*/1;
    /*@>d4556f*/nz/*@>d45241*/[/*@>d45571*/i] = (int8_T)(/*@>d46e4e*/x/*@>d46e50*/[/*@>d46e4c*/xpageoffset/*@>d46e4a*/ + /*@>d46e4d*/1]/*@>d459fa*/ + /*@>d46e54*/x/*@>d46e56*/[/*@>d46e53*/xpageoffset]);
}
/*@>d454f7*/xpageoffset/*@>c66ab1*/ = /*@>d46e46*/nz/*@>d46e48*/[/*@>d46e45*/0];
/*@>c66aba*/for (/*@>d47296*/i = /*@>d47295*/0; /*@>d472a0*/i < /*@>d4729e*/5; /*@>d4729c*/i/*@>d472c8*/++) {
    /*@>d45500*/xpageoffset/*@>d472c9*/ += /*@>d46e5c*/nz/*@>d46e5e*/[/*@>d46e5a*/i/*@>d46e58*/ + /*@>d46e5b*/1];
}
/*@>c66a30*/if (/*@>d454e0*/xpageoffset/*@>c66a29*/ != /*@>d454e2*/0) {
    /*  Results in 0 if all values in the matrix respect the bound requirements */
    /* '<S827>:1:20' TranslateError('The weights in ''medusa_frm_cs_max'' must be greater than or equal to 0.'); */
    /* TRANSLATEERROR (For use in Functions triggered by TranslationTrigger blocks.) */
    /* Print error message during tune data translation. */
    /*   Do not include a final newline as this behavior is already built in. */
    /*   Note that escape sequences such as '\n' will not work here. To emit */
    /*   special characters, pass them in as arguments to %<"\%c or \%s format"> */
    /*   specifiers. */
    /*    Copyright 2018-2019 Bose Corporation */
    /* 'TranslateError:10' coder.extrinsic('gcb') */
    /* 'TranslateError:11' coder.extrinsic('warning') */
    /* 'TranslateError:12' coder.allowpcode('plain'); */
    /*  enable code generation from p-file */
    /* 'TranslateError:14' if (coder.target('MATLAB')) */
    /* 'TranslateError:18' if (coder.target('Sfun')) */
    /* 'TranslateError:21' else */
    /* 'TranslateError:22' count = numel(varargin); */
    /* 'TranslateError:23' fixedArgs = varargin; */
    /* 'TranslateError:24' for i=1:count */
    /* 'TranslateError:25' if (ischar(varargin{i})) */
    /* 'TranslateError:26' fixedArgs{i} = [varargin{i} char(0)]; */
    /* 'TranslateError:29' coder.ceval('TranslateError',fixedArgs{:}); */
    /*@>d46b23*/memcpy(&/*@>d4671e*/d_data[/*@>d4670e*/0], &/*@>d46726*/f/*@>d46727*/[/*@>d4671b*/0], /*@>d4671d*/71U/*@>d4672a*/ * /*@>d46729*/sizeof(char_T));
    /*@>d46a0f*/TranslateError(&/*@>d464b3*/d_data/*@>d464c6*/[/*@>d454ec*/0]);
}
/*  Assigning the parameter values to respective tuneTOPS */
/* '<S827>:1:24' TOP = maxGain_CS.Value(:, 1:numCSIn); */
/*@>d46b25*/memcpy(&/*@>d46fbf*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d47399*/TOP_c4/*@>d466bf*/[/*@>d466ae*/0], &/*@>d46fc5*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d4739c*/MaxLevel_CS_b./*@>d47384*/Value[0], /*@>d466bd*/12U/*@>d466d0*/ * /*@>d466cf*/sizeof(real_T));
/* '<S827>:1:25' if(~ MedusaFRMConfig.includeCAE) */
/* '<S827>:1:26' TOP_CAE = zeros(NumRows, NumCAEWeights); */
/*@>d46fcb*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d4739f*/TOP_CAE_f/*@>d45309*/[/*@>d4557d*/0]/*@>d45308*/ = /*@>d4557c*/0.0;
/*@>d46fd1*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d473a2*/TOP_CAE_f/*@>d45312*/[/*@>d45581*/1]/*@>d45311*/ = /*@>d45580*/0.0;
/*@>d46fd7*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d473a5*/TOP_CAE_f/*@>d4531b*/[/*@>d45585*/2]/*@>d4531a*/ = /*@>d45584*/0.0;
/*@>d46fdd*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d473a8*/TOP_CAE_f/*@>d45324*/[/*@>d45589*/3]/*@>d45323*/ = /*@>d45588*/0.0;
/* {E!d92}End of MATLAB Function: '<S808>/Trivial Translation' */
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void FuncTranslation_Model_141_3402(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(57, 0, fcnProtoType)>
%endfunction

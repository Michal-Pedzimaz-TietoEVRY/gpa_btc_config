%implements s798_b0_evwnd_77_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

real_T b;
int32_T nz[7];
int32_T i;
int32_T k;
char_T c_data[95];
char_T d_data[77];
boolean_T x[77];
static const char_T e[95] = %<(TLC_STR_CTX(81))>;
static const char_T f[77] = %<(TLC_STR_CTX(82))>;
%closefile localVarDecl
/* {S!d169}MATLAB Function: '<S886>/Trivial Translation' */
/* {S!d172}MATLAB Function: '<S886>/Trivial Translation' incorporates:
 *  S-Function (TuneVarMEX): '<S886>/Tune Variable'
 */
/*  Invoke the function trigger output */
/* MATLAB Function 'TranslateTrigger/tfunc': '<S910>:1' */
/* '<S910>:1:3' f(); */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 3/On/Premix/Premix with Mono-Surround & CAE with Fade Ramper/SLC Tuning/Max Level Right/Trivial Translation': '<S909>:1' */
/* '<S909>:1:3' numLRIn = MedusaPremixConfig.LR_in; */
/* '<S909>:1:4' NumCAEWeights = MedusaPremixConfig.NumTailComp.LR; */
/* '<S909>:1:6' NumRows = MedusaPremixConfig.LR_out; */
/* '<S909>:1:7' NumColumns = numLRIn + NumCAEWeights; */
/* '<S909>:1:8' if(~ MedusaPremixConfig.includeCAE) */
/* '<S909>:1:9' NumColumns = numLRIn; */
/*  Checks if the parameter satisfies dimensionality requirements */
/* '<S909>:1:13' if(maxGain_Right.Size(1) ~= NumRows || maxGain_Right.Size(2) ~= NumColumns) */
/*@>c67e76*/if ((/*@>d7be3f*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d7c232*/MaxLevel_Right./*@>d7c229*/Size/*@>d7bcbf*/[/*@>d7bcb8*/0]/*@>c67e70*/ != /*@>d7a2ef*/11.0)/*@>d7c0af*/ || (/*@>d7be45*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d7c235*/MaxLevel_Right./*@>d7c22c*/Size/*@>d7bcc8*/[/*@>d7bcc1*/1]/*@>c67e72*/ != /*@>d7a2f0*/7.0)) {
    /* '<S909>:1:14' TranslateError('The parameter ''medusa_premix_right_max'' must be a matrix consisting of %<"\%d rows and \%d columns.\', NumRows, NumColumns);"> */
    /* TRANSLATEERROR (For use in Functions triggered by TranslationTrigger blocks.) */
    /* Print error message during tune data translation. */
    /*   Do not include a final newline as this behavior is already built in. */
    /*   Note that escape sequences such as '\n' will not work here. To emit */
    /*   special characters, pass them in as arguments to %<"\%c or \%s format"> */
    /*   specifiers. */
    /*    Copyright 2018-2019 Bose Corporation */
    /* 'TranslateError:10' coder.extrinsic('gcb') */
    /* 'TranslateError:11' coder.extrinsic('warning') */
    /* 'TranslateError:12' coder.allowpcode('plain'); */
    /*  enable code generation from p-file */
    /* 'TranslateError:14' if (coder.target('MATLAB')) */
    /* 'TranslateError:18' if (coder.target('Sfun')) */
    /* 'TranslateError:21' else */
    /* 'TranslateError:22' count = numel(varargin); */
    /* 'TranslateError:23' fixedArgs = varargin; */
    /* 'TranslateError:24' for i=1:count */
    /* 'TranslateError:25' if (ischar(varargin{i})) */
    /* 'TranslateError:26' fixedArgs{i} = [varargin{i} char(0)]; */
    /* 'TranslateError:25' if (ischar(varargin{i})) */
    /* 'TranslateError:29' coder.ceval('TranslateError',fixedArgs{:}); */
    /*@>d7b98f*/memcpy(&/*@>d7b5fc*/c_data[/*@>d7b5ec*/0], &/*@>d7b604*/e/*@>d7b605*/[/*@>d7b5f9*/0], /*@>d7b5fb*/95U/*@>d7b608*/ * /*@>d7b607*/sizeof(char_T));
    /*@>d7b879*/TranslateError(&/*@>d7b2cf*/c_data/*@>d7b2e2*/[/*@>d7a2f7*/0], /*@>d7a2f8*/11.0, /*@>d7a2f9*/7.0);
}
/*  Checks if the parameter values follow bound requirements */
/* '<S909>:1:18' checkValues = (maxGain_Right.Value < 0); */
/*@>d79840*/for (/*@>d7c153*/i = /*@>d7c152*/0; /*@>d7c15d*/i < /*@>d7c15b*/77; /*@>d7c159*/i/*@>d7c161*/++) {
    /*@>d7a34d*/x/*@>d79832*/[/*@>d7a34b*/i]/*@>d79833*/ = (/*@>d7be4b*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d7c238*/MaxLevel_Right./*@>d7c22f*/Value/*@>d7bcd2*/[/*@>d7bccb*/i]/*@>d79822*/ < /*@>d7a339*/0.0);
}
/* '<S909>:1:19' if(sum(sum(checkValues))) */
/*@>c67eeb*/for (/*@>d7c131*/i = /*@>d7c130*/0; /*@>d7c13b*/i < /*@>d7c139*/7; /*@>d7c137*/i/*@>d7c162*/++) {
    int32_T xpageoffset;
    /*@>d7a306*/xpageoffset/*@>c67ee0*/ = /*@>d7a31a*/i/*@>d7a3da*/ * /*@>d7a305*/11;
    /*@>d7a358*/nz/*@>d7a02b*/[/*@>d7a35a*/i]/*@>c67ee4*/ = /*@>d7bcdb*/x/*@>d7bcdd*/[/*@>d7bcda*/xpageoffset];
/*@>c67eef*/    for (/*@>d7c142*/k = /*@>d7c141*/0; /*@>d7c14c*/k < /*@>d7c14a*/10; /*@>d7c148*/k/*@>d7c163*/++) {
        /*@>d7ac7f*/nz/*@>d7ac7e*/[/*@>d7ac81*/i] += /*@>d7bcee*/x/*@>d7bcf0*/[(/*@>d7bcea*/xpageoffset/*@>d7bce8*/ + /*@>d7bcec*/k)/*@>d7bce7*/ + /*@>d7bced*/1];
    }
}
/*@>d7a30d*/b/*@>c67f04*/ = /*@>d7bcd5*/nz/*@>d7bcd7*/[/*@>d7bcd4*/0];
/*@>c67f0d*/for (/*@>d7c120*/i = /*@>d7c11f*/0; /*@>d7c12a*/i < /*@>d7c128*/6; /*@>d7c126*/i/*@>d7c165*/++) {
    /*@>d7a316*/b/*@>d7c166*/ += /*@>d7a64e*/(real_T)/*@>d7bce3*/nz/*@>d7bce5*/[/*@>d7bce1*/i/*@>d7bcdf*/ + /*@>d7bce2*/1];
}
/*@>c67e7c*/if (/*@>d7a2f1*/b/*@>c67e75*/ != /*@>d7a2f3*/0.0) {
    /*  Results in 0 if all values in the matrix respect the bound requirements */
    /* '<S909>:1:20' TranslateError('The weights in ''medusa_premix_right_max'' must be greater than or equal to 0.'); */
    /* TRANSLATEERROR (For use in Functions triggered by TranslationTrigger blocks.) */
    /* Print error message during tune data translation. */
    /*   Do not include a final newline as this behavior is already built in. */
    /*   Note that escape sequences such as '\n' will not work here. To emit */
    /*   special characters, pass them in as arguments to %<"\%c or \%s format"> */
    /*   specifiers. */
    /*    Copyright 2018-2019 Bose Corporation */
    /* 'TranslateError:10' coder.extrinsic('gcb') */
    /* 'TranslateError:11' coder.extrinsic('warning') */
    /* 'TranslateError:12' coder.allowpcode('plain'); */
    /*  enable code generation from p-file */
    /* 'TranslateError:14' if (coder.target('MATLAB')) */
    /* 'TranslateError:18' if (coder.target('Sfun')) */
    /* 'TranslateError:21' else */
    /* 'TranslateError:22' count = numel(varargin); */
    /* 'TranslateError:23' fixedArgs = varargin; */
    /* 'TranslateError:24' for i=1:count */
    /* 'TranslateError:25' if (ischar(varargin{i})) */
    /* 'TranslateError:26' fixedArgs{i} = [varargin{i} char(0)]; */
    /* 'TranslateError:29' coder.ceval('TranslateError',fixedArgs{:}); */
    /*@>d7b991*/memcpy(&/*@>d7b599*/d_data[/*@>d7b589*/0], &/*@>d7b5a1*/f/*@>d7b5a2*/[/*@>d7b596*/0], /*@>d7b598*/77U/*@>d7b5a5*/ * /*@>d7b5a4*/sizeof(char_T));
    /*@>d7b87d*/TranslateError(&/*@>d7b32d*/d_data/*@>d7b340*/[/*@>d7a2fd*/0]);
}
/*  Assigning the parameter values to respective tuneTOPS */
/* '<S909>:1:24' TOP = maxGain_Right.Value(:, 1:numLRIn); */
/*@>d7b993*/memcpy(&/*@>d7be57*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d7c23b*/TOP_d/*@>d7b53a*/[/*@>d7b529*/0], &/*@>d7be5d*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d7c23e*/MaxLevel_Right./*@>d7c226*/Value[0], /*@>d7b538*/77U/*@>d7b54b*/ * /*@>d7b54a*/sizeof(real_T));
/* '<S909>:1:25' if(~ MedusaPremixConfig.includeCAE) */
/* '<S909>:1:26' TOP_CAE = zeros(NumRows, NumCAEWeights); */
/*@>d7b99e*/memset(&/*@>d7be69*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d7c241*/TOP_CAE_c/*@>d7b6ac*/[/*@>d7b6a8*/0], /*@>d7c118*/0, /*@>d7b6aa*/33U/*@>d7b6b2*/ * /*@>d7b6b1*/sizeof(real_T));
/* {E!d172}End of MATLAB Function: '<S886>/Trivial Translation' */
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void FuncTranslation_Model_141_4137(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(77, 0, fcnProtoType)>
%endfunction

%implements s798_b0_evwnd_328_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

int32_T i;
%closefile localVarDecl
/* {S!d2285}MATLAB Function: '<S1135>/channel_ramper_translation' */
/* {S!d2288}MATLAB Function: '<S1135>/channel_ramper_translation' incorporates:
 *  S-Function (TuneVarMEX): '<S1135>/TuneVarChannelRamperMap'
 */
/*  Invoke the function trigger output */
/* MATLAB Function 'TranslateTrigger/tfunc': '<S1142>:1' */
/* '<S1142>:1:3' f(); */
/*  %<"\%Inputs"> */
/*  Parameters */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/SleepingBeauty/SleepingBeauty/Enabled/SleepingBeautyFR/InnerLink/channel_ramper_translation': '<S1141>:1' */
/*  Function that verifies channel-to-ramper map is valid */
/*  Takes channelRamperMap and channelCount as inputs, and  */
/*  number of rampers as a parameter */
/* '<S1141>:1:7' argName = 'SleepingBeauty'; */
/*  Ensure each channel is present in the map */
/* '<S1141>:1:10' inputMapWidth = numel(TuneChanRampMap.Value); */
/* '<S1141>:1:11' if (inputMapWidth ~= channelCount) */
/*  Verifies if each channel is assigned to one of the 5 possible rampers. */
/* '<S1141>:1:20' if (numel(unique(TuneChanRampMap.Value)) > (MaskNumRampers + 1)) */
/*  Verify that a value of 0 was not incorrectly entered as a ramper */
/* '<S1141>:1:28' if (sum(TuneChanRampMap.Value == 0) > 0) */
/* '<S1141>:1:34' ChanRampMap = int32(TuneChanRampMap.Value); */
/*@>f5da2e*/for (/*@>f5f105*/i = /*@>f5f104*/0; /*@>f5f10f*/i < /*@>f5f10d*/22; /*@>f5f10b*/i/*@>f5f113*/++) {
    /*@>f5ef2b*/Model_TranslationEngine64_B./*@>f5f13d*/ChanRampMap_i/*@>f5daaf*/[/*@>f5e40e*/i]/*@>f5da1d*/ = /*@>f5e415*/(int32_T)%<SLibCG_DumpSSCode("/*@[f5f0c5*/",(SLibCGCallSubFcn("rt_roundd_snf", ["/*@>f5f15c*/Model_TranslationEngine64_B./*@>f5f15b*/ChannelToRamperMap_m./*@>f5f15a*/Value/*@>f5f159*/[/*@>f5f15f*/i]"], 328, 1, 0)),"/*@]*/")>;
}
/* {E!d2288}End of MATLAB Function: '<S1135>/channel_ramper_translation' */
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void FuncTranslation_Model_596(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(328, 1, fcnProtoType)>
%endfunction

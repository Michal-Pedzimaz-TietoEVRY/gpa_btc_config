%implements s798_b0_evwnd_319_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

int32_T i;
%closefile localVarDecl
/* {S!d2249}MATLAB Function: '<S1092>/Channel_Ramper_Translation' */
/* {S!d2252}MATLAB Function: '<S1092>/Channel_Ramper_Translation' incorporates:
 *  S-Function (TuneVarMEX): '<S1092>/TuneVarChannelRamperMap'
 */
/*  Invoke the function trigger output */
/* MATLAB Function 'TranslateTrigger/tfunc': '<S1098>:1' */
/* '<S1098>:1:3' f(); */
/*  %<"\% inputs"> */
/*  parameters */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/SleepingBeauty/SleepingBeauty/Enabled/FadeRamperDR/InnerLink/Channel_Ramper_Translation': '<S1093>:1' */
/*  Verifies if each channel is assigned to either the 'Front'(1) or 'Rear'(2) */
/*  groups.  */
/* '<S1093>:1:7' argName = 'Fade'; */
/*  Ensure each channel is present in the map */
/* '<S1093>:1:10' inputMapWidth = numel(TuneChanRampMap.Value); */
/* '<S1093>:1:11' if (inputMapWidth ~= channelCount) */
/*  Verify that the channels are assigned to valid group numbers */
/* '<S1093>:1:19' if (numel(unique(TuneChanRampMap.Value)) > MaskNumChannelGroups + 1) */
/*  Ensure that a value of 0 was not entered as a ramper */
/* '<S1093>:1:26' if (sum(TuneChanRampMap.Value == 0) > 0) */
/*  Output */
/* '<S1093>:1:33' ChanRampMap = int32(TuneChanRampMap.Value); */
/*@>f5641e*/for (/*@>f57af5*/i = /*@>f57af4*/0; /*@>f57aff*/i < /*@>f57afd*/30; /*@>f57afb*/i/*@>f57b03*/++) {
    /*@>f5791b*/Model_TranslationEngine64_B./*@>f57b2d*/ChanRampMap_a/*@>f5649f*/[/*@>f56dfe*/i]/*@>f5640d*/ = /*@>f56e05*/(int32_T)%<SLibCG_DumpSSCode("/*@[f57ab5*/",(SLibCGCallSubFcn("rt_roundd_snf", ["/*@>f57b4c*/Model_TranslationEngine64_B./*@>f57b4b*/ChannelToRamperMap./*@>f57b4a*/Value/*@>f57b49*/[/*@>f57b4f*/i]"], 319, 1, 0)),"/*@]*/")>;
}
/* {E!d2252}End of MATLAB Function: '<S1092>/Channel_Ramper_Translation' */
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void FuncTranslation_Model_175_136_99(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(319, 1, fcnProtoType)>
%endfunction

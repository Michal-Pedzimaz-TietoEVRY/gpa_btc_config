%implements s798_b0_evwnd_264_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

int32_T i;
real32_T Samples;
char_T b_data[56];
static const char_T c[56] = %<(TLC_STR_CTX(116))>;
%closefile localVarDecl
/* {S!d1735}MATLAB Function: '<S530>/Ms2Samples' */
/* {S!d1738}MATLAB Function: '<S530>/Ms2Samples' incorporates:
 *  S-Function (TuneVarMEX): '<S530>/Tune Variable'
 */
/*  Invoke the function trigger output */
/* MATLAB Function 'TranslateTrigger/tfunc': '<S535>:1' */
/* '<S535>:1:3' f(); */
/*  Convert delay time to delay samples */
/*  Check that delay time in msec will not exceed allotted delay buffer */
/* MATLAB Function 'ModelPreAmp/DecRate/AudioPilot35/EntertainmentLevelDetection/PreProcessing/MusicDelay/Ms2Samples': '<S533>:1' */
/* '<S533>:1:5' Samples = floor(DelayTimeMs.Value*SampleRate/1000); */
/*@>ec3736*/Samples/*@>c73b03*/ = /*@>ec3e46*/floorf(/*@>ec4348*/Model_TranslationEngine64_B./*@>ec451e*/LatencyMs.Value/*@>ec3764*/ * /*@>ec3758*/44100.0F/*@>c73b08*/ / /*@>ec373a*/1000.0F);
/*  Use floor to minimize the risk of going noncausal  */
/* '<S533>:1:8' if Samples > MaxLatencySamples */
/*@>c73ade*/if (/*@>c73adc*/(real_T)/*@>ec3730*/Samples/*@>c73adb*/ > /*@>ec437f*/Model_TranslationEngine64_ConstB./*@>ec4524*/CapturedTuneConst_dc) {
    /* '<S533>:1:9' TranslateError('Delay amount cannot be greater than specified max delay'); */
    /* TRANSLATEERROR (For use in Functions triggered by TranslationTrigger blocks.) */
    /* Print error message during tune data translation. */
    /*   Do not include a final newline as this behavior is already built in. */
    /*   Note that escape sequences such as '\n' will not work here. To emit */
    /*   special characters, pass them in as arguments to %<"\%c or \%s format"> */
    /*   specifiers. */
    /*    Copyright 2018-2019 Bose Corporation */
    /* 'TranslateError:10' coder.extrinsic('gcb') */
    /* 'TranslateError:11' coder.extrinsic('warning') */
    /* 'TranslateError:12' coder.allowpcode('plain'); */
    /*  enable code generation from p-file */
    /* 'TranslateError:14' if (coder.target('MATLAB')) */
    /* 'TranslateError:18' if (coder.target('Sfun')) */
    /* 'TranslateError:21' else */
    /* 'TranslateError:22' count = numel(varargin); */
    /* 'TranslateError:23' fixedArgs = varargin; */
    /* 'TranslateError:24' for i=1:count */
    /* 'TranslateError:25' if (ischar(varargin{i})) */
    /* 'TranslateError:26' fixedArgs{i} = [varargin{i} char(0)]; */
    /* 'TranslateError:29' coder.ceval('TranslateError',fixedArgs{:}); */
/*@>ec3552*/    for (/*@>ec44cd*/i = /*@>ec44cc*/0; /*@>ec44d7*/i < /*@>ec44d5*/56; /*@>ec44d3*/i/*@>ec44db*/++) {
        /*@>ec3c65*/b_data[/*@>ec374f*/i]/*@>ec3545*/ = /*@>ec3ffb*/c/*@>ec3ffd*/[/*@>ec3ffa*/i];
    }
    /*@>ec3e48*/TranslateError(&/*@>ec3c4e*/b_data/*@>ec3c61*/[/*@>ec3735*/0]);
}
/*@>ec434e*/Model_TranslationEngine64_B./*@>ec4521*/Samples/*@>c73ad5*/ = /*@>ec372e*/Samples;
/* {E!d1738}End of MATLAB Function: '<S530>/Ms2Samples' */
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void FuncTranslation_Model_120_439(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(264, 0, fcnProtoType)>
%endfunction

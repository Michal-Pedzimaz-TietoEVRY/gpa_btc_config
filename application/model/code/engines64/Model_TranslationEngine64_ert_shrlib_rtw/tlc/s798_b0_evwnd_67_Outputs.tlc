%implements s798_b0_evwnd_67_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

real_T b;
int32_T nz[7];
int32_T i;
int32_T k;
char_T c_data[98];
char_T d_data[80];
boolean_T x[77];
static const char_T e[98] = %<(TLC_STR_CTX(67))>;
static const char_T f[80] = %<(TLC_STR_CTX(68))>;
%closefile localVarDecl
/* {S!d129}MATLAB Function: '<S855>/Trivial Translation' */
/* {S!d132}MATLAB Function: '<S855>/Trivial Translation' incorporates:
 *  S-Function (TuneVarMEX): '<S855>/Tune Variable'
 */
/*  Invoke the function trigger output */
/* MATLAB Function 'TranslateTrigger/tfunc': '<S870>:1' */
/* '<S870>:1:3' f(); */
/* MATLAB Function 'ModelPreAmp/DecRate/Medusa5H1/MedusaHoligram/Medusa5H1 Part 3/On/Premix/Premix with Mono-Surround & CAE with Fade Ramper/Fade Tuning/Downmix Weights Left/Trivial Translation': '<S869>:1' */
/* '<S869>:1:3' numLRIn = MedusaPremixConfig.LR_in; */
/* '<S869>:1:4' NumCAEWeights = MedusaPremixConfig.NumTailComp.LR; */
/* '<S869>:1:6' NumRows = MedusaPremixConfig.LR_out; */
/* '<S869>:1:7' NumColumns = numLRIn + NumCAEWeights; */
/* '<S869>:1:8' if(~ MedusaPremixConfig.includeCAE) */
/* '<S869>:1:9' NumColumns = numLRIn; */
/*  Checks if the parameter satisfies dimensionality requirements */
/* '<S869>:1:13' if(downmix_wts_Left.Size(1) ~= NumRows || downmix_wts_Left.Size(2) ~= NumColumns) */
/*@>c67542*/if ((/*@>d63826*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d63c19*/DownmixWeights_Left./*@>d63c10*/Size/*@>d636a6*/[/*@>d6369f*/0]/*@>c6753c*/ != /*@>d61cd6*/11.0)/*@>d63a96*/ || (/*@>d6382c*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d63c1c*/DownmixWeights_Left./*@>d63c13*/Size/*@>d636af*/[/*@>d636a8*/1]/*@>c6753e*/ != /*@>d61cd7*/7.0)) {
    /* '<S869>:1:14' TranslateError('The parameter ''medusa_premix_downmix_left'' must be a matrix consisting of %<"\%d rows and \%d columns.\', NumRows, NumColumns);"> */
    /* TRANSLATEERROR (For use in Functions triggered by TranslationTrigger blocks.) */
    /* Print error message during tune data translation. */
    /*   Do not include a final newline as this behavior is already built in. */
    /*   Note that escape sequences such as '\n' will not work here. To emit */
    /*   special characters, pass them in as arguments to %<"\%c or \%s format"> */
    /*   specifiers. */
    /*    Copyright 2018-2019 Bose Corporation */
    /* 'TranslateError:10' coder.extrinsic('gcb') */
    /* 'TranslateError:11' coder.extrinsic('warning') */
    /* 'TranslateError:12' coder.allowpcode('plain'); */
    /*  enable code generation from p-file */
    /* 'TranslateError:14' if (coder.target('MATLAB')) */
    /* 'TranslateError:18' if (coder.target('Sfun')) */
    /* 'TranslateError:21' else */
    /* 'TranslateError:22' count = numel(varargin); */
    /* 'TranslateError:23' fixedArgs = varargin; */
    /* 'TranslateError:24' for i=1:count */
    /* 'TranslateError:25' if (ischar(varargin{i})) */
    /* 'TranslateError:26' fixedArgs{i} = [varargin{i} char(0)]; */
    /* 'TranslateError:25' if (ischar(varargin{i})) */
    /* 'TranslateError:29' coder.ceval('TranslateError',fixedArgs{:}); */
    /*@>d63376*/memcpy(&/*@>d62fe3*/c_data[/*@>d62fd3*/0], &/*@>d62feb*/e/*@>d62fec*/[/*@>d62fe0*/0], /*@>d62fe2*/98U/*@>d62fef*/ * /*@>d62fee*/sizeof(char_T));
    /*@>d63260*/TranslateError(&/*@>d62cb6*/c_data/*@>d62cc9*/[/*@>d61cde*/0], /*@>d61cdf*/11.0, /*@>d61ce0*/7.0);
}
/*  Checks if the parameter values follow bound requirements */
/* '<S869>:1:18' checkValues = (downmix_wts_Left.Value < 0); */
/*@>d61227*/for (/*@>d63b3a*/i = /*@>d63b39*/0; /*@>d63b44*/i < /*@>d63b42*/77; /*@>d63b40*/i/*@>d63b48*/++) {
    /*@>d61d34*/x/*@>d61219*/[/*@>d61d32*/i]/*@>d6121a*/ = (/*@>d63832*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d63c1f*/DownmixWeights_Left./*@>d63c16*/Value/*@>d636b9*/[/*@>d636b2*/i]/*@>d61209*/ < /*@>d61d20*/0.0);
}
/* '<S869>:1:19' if(sum(sum(checkValues))) */
/*@>c675b7*/for (/*@>d63b18*/i = /*@>d63b17*/0; /*@>d63b22*/i < /*@>d63b20*/7; /*@>d63b1e*/i/*@>d63b49*/++) {
    int32_T xpageoffset;
    /*@>d61ced*/xpageoffset/*@>c675ac*/ = /*@>d61d01*/i/*@>d61dc1*/ * /*@>d61cec*/11;
    /*@>d61d3f*/nz/*@>d61a12*/[/*@>d61d41*/i]/*@>c675b0*/ = /*@>d636c2*/x/*@>d636c4*/[/*@>d636c1*/xpageoffset];
/*@>c675bb*/    for (/*@>d63b29*/k = /*@>d63b28*/0; /*@>d63b33*/k < /*@>d63b31*/10; /*@>d63b2f*/k/*@>d63b4a*/++) {
        /*@>d62666*/nz/*@>d62665*/[/*@>d62668*/i] += /*@>d636d5*/x/*@>d636d7*/[(/*@>d636d1*/xpageoffset/*@>d636cf*/ + /*@>d636d3*/k)/*@>d636ce*/ + /*@>d636d4*/1];
    }
}
/*@>d61cf4*/b/*@>c675d0*/ = /*@>d636bc*/nz/*@>d636be*/[/*@>d636bb*/0];
/*@>c675d9*/for (/*@>d63b07*/i = /*@>d63b06*/0; /*@>d63b11*/i < /*@>d63b0f*/6; /*@>d63b0d*/i/*@>d63b4c*/++) {
    /*@>d61cfd*/b/*@>d63b4d*/ += /*@>d62035*/(real_T)/*@>d636ca*/nz/*@>d636cc*/[/*@>d636c8*/i/*@>d636c6*/ + /*@>d636c9*/1];
}
/*@>c67548*/if (/*@>d61cd8*/b/*@>c67541*/ != /*@>d61cda*/0.0) {
    /*  Results in 0 if all values in the matrix respect the bound requirements */
    /* '<S869>:1:20' TranslateError('The weights in ''medusa_premix_downmix_left'' must be greater than or equal to 0.'); */
    /* TRANSLATEERROR (For use in Functions triggered by TranslationTrigger blocks.) */
    /* Print error message during tune data translation. */
    /*   Do not include a final newline as this behavior is already built in. */
    /*   Note that escape sequences such as '\n' will not work here. To emit */
    /*   special characters, pass them in as arguments to %<"\%c or \%s format"> */
    /*   specifiers. */
    /*    Copyright 2018-2019 Bose Corporation */
    /* 'TranslateError:10' coder.extrinsic('gcb') */
    /* 'TranslateError:11' coder.extrinsic('warning') */
    /* 'TranslateError:12' coder.allowpcode('plain'); */
    /*  enable code generation from p-file */
    /* 'TranslateError:14' if (coder.target('MATLAB')) */
    /* 'TranslateError:18' if (coder.target('Sfun')) */
    /* 'TranslateError:21' else */
    /* 'TranslateError:22' count = numel(varargin); */
    /* 'TranslateError:23' fixedArgs = varargin; */
    /* 'TranslateError:24' for i=1:count */
    /* 'TranslateError:25' if (ischar(varargin{i})) */
    /* 'TranslateError:26' fixedArgs{i} = [varargin{i} char(0)]; */
    /* 'TranslateError:29' coder.ceval('TranslateError',fixedArgs{:}); */
    /*@>d63378*/memcpy(&/*@>d62f80*/d_data[/*@>d62f70*/0], &/*@>d62f88*/f/*@>d62f89*/[/*@>d62f7d*/0], /*@>d62f7f*/80U/*@>d62f8c*/ * /*@>d62f8b*/sizeof(char_T));
    /*@>d63264*/TranslateError(&/*@>d62d14*/d_data/*@>d62d27*/[/*@>d61ce4*/0]);
}
/*  Assigning the parameter values to respective tuneTOPS */
/* '<S869>:1:24' TOP = downmix_wts_Left.Value(:, 1:numLRIn); */
/*@>d6337a*/memcpy(&/*@>d6383e*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d63c22*/TOP_ho4/*@>d62f21*/[/*@>d62f10*/0], &/*@>d63844*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d63c25*/DownmixWeights_Left./*@>d63c0d*/Value[0], /*@>d62f1f*/77U/*@>d62f32*/ * /*@>d62f31*/sizeof(real_T));
/* '<S869>:1:25' if(~ MedusaPremixConfig.includeCAE) */
/* '<S869>:1:26' TOP_CAE = zeros(NumRows, NumCAEWeights); */
/*@>d63385*/memset(&/*@>d63850*/Model_TranslationEngine64_Medusa5H1Part3_B./*@>d63c28*/TOP_CAE_bk/*@>d63093*/[/*@>d6308f*/0], /*@>d63aff*/0, /*@>d63091*/33U/*@>d63099*/ * /*@>d63098*/sizeof(real_T));
/* {E!d132}End of MATLAB Function: '<S855>/Trivial Translation' */
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void FuncTranslation_Model_141_3617(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(67, 0, fcnProtoType)>
%endfunction
